{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/Nayo/source/nayo.bundle.js","path":"nayo.bundle.js","modified":1,"renderable":1},{"_id":"themes/Nayo/source/nayo.min.css","path":"nayo.min.css","modified":1,"renderable":1},{"_id":"themes/Nayo/source/fonts/iconfont.32d1.svg","path":"fonts/iconfont.32d1.svg","modified":1,"renderable":1},{"_id":"themes/Nayo/source/fonts/iconfont.6239.eot","path":"fonts/iconfont.6239.eot","modified":1,"renderable":1},{"_id":"themes/Nayo/source/fonts/iconfont.e69a.woff","path":"fonts/iconfont.e69a.woff","modified":1,"renderable":1},{"_id":"themes/Nayo/source/images/donate1.png","path":"images/donate1.png","modified":1,"renderable":1},{"_id":"themes/Nayo/source/images/favicon.png","path":"images/favicon.png","modified":1,"renderable":1},{"_id":"themes/Nayo/source/images/donate2.png","path":"images/donate2.png","modified":1,"renderable":1},{"_id":"themes/Nayo/source/images/header.jpg","path":"images/header.jpg","modified":1,"renderable":1},{"_id":"themes/Nayo/source/images/placeholder.png","path":"images/placeholder.png","modified":1,"renderable":1},{"_id":"themes/Nayo/source/fonts/iconfont.7c23.ttf","path":"fonts/iconfont.7c23.ttf","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"e2efadfb98dd445235fdfe93e82287bf928eeba0","modified":1678107742613},{"_id":"source/_posts/Mongodb-Replica-Set-集群配置.md","hash":"76ee0d723ec350cf6bee607822ab4ada8f1b4d34","modified":1678109911391},{"_id":"source/_posts/.DS_Store","hash":"f1ccb0bdad0addefab385cbf3218116b5ba1f6c1","modified":1678107737605},{"_id":"source/_posts/VIM-配置.md","hash":"3f463680cbcbc3b117bcd39a48439ed90d08cbc9","modified":1678109911392},{"_id":"source/_posts/Mysql-群集配置.md","hash":"af2f6fd93a4d1e6e2bb8b6ea24d99fcedb3ff419","modified":1678109911392},{"_id":"source/_posts/不锈钢盆.md","hash":"6a326a3ff9c7bea330a449888005686a7183b77d","modified":1678109911394},{"_id":"source/_posts/互换-Ctrl-Caps-Lock-按键.md","hash":"5eb1bbf4bfba67059d24c1b93777af5cbbc32570","modified":1678109911397},{"_id":"source/_posts/VIM-配色方案-Molokai.md","hash":"ceb48fe7527310b3ba5f4ed5d374f85b24e6d1af","modified":1678109911392},{"_id":"source/_posts/Arduino-灯光控制.md","hash":"5d3e158ab5c4fd9c3b30ab475eb1457fae1b6006","modified":1678109911391},{"_id":"source/_posts/咖啡-耳机-钢笔.md","hash":"39a8cdf16470220f0ceb00083e835ae7977ea7c0","modified":1678109911407},{"_id":"source/_posts/三棱锥.md","hash":"e91fa81d326471a071707ef15b8f880befa41c83","modified":1678109911392},{"_id":"source/_posts/嘴.md","hash":"6f5a6e49adc81fd22b231b4bdf2af406c2a655c5","modified":1678109911413},{"_id":"source/_posts/可乐.md","hash":"b4d82a9180eba54ce65d3a71ee72ba0c4b7d65ad","modified":1678109911397},{"_id":"source/_posts/多面体.md","hash":"de539f6788e1594a1860b0ae5404402da0585bd1","modified":1678109911421},{"_id":"source/_posts/圆柱.md","hash":"957e72136dda9cfc57b67d1641dcf5abf6a9e034","modified":1678109911416},{"_id":"source/_posts/大海与船.md","hash":"04d67ee8ce1313b798c55fd10b2d430a12e05829","modified":1678109911423},{"_id":"source/_posts/梨-纸-牛奶.md","hash":"5ca2851048087f03bc3cac44a279a77a5e992f9b","modified":1678109911432},{"_id":"source/_posts/夕阳.md","hash":"0cd9ce18f4c47b50ea5a9c8529945026cbe4c744","modified":1678109911418},{"_id":"source/_posts/木棍.md","hash":"10a97c07fb6a018d17785107a42c2669dfe4217c","modified":1678109911429},{"_id":"source/_posts/周末.md","hash":"10fb63601ad23d78295eafdf61dea4cc217d0b9f","modified":1678109911400},{"_id":"source/_posts/球.md","hash":"99dec946835907ee395dfa0b4e98b130f0cf5961","modified":1678109911436},{"_id":"source/_posts/苹果.md","hash":"7bacb7ff6aaa6e648ad3035a3317cc17a9c59858","modified":1678109911449},{"_id":"source/_posts/眼睛.md","hash":"131798c5ade8409d4a839deff7e5847c80fa1581","modified":1678109911441},{"_id":"source/_posts/贯穿体-圆锥.md","hash":"0ab6ce348631b526db5ba98f594fcf690eb81a17","modified":1678109911451},{"_id":"source/_posts/贯穿体.md","hash":"b48112416df51cac0f456fdd2ac3057e356d156c","modified":1678109911453},{"_id":"source/_posts/贯穿体2.md","hash":"51c42c7358824f4bdea2893957900c7b867dfb54","modified":1678109911456},{"_id":"source/_posts/耳.md","hash":"916594145111f476a5cff21624496d6c667fee9e","modified":1678109911444},{"_id":"source/_posts/贯穿体3.md","hash":"1665037375f9b259439e75bd542125b7ba736fc0","modified":1678109911459},{"_id":"source/_posts/灯泡.md","hash":"d24bb8e2219091e9c24540ab335b629564915cef","modified":1678109911434},{"_id":"source/_posts/眼.md","hash":"7c4efaa22093f8a470dfab014782314aefa67cbb","modified":1678109911439},{"_id":"source/_posts/配置-Git-服务.md","hash":"474fd1a0b42d8a2b27448ff08981a7bfce027ed3","modified":1678109911461},{"_id":"source/_posts/鸟.md","hash":"40ace948e4f60c504a0a268fe0af4113189fbaa8","modified":1678109911464},{"_id":"source/_posts/陶罐.md","hash":"b334ad8dac858183e35797c6478fdaf8ddfb566a","modified":1678109911461},{"_id":"source/_posts/香蕉.md","hash":"ec0dfbde924afad7e4f2beea0ba05cf99a99e7f5","modified":1678109911463},{"_id":"source/_posts/鼻.md","hash":"79cff9a8137dc774fa1e8c48ae674ffdfd482833","modified":1678109911467},{"_id":"source/_posts/苹果/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1678104604165},{"_id":"source/_posts/Arduino-灯光控制/light.jpg","hash":"580f3000735cdf2ee5e080ef86ea35db41002b17","modified":1678109911391},{"_id":"themes/Nayo/.DS_Store","hash":"238fed06f5c8453432bbcaf16e1a865c779193d9","modified":1678103031819},{"_id":"themes/Nayo/package.json","hash":"c97d112b67faf58522dc117c96378059d27d290c","modified":1678109911495},{"_id":"themes/Nayo/_config.yml","hash":"928d4931b870e3c4e3a98aac5fe30ed9a8f8b2ab","modified":1678109911492},{"_id":"themes/Nayo/.gitignore","hash":"299f75c65d24a7e13d4bb4469103aa2e857cbcae","modified":1678109911492},{"_id":"themes/Nayo/languages/zh-CN.yml","hash":"9eceb80b19fd5417b392a6ed926e4aeca6ac1a3b","modified":1678109911492},{"_id":"themes/Nayo/README.md","hash":"15cce5dc70a820c790d0e64f6a130a4611b5dd28","modified":1678109911492},{"_id":"themes/Nayo/languages/zh-TW.yml","hash":"194db714054791bd51e9ed26137c6906fddc5daa","modified":1678109911492},{"_id":"themes/Nayo/languages/en.yml","hash":"8746773e1de995ec500aba99738cbd1a4ad6a2af","modified":1678109911492},{"_id":"themes/Nayo/webpack.config.js","hash":"85e63c800405492417283222fb5ae39bb83f9442","modified":1678109911504},{"_id":"themes/Nayo/layout/about.ejs","hash":"1a814f1311f597b7a8c021a75c50f6de5f9e99bd","modified":1678109911494},{"_id":"themes/Nayo/scripts/render_img.js","hash":"2e81fef29d1ca17ca8221b34ce253076d1c1d2e5","modified":1678109911495},{"_id":"themes/Nayo/layout/index.ejs","hash":"716392b4e55eefd090e8e0687c6dace6ea3d1927","modified":1678109911494},{"_id":"themes/Nayo/layout/category.ejs","hash":"84f00268e55716e64e080a41d735c9974441fb9a","modified":1678109911494},{"_id":"themes/Nayo/layout/archive.ejs","hash":"b7075429add679122779ad1e97c8495821004150","modified":1678109911494},{"_id":"themes/Nayo/scripts/posts_count.js","hash":"ffe5bf8f46068a04adcfb6f975e7d1e50b2c1489","modified":1678109911495},{"_id":"themes/Nayo/scripts/raw_length.js","hash":"4098e6436a678cd2c29be6080b877890f56c0bc7","modified":1678109911495},{"_id":"themes/Nayo/layout/tag.ejs","hash":"a53e38f8947eee6c1c09c83840459182d6172005","modified":1678109911495},{"_id":"themes/Nayo/src/Changelog.md","hash":"868015a9bd7b094cfa706836b6f42a7254269403","modified":1678109911497},{"_id":"themes/Nayo/layout/post.ejs","hash":"76ef374b9247fa1d5ff92453a41b5d67bff21c87","modified":1678109911495},{"_id":"themes/Nayo/source/nayo.min.css","hash":"a2d27c122bd938b51d06a9ab107f9ef10bc40832","modified":1678109911497},{"_id":"themes/Nayo/layout/_partial/head.ejs","hash":"a0000a95156366707fd0330922cd858db8f28f26","modified":1678109911493},{"_id":"themes/Nayo/source/.DS_Store","hash":"aebf4aaed58f49d81e38abe72d7f4d2a30569c05","modified":1678103031818},{"_id":"themes/Nayo/layout/_partial/header.ejs","hash":"72aa1c505908fc483bcd2be3299a7a83a5de1235","modified":1678109911494},{"_id":"themes/Nayo/layout/layout.ejs","hash":"63e58edb05512de875bc0d393cfb27040127d7ea","modified":1678109911495},{"_id":"themes/Nayo/layout/_partial/item.ejs","hash":"1aee26c9d4f7c0f4293774421dba93e37977063a","modified":1678109911494},{"_id":"themes/Nayo/layout/_partial/after-footer.ejs","hash":"b850f11eaa5a8ff0ab62406357149f36dbbe8acf","modified":1678109911493},{"_id":"themes/Nayo/layout/_partial/search-container.ejs","hash":"81d80c2b1778f0657512885f1d651d0fa4f7c083","modified":1678109911494},{"_id":"themes/Nayo/layout/_partial/article.ejs","hash":"3c4ce57b582185e3b4026283579d729a9f5892ea","modified":1678109911493},{"_id":"themes/Nayo/layout/_partial/paginator.ejs","hash":"117752ca72246a2a274c17f4fffeeefdf7cceafd","modified":1678109911494},{"_id":"themes/Nayo/source/fonts/iconfont.6239.eot","hash":"f6e6b088aeb3e4aa28cf6238438ad3ed14344500","modified":1678109911496},{"_id":"themes/Nayo/layout/_partial/slide-menu.ejs","hash":"8c9a382d7441964e0dc467a38b739e24bf257439","modified":1678109911494},{"_id":"themes/Nayo/source/fonts/iconfont.e69a.woff","hash":"30f8ffee3c5163499690451fdd088e2ab12e30c5","modified":1678109911496},{"_id":"themes/Nayo/source/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1678103517860},{"_id":"themes/Nayo/layout/_partial/footer.ejs","hash":"6d163eaca73afca50ccc76355fd2e5998cddccb9","modified":1678109911493},{"_id":"themes/Nayo/source/images/favicon.png","hash":"715bd2e11e066e9097de88d5b2db4ea1f96ffc9d","modified":1678109911497},{"_id":"themes/Nayo/source/images/header.jpg","hash":"ab51a2c13997c80812b0714da51a0ab6e21ec3cb","modified":1678109911497},{"_id":"themes/Nayo/src/css/iconfonts.styl","hash":"ec79ccb9e2b7192b7ae8d7793d0e026e425f6430","modified":1678109911501},{"_id":"themes/Nayo/source/fonts/iconfont.7c23.ttf","hash":"c10cd05ad8b98af7306e726e3b5c20644801aeee","modified":1678109911496},{"_id":"themes/Nayo/source/images/donate2.png","hash":"40b30489b62af6d7ae7d0162fd7bd6385a16d56a","modified":1678109911496},{"_id":"themes/Nayo/src/css/base.styl","hash":"90e6eab0bd0310615fd26c8634cdca14cd15e1ef","modified":1678109911500},{"_id":"themes/Nayo/src/scripts/hover.js","hash":"410fafd83a6ca4abce8a5f1b5cfe20feea282a43","modified":1678109911502},{"_id":"themes/Nayo/src/css/style.styl","hash":"f58470537e1a3045f61f192347e21ceeedb2f0e3","modified":1678109911501},{"_id":"themes/Nayo/src/scripts/index.js","hash":"e468abea98f24ff1797035e85cf8128044f86ca0","modified":1678109911502},{"_id":"themes/Nayo/src/scripts/main.js","hash":"55ed56a8516a5a9473374da6ea5534ad04a7e654","modified":1678109911503},{"_id":"themes/Nayo/src/scripts/animate.js","hash":"7cd256099f61e053b7f6e7ab6b396ca6eebd89f6","modified":1678109911502},{"_id":"themes/Nayo/src/scripts/gallery.js","hash":"d6de1c7314fee303e2726d6c50e4ef0a1eed1407","modified":1678109911502},{"_id":"themes/Nayo/src/scripts/search.js","hash":"68bd8d71f202615b0767dd236e7c5cf32830ef5f","modified":1678109911503},{"_id":"themes/Nayo/src/scripts/utils.js","hash":"f616cea0e86ee0c680f1a5565cb061619bd90439","modified":1678109911503},{"_id":"themes/Nayo/src/scripts/toc.js","hash":"74836800fcfc78715d2fe7b3eb98618b2b798049","modified":1678109911503},{"_id":"themes/Nayo/src/scripts/post.js","hash":"379d65e2992582468d46be0e3d2395d7a63d2e7e","modified":1678109911503},{"_id":"themes/Nayo/layout/_partial/_post/comment.ejs","hash":"64882329b8e4369ae6048555d19750a6eb7bc1d1","modified":1678109911492},{"_id":"themes/Nayo/src/scripts/mobile.js","hash":"034ccfa5258ba635e774f9d6aa4f6671ad63a4a8","modified":1678109911503},{"_id":"themes/Nayo/src/scripts/lazyload.js","hash":"88eb0ca403e1f957ba681abcf9529eda2122e766","modified":1678109911503},{"_id":"themes/Nayo/layout/_partial/_post/footer.ejs","hash":"bc142c89b990fcc165bcf5e9acdc251f3694ccae","modified":1678109911493},{"_id":"themes/Nayo/layout/_partial/_post/header.ejs","hash":"5afc082cfc0324ea9bca4d7b5a0b66158127ae16","modified":1678109911493},{"_id":"themes/Nayo/layout/_partial/_post/gallery.ejs","hash":"026033cc6279e781cf38f8a579d6a7cdf78897cf","modified":1678109911493},{"_id":"themes/Nayo/layout/_partial/_post/mob_share.ejs","hash":"d5a4b7fa21c504abf8ec3142f51b8e07224c1734","modified":1678109911493},{"_id":"themes/Nayo/layout/_partial/_post/donate.ejs","hash":"16aa23889783464159cbc9aad69d6e745e1f3fb9","modified":1678109911492},{"_id":"themes/Nayo/layout/_partial/_post/toc.ejs","hash":"2c01d84910f1ad8439c8a8808eb14c22303d21da","modified":1678109911493},{"_id":"themes/Nayo/src/css/_import/gallery.styl","hash":"2cf8bcdc92111982433eba7e3c756d6f880f63b4","modified":1678109911498},{"_id":"themes/Nayo/source/images/placeholder.png","hash":"bc08c51585a39815487511e1390e6d2494eed4c4","modified":1678109911497},{"_id":"themes/Nayo/src/css/_import/hover.styl","hash":"9ff922213faad4394c902ac7e8c821e8c60c2925","modified":1678109911498},{"_id":"themes/Nayo/src/css/_partial/header.styl","hash":"3703a53f3024ee6baf10ea2405aef7cf85875a40","modified":1678109911498},{"_id":"themes/Nayo/src/css/_highlight/theme.styl","hash":"177d8ae14ebc91c81e02b9a3299526bf5d91a3c6","modified":1678109911498},{"_id":"themes/Nayo/src/css/_highlight/highlight.styl","hash":"10c90241535b7ab89bec2a9c46530725901fb607","modified":1678109911498},{"_id":"themes/Nayo/src/css/_partial/footer.styl","hash":"0cbf57c4c5eff2c9e8d038056f24765872fff34b","modified":1678109911498},{"_id":"themes/Nayo/src/css/_partial/article.styl","hash":"a86ea15e1a26276c0f6741c7d06bb2e1d800cfc3","modified":1678109911498},{"_id":"themes/Nayo/src/css/_import/valine.styl","hash":"f11cac5b539ddd9aaf00c53d64a10d90d97bf30c","modified":1678109911498},{"_id":"themes/Nayo/layout/_partial/_post/mathjax.ejs","hash":"ffc719b4b42bd634a8b3da6e1c77db84d75e7c51","modified":1678109911493},{"_id":"themes/Nayo/src/css/_partial/item.styl","hash":"3db54ccee87339edc497149b53474034fb3fdd2a","modified":1678109911499},{"_id":"themes/Nayo/src/css/_partial/meta.styl","hash":"286aa89ae7aceed21ae4839ea6b661b4984a6a5f","modified":1678109911499},{"_id":"themes/Nayo/src/css/_partial/search.styl","hash":"fd844312eace72c9db30f181cc9801140d2c30d4","modified":1678109911499},{"_id":"themes/Nayo/src/css/_partial/post.styl","hash":"676fb5088c465a2ace3e6091f5b6bcfaea638e7a","modified":1678109911499},{"_id":"themes/Nayo/src/css/_partial/tablet.styl","hash":"e988383756ba9dffbb5d4bc39679da802edba71c","modified":1678109911499},{"_id":"themes/Nayo/src/css/_partial/paginator.styl","hash":"a2050e073cd697e3cb046b10967021dd1f8c7c93","modified":1678109911499},{"_id":"themes/Nayo/src/css/_partial/toc.styl","hash":"778e43be2abb4de44e243018629e4305bacf5035","modified":1678109911499},{"_id":"themes/Nayo/src/css/_utils/_extend.styl","hash":"917203a83a44d23e8efacd37b7b312c89e846d22","modified":1678109911500},{"_id":"themes/Nayo/src/css/_utils/_variables.styl","hash":"52c26df95331a5c22590196773df17fba8a3a3d8","modified":1678109911500},{"_id":"themes/Nayo/src/css/_utils/typo.styl","hash":"5d52f8dc15e389786b4f8a22096b13d751ee980b","modified":1678109911500},{"_id":"themes/Nayo/src/css/_utils/anim.styl","hash":"540c87b90144998c4fb2c5b4bc37fb5ee7569af7","modified":1678109911500},{"_id":"themes/Nayo/src/css/_utils/utils.styl","hash":"af2f9008e1198c6578c1fe906323feb896d4b13e","modified":1678109911500},{"_id":"themes/Nayo/src/css/fonts/iconfont.eot","hash":"f6e6b088aeb3e4aa28cf6238438ad3ed14344500","modified":1678109911500},{"_id":"themes/Nayo/src/css/_partial/index.styl","hash":"3ee36290e17522ff0519d4a67956d29459309ca3","modified":1678109911499},{"_id":"themes/Nayo/src/css/fonts/iconfont.ttf","hash":"c10cd05ad8b98af7306e726e3b5c20644801aeee","modified":1678109911501},{"_id":"themes/Nayo/src/css/fonts/iconfont.woff","hash":"30f8ffee3c5163499690451fdd088e2ab12e30c5","modified":1678109911501},{"_id":"themes/Nayo/src/css/_partial/mobile.styl","hash":"ee08de2ca497326a033794c261e108356922900f","modified":1678109911499},{"_id":"themes/Nayo/source/nayo.bundle.js","hash":"af8f25da369fcf57469dfc44ec55f4245987eace","modified":1678109911497},{"_id":"themes/Nayo/src/nayo.png","hash":"af20139aa072eb5dd89c583f3e15c6d4a496e1bf","modified":1678109911502},{"_id":"themes/Nayo/source/fonts/iconfont.32d1.svg","hash":"ee4d76d093c8851c8d13d90501fa6a2658c557db","modified":1678109911496},{"_id":"themes/Nayo/source/images/donate1.png","hash":"55c4727921577ec21a8a95108c5b24933b6518ed","modified":1678109911496},{"_id":"themes/Nayo/src/scripts/jquery.js","hash":"0dc32db4aa9c5f03f3b38c47d883dbd4fed13aae","modified":1678109911503},{"_id":"themes/Nayo/src/css/fonts/iconfont.svg","hash":"ee4d76d093c8851c8d13d90501fa6a2658c557db","modified":1678109911501},{"_id":"source/_posts/香蕉/E891B52F-9F31-41A2-8675-20B01A581755.JPG","hash":"75624e2526913d86f5691d0deed2d799dfff82b0","modified":1678109911464},{"_id":"source/_posts/苹果/IMG_4752.JPG","hash":"86ff99bdc60bc7369c67079ad8078f3c4c708004","modified":1678109911451},{"_id":"source/_posts/三棱锥/IMG_4515.JPG","hash":"88df41120ad07eb91746cd6753541cf1929206be","modified":1678109911394},{"_id":"source/_posts/不锈钢盆/9A98C593-1A4D-4F5C-B795-20BD5078DAA7.JPG","hash":"818ec0410c5491f083b858c154ae215305638707","modified":1678109911397},{"_id":"source/_posts/圆柱/B35F6C8C-9AF2-40A1-AB4F-75335B34E25F.JPG","hash":"bb4cbfd3d4fae76131dce553b410fcd88d12c539","modified":1678109911418},{"_id":"source/_posts/周末/IMG_4946.JPG","hash":"e781e244830338ff3dea65fe977f5a6f0437d6af","modified":1678109911404},{"_id":"source/_posts/可乐/7A86E4C7-2AF1-483B-B2D4-6AE302F0D7C0.JPG","hash":"1408ffea76b489fd37367da231abeffb74e47edf","modified":1678109911399},{"_id":"source/_posts/贯穿体-圆锥/DF823592-2224-4702-AFCA-A3269B7BA43F.JPG","hash":"b779fb2472e217e40d5ff2446beb6e16bfd1d093","modified":1678109911453},{"_id":"source/_posts/灯泡/IMG_4928.JPG","hash":"515c01820d0416488dbe41d1b12437c12c9d7651","modified":1678109911436},{"_id":"source/_posts/周末/IMG_4941.JPG","hash":"589390a3b500dc58c309c261fa7fbdafd023a837","modified":1678109911402},{"_id":"source/_posts/眼/IMG_5067.JPG","hash":"587a6fe212e17519b218509e1b45478d3f86dafe","modified":1678109911441},{"_id":"source/_posts/木棍/619021B2-416D-4928-9D5E-4380837DD0B8.JPG","hash":"574f4d1ddf016e2a4f3212432cf75f1f2d19495e","modified":1678109911432},{"_id":"source/_posts/多面体/422EF0A0-0480-4700-BD6B-707FF4F94B4F.JPG","hash":"8086cfd617fc48b9d4b0d63bc8cb691ac615cf7b","modified":1678109911423},{"_id":"source/_posts/贯穿体3/C04F771E-BFF9-4FCE-97B4-0239AD527C02.JPG","hash":"420b2a157f77f54cce9d96340c554cb5316535ec","modified":1678109911461},{"_id":"source/_posts/贯穿体/60152184-EE8E-49C5-B646-5B94BFDC5C7B.JPG","hash":"3c2165b194aece09ce9071d7e82275572583821a","modified":1678109911455},{"_id":"source/_posts/眼睛/167301D8-7E55-44E2-A35D-17B4337260C6.JPG","hash":"c0f5cf5775868da7e2f351f11f247b147deaa13e","modified":1678109911444},{"_id":"source/_posts/鸟/151C7835-CF5E-42FA-858D-5E23926BA4A0.JPG","hash":"465b72f4dd5dd0ee37bcd72a9abcb58d2ca0750a","modified":1678109911467},{"_id":"source/_posts/周末/IMG_4949.JPG","hash":"42685979bb67ba3a7ea307b5426bd15406fd4685","modified":1678109911407},{"_id":"source/_posts/球/IMG_4602.JPG","hash":"4823ecd256b5af195cd85a6a5d3372df1fa047b4","modified":1678109911439},{"_id":"source/_posts/陶罐/D1881FE2-FD18-4630-A9C5-997BD28ED27E.JPG","hash":"8a578f308fa304ed4a469373a8c69bc482d6ceb5","modified":1678109911463},{"_id":"source/_posts/夕阳/77532093-6E9E-4D3E-82C4-94E42C559901.JPG","hash":"65b957e2fad0510e2305084d1541d52477060ba8","modified":1678109911421},{"_id":"source/_posts/贯穿体2/201CB542-9CB7-4EE2-B542-E69A9516409C.JPG","hash":"98d0e9f276b7adc557ef27622c613cdd19d9f9ae","modified":1678109911459},{"_id":"source/_posts/梨-纸-牛奶/EA363681-6736-4613-8434-9A044D0FEE99.JPG","hash":"9ffaeebbe6b77c35419ca097b8c15a73b0ab1e4b","modified":1678109911434},{"_id":"source/_posts/嘴/IMG_5077.JPG","hash":"da44dac9b9d98fcbde941aa4f4a8ced44bd30b46","modified":1678109911416},{"_id":"source/_posts/咖啡-耳机-钢笔/IMG_5035.JPG","hash":"2d83991a165aaff6d78d16d4efe606d2667b8f68","modified":1678109911412},{"_id":"source/_posts/耳/IMG_5076.JPG","hash":"343430e417bfa98d900fabf2c8b9c021a131490c","modified":1678109911448},{"_id":"source/_posts/大海与船/IMG_5057.JPG","hash":"a9bd6bb5fd321dd90a0ab25fc34cda0cb371f9c5","modified":1678109911429},{"_id":"source/_posts/鼻/IMG_5058.JPG","hash":"a05320c30a8df082eb212c03b39314f4ba8140d5","modified":1678109911472},{"_id":"public/search.xml","hash":"5d730f56c11f5e31fcfa6b849c31ed0205040c51","modified":1678110351247},{"_id":"public/耳-2023-03-06/index.html","hash":"32e60570f46e740f9e8dbd340e8acc45d2533fe1","modified":1678110351247},{"_id":"public/眼-2023-03-05/index.html","hash":"6ce4fc3af20b8da823a48ac9f72d1f3d2427f973","modified":1678110351247},{"_id":"public/嘴-2023-03-04/index.html","hash":"a6cac404663f069e4f11d26100db79886ee5891a","modified":1678110351247},{"_id":"public/梨-纸-牛奶-2023-03-01/index.html","hash":"e8d4248d0023bf87dc66228b06c3f481e04c1f28","modified":1678110351247},{"_id":"public/鼻-2023-03-03/index.html","hash":"ace294a581a4e8d71ff2624ce0c58969af028223","modified":1678110351247},{"_id":"public/可乐-2023-02-24/index.html","hash":"42fc26ac50a85b38d8e24c0f762485b75efc6ab1","modified":1678110351247},{"_id":"public/咖啡-耳机-钢笔-2023-03-02/index.html","hash":"9e0f75c65ad6c64f93eac28c931924106e5caa49","modified":1678110351247},{"_id":"public/陶罐-2023-02-21/index.html","hash":"f8ab5ef1153f9d4378223203f9c21cd8536eae2e","modified":1678110351247},{"_id":"public/眼睛-2023-02-12/index.html","hash":"fefbb77004aea2b55b22a9a8dd07b1e213f3d947","modified":1678110351247},{"_id":"public/夕阳-2023-02-11/index.html","hash":"0a603cfd7426b89a5ad7d58473a0c1e450a51f2f","modified":1678110351247},{"_id":"public/灯泡-2023-02-10/index.html","hash":"a48db5a0b65e47e7464de4832bac880549c43410","modified":1678110351247},{"_id":"public/周末-2023-02-07/index.html","hash":"5bae004a734343559a315c9289c65d9db42e7118","modified":1678110351247},{"_id":"public/大海与船-2023-02-20/index.html","hash":"2a820a9ec3efbf792db6a1198107807d04c0c471","modified":1678110351247},{"_id":"public/贯穿体-圆锥-2023-02-06/index.html","hash":"4bc7623c04941bc237222649c639e9efc7396a52","modified":1678110351247},{"_id":"public/不锈钢盆-2023-02-13/index.html","hash":"8460652aa2dda248e0fc764474f6d8b0913914b0","modified":1678110351247},{"_id":"public/苹果-2023-02-03/index.html","hash":"0b721e6c423ecc1409acd929c60ac9b4d2211502","modified":1678110351247},{"_id":"public/贯穿体3-2023-01-10/index.html","hash":"3c7d51e7118fecb198ad0ff02e406b2e3ae9caca","modified":1678110351247},{"_id":"public/鸟-2023-02-22/index.html","hash":"6e69377d5dfdbb0e91490f44f0cd6ada81d013b7","modified":1678110351247},{"_id":"public/贯穿体2-2023-01-08/index.html","hash":"a87c8a1825704691fd796cd74118166a789023e8","modified":1678110351247},{"_id":"public/香蕉-2023-02-05/index.html","hash":"b09dfe9910c5746b74229d2a793d35c4bf3aaa0c","modified":1678110351247},{"_id":"public/贯穿体-2023-01-06/index.html","hash":"fa05050f669800b7fc162bbc1b0832cdec8b438b","modified":1678110351247},{"_id":"public/圆柱-2023-01-04/index.html","hash":"8e79c1e76bc8cee6a48a6427306663a6fd250db5","modified":1678110351247},{"_id":"public/木棍-2023-01-03/index.html","hash":"ba9fae10c1fd6455a9e885ac9b93ba1829a129dd","modified":1678110351247},{"_id":"public/球-2023-01-02/index.html","hash":"0b4689ab70d00b7f9ebe3836aac8fe27b5249d4f","modified":1678110351247},{"_id":"public/三棱锥-2023-01-01/index.html","hash":"2579e423775d5fde64f45f5646dc936410d3e562","modified":1678110351247},{"_id":"public/多面体-2023-02-01/index.html","hash":"00125991635584dfa0f81cb80230d481d86586d3","modified":1678110351247},{"_id":"public/Mongodb-Replica-Set-集群配置-2016-10-11/index.html","hash":"5553f6e19abbe26d8996b3b73aebd4df1a181a3b","modified":1678110351247},{"_id":"public/互换-Ctrl-Caps-Lock-按键-2016-05-05/index.html","hash":"105395ce4f04793937df314cf09cdcd98850bae9","modified":1678110351247},{"_id":"public/VIM-配色方案-Molokai-2015-07-09/index.html","hash":"bb71929a0709df0b5cf9d0810322ebd9b5a6deb8","modified":1678110351247},{"_id":"public/archives/index.html","hash":"2a6aaa5828bfeaaea47eb5196ff8a74389bc9bc1","modified":1678110351247},{"_id":"public/archives/page/2/index.html","hash":"6368f39f5021af6659102d0992d569f0b8b62c0d","modified":1678110351247},{"_id":"public/archives/page/3/index.html","hash":"d259465c116ae98c8ed6de50e100b2996eb95571","modified":1678110351247},{"_id":"public/archives/page/4/index.html","hash":"18e2bafb632ded0201d7dcc86e651e4811ad7407","modified":1678110351247},{"_id":"public/archives/2015/index.html","hash":"f8066b5d600246338fec17a176d625d8c8ea40b1","modified":1678110351247},{"_id":"public/archives/2015/07/index.html","hash":"087b626a44d9e53e8d37e1b1d7186f74305fdc02","modified":1678110351247},{"_id":"public/archives/2015/12/index.html","hash":"35ff102694d303c3859c79bccbbc68a7fbcbe687","modified":1678110351247},{"_id":"public/archives/2016/index.html","hash":"c631fdd7159a6282bc284e2cd601df2aad61270a","modified":1678110351247},{"_id":"public/archives/2016/04/index.html","hash":"d00fb7d6b50a057f7df0b3d19e8fbda8a7055b45","modified":1678110351247},{"_id":"public/archives/2016/05/index.html","hash":"38c83ee08476c4992f3a0254139e1543172088e2","modified":1678110351247},{"_id":"public/archives/2016/10/index.html","hash":"74c8270ecc11c5b4feb4a47d099a5b8f55c0bef5","modified":1678110351247},{"_id":"public/archives/2023/index.html","hash":"241ee2f6593aaecef9f5c90880782f966ae288e3","modified":1678110351247},{"_id":"public/archives/2023/page/2/index.html","hash":"3595d9c45c9089365d85241bfb1edd0f025775e0","modified":1678110351247},{"_id":"public/archives/2023/01/index.html","hash":"e1e2de215bfcd755b70f4f31e7786f2f6b4292f3","modified":1678110351247},{"_id":"public/archives/2023/02/index.html","hash":"45eab5c85f3ea6a97ff1d8b9bd716969ca271d5d","modified":1678110351247},{"_id":"public/archives/2023/page/3/index.html","hash":"8d2df2727a1f6d3714b3f42e2cf207b813666bab","modified":1678110351247},{"_id":"public/archives/2023/02/page/2/index.html","hash":"027e177aa4347eea2e4ecd3c513f49ad1981667e","modified":1678110351247},{"_id":"public/tags/dev/index.html","hash":"bde26025cc0d3fd188967019ae6c217229d8f665","modified":1678110351247},{"_id":"public/tags/mongodb/index.html","hash":"7dbae9fc8b11f29edebdd24a19e08aba65300f43","modified":1678110351247},{"_id":"public/archives/2023/03/index.html","hash":"e6c7616a7ed38ff57f833dc3c081837131d03a6a","modified":1678110351247},{"_id":"public/tags/数据库/index.html","hash":"d4cde86c085f83c07173a858159b463e9e103fe2","modified":1678110351247},{"_id":"public/tags/arduino/index.html","hash":"d850e562f41b5c49a4c5e102c2ec78d41b37c4f9","modified":1678110351247},{"_id":"public/tags/vim/index.html","hash":"8ea90366d52e13723516fe15f28bdfba6ce47799","modified":1678110351247},{"_id":"public/tags/mysql/index.html","hash":"ed71a0ebbb9d62f42f6da32889e2ecebf448b2ef","modified":1678110351247},{"_id":"public/tags/单片机/index.html","hash":"3b99ea6e1af407bc353724854f6a38d16106b180","modified":1678110351247},{"_id":"public/tags/画/page/2/index.html","hash":"d1dcc7144d633b71e600fc80483d7895259e86ce","modified":1678110351247},{"_id":"public/tags/画/page/3/index.html","hash":"77c8d08808099c8840a4c3a638ba40855e0bc885","modified":1678110351247},{"_id":"public/tags/素描/index.html","hash":"0df47068c52788603e26bc84028c9bf14a5780a9","modified":1678110351247},{"_id":"public/tags/素描/page/2/index.html","hash":"6b7e8e0e3699ebcc6b3d4a33158f82f824c0de88","modified":1678110351247},{"_id":"public/tags/素描/page/3/index.html","hash":"d9966e4c57e6d2e9b64c0b5c374cb730992e219f","modified":1678110351247},{"_id":"public/tags/系统/index.html","hash":"7a6241182ca78dc1daa27cf9cb442d4bf156eb29","modified":1678110351247},{"_id":"public/tags/静物/index.html","hash":"a9cf3379ced8c524202a37d2369a440f3ef4f99d","modified":1678110351247},{"_id":"public/tags/石膏/index.html","hash":"b09d70b895da512cb77fbcd6c77987f1ff443870","modified":1678110351247},{"_id":"public/tags/油画/index.html","hash":"3667e5f50d2b0cb91b4339ac9fe77f11e85d0936","modified":1678110351247},{"_id":"public/tags/git/index.html","hash":"5270185743c1df96eef6f70a68dbd3abd9d137d1","modified":1678110351247},{"_id":"public/tags/画/index.html","hash":"c37235129ecaa65ce03401d7639ddfc5bdff4fdf","modified":1678110351247},{"_id":"public/index.html","hash":"5248727f190738c37ae366482be7a426ded8c39e","modified":1678110351247},{"_id":"public/Arduino-灯光控制-2016-04-10/index.html","hash":"ef58d862d1c7fae5c3ea0b2fb7990b247af7c441","modified":1678110351247},{"_id":"public/Mysql-群集配置-2016-10-11/index.html","hash":"e0a6e4375fa23cce6818031fe65c3ecec6b37038","modified":1678110351247},{"_id":"public/配置-Git-服务-2015-12-31/index.html","hash":"c30b1812e3a8483ff795ed7f84fe70ad7b40c41b","modified":1678110351247},{"_id":"public/VIM-配置-2015-12-11/index.html","hash":"c26545fcb26a2e140b163dbcbb544d9ed8bb4761","modified":1678110351247},{"_id":"public/page/3/index.html","hash":"7313158f8c7a5dd75db7477bf2b644a543dd7657","modified":1678110351247},{"_id":"public/page/4/index.html","hash":"9757493bb9fd2f3cfa104791b893034985d47854","modified":1678110351247},{"_id":"public/page/2/index.html","hash":"3a96d0c7d4c790ca6e91ecb63a36676cbd06b87f","modified":1678110351247},{"_id":"public/images/header.jpg","hash":"ab51a2c13997c80812b0714da51a0ab6e21ec3cb","modified":1678110351247},{"_id":"public/fonts/iconfont.e69a.woff","hash":"30f8ffee3c5163499690451fdd088e2ab12e30c5","modified":1678110351247},{"_id":"public/images/placeholder.png","hash":"bc08c51585a39815487511e1390e6d2494eed4c4","modified":1678110351247},{"_id":"public/images/favicon.png","hash":"715bd2e11e066e9097de88d5b2db4ea1f96ffc9d","modified":1678110351247},{"_id":"public/images/donate2.png","hash":"40b30489b62af6d7ae7d0162fd7bd6385a16d56a","modified":1678110351247},{"_id":"public/fonts/iconfont.7c23.ttf","hash":"c10cd05ad8b98af7306e726e3b5c20644801aeee","modified":1678110351247},{"_id":"public/fonts/iconfont.6239.eot","hash":"f6e6b088aeb3e4aa28cf6238438ad3ed14344500","modified":1678110351247},{"_id":"public/fonts/iconfont.32d1.svg","hash":"ee4d76d093c8851c8d13d90501fa6a2658c557db","modified":1678110351247},{"_id":"public/images/donate1.png","hash":"55c4727921577ec21a8a95108c5b24933b6518ed","modified":1678110351247},{"_id":"public/Arduino-灯光控制-2016-04-10/light.jpg","hash":"580f3000735cdf2ee5e080ef86ea35db41002b17","modified":1678110351247},{"_id":"public/nayo.min.css","hash":"a2d27c122bd938b51d06a9ab107f9ef10bc40832","modified":1678110351247},{"_id":"public/nayo.bundle.js","hash":"af8f25da369fcf57469dfc44ec55f4245987eace","modified":1678110351247},{"_id":"public/香蕉-2023-02-05/E891B52F-9F31-41A2-8675-20B01A581755.JPG","hash":"75624e2526913d86f5691d0deed2d799dfff82b0","modified":1678110351247},{"_id":"public/苹果-2023-02-03/IMG_4752.JPG","hash":"86ff99bdc60bc7369c67079ad8078f3c4c708004","modified":1678110351247},{"_id":"public/不锈钢盆-2023-02-13/9A98C593-1A4D-4F5C-B795-20BD5078DAA7.JPG","hash":"818ec0410c5491f083b858c154ae215305638707","modified":1678110351247},{"_id":"public/圆柱-2023-01-04/B35F6C8C-9AF2-40A1-AB4F-75335B34E25F.JPG","hash":"bb4cbfd3d4fae76131dce553b410fcd88d12c539","modified":1678110351247},{"_id":"public/三棱锥-2023-01-01/IMG_4515.JPG","hash":"88df41120ad07eb91746cd6753541cf1929206be","modified":1678110351247},{"_id":"public/可乐-2023-02-24/7A86E4C7-2AF1-483B-B2D4-6AE302F0D7C0.JPG","hash":"1408ffea76b489fd37367da231abeffb74e47edf","modified":1678110351247},{"_id":"public/灯泡-2023-02-10/IMG_4928.JPG","hash":"515c01820d0416488dbe41d1b12437c12c9d7651","modified":1678110351247},{"_id":"public/周末-2023-02-07/IMG_4946.JPG","hash":"e781e244830338ff3dea65fe977f5a6f0437d6af","modified":1678110351247},{"_id":"public/贯穿体-圆锥-2023-02-06/DF823592-2224-4702-AFCA-A3269B7BA43F.JPG","hash":"b779fb2472e217e40d5ff2446beb6e16bfd1d093","modified":1678110351247},{"_id":"public/木棍-2023-01-03/619021B2-416D-4928-9D5E-4380837DD0B8.JPG","hash":"574f4d1ddf016e2a4f3212432cf75f1f2d19495e","modified":1678110351247},{"_id":"public/周末-2023-02-07/IMG_4941.JPG","hash":"589390a3b500dc58c309c261fa7fbdafd023a837","modified":1678110351247},{"_id":"public/多面体-2023-02-01/422EF0A0-0480-4700-BD6B-707FF4F94B4F.JPG","hash":"8086cfd617fc48b9d4b0d63bc8cb691ac615cf7b","modified":1678110351247},{"_id":"public/眼-2023-03-05/IMG_5067.JPG","hash":"587a6fe212e17519b218509e1b45478d3f86dafe","modified":1678110351247},{"_id":"public/贯穿体3-2023-01-10/C04F771E-BFF9-4FCE-97B4-0239AD527C02.JPG","hash":"420b2a157f77f54cce9d96340c554cb5316535ec","modified":1678110351247},{"_id":"public/贯穿体-2023-01-06/60152184-EE8E-49C5-B646-5B94BFDC5C7B.JPG","hash":"3c2165b194aece09ce9071d7e82275572583821a","modified":1678110351247},{"_id":"public/眼睛-2023-02-12/167301D8-7E55-44E2-A35D-17B4337260C6.JPG","hash":"c0f5cf5775868da7e2f351f11f247b147deaa13e","modified":1678110351247},{"_id":"public/鸟-2023-02-22/151C7835-CF5E-42FA-858D-5E23926BA4A0.JPG","hash":"465b72f4dd5dd0ee37bcd72a9abcb58d2ca0750a","modified":1678110351247},{"_id":"public/周末-2023-02-07/IMG_4949.JPG","hash":"42685979bb67ba3a7ea307b5426bd15406fd4685","modified":1678110351247},{"_id":"public/陶罐-2023-02-21/D1881FE2-FD18-4630-A9C5-997BD28ED27E.JPG","hash":"8a578f308fa304ed4a469373a8c69bc482d6ceb5","modified":1678110351247},{"_id":"public/球-2023-01-02/IMG_4602.JPG","hash":"4823ecd256b5af195cd85a6a5d3372df1fa047b4","modified":1678110351247},{"_id":"public/夕阳-2023-02-11/77532093-6E9E-4D3E-82C4-94E42C559901.JPG","hash":"65b957e2fad0510e2305084d1541d52477060ba8","modified":1678110351247},{"_id":"public/贯穿体2-2023-01-08/201CB542-9CB7-4EE2-B542-E69A9516409C.JPG","hash":"98d0e9f276b7adc557ef27622c613cdd19d9f9ae","modified":1678110351247},{"_id":"public/嘴-2023-03-04/IMG_5077.JPG","hash":"da44dac9b9d98fcbde941aa4f4a8ced44bd30b46","modified":1678110351247},{"_id":"public/梨-纸-牛奶-2023-03-01/EA363681-6736-4613-8434-9A044D0FEE99.JPG","hash":"9ffaeebbe6b77c35419ca097b8c15a73b0ab1e4b","modified":1678110351247},{"_id":"public/咖啡-耳机-钢笔-2023-03-02/IMG_5035.JPG","hash":"2d83991a165aaff6d78d16d4efe606d2667b8f68","modified":1678110351247},{"_id":"public/耳-2023-03-06/IMG_5076.JPG","hash":"343430e417bfa98d900fabf2c8b9c021a131490c","modified":1678110351247},{"_id":"public/大海与船-2023-02-20/IMG_5057.JPG","hash":"a9bd6bb5fd321dd90a0ab25fc34cda0cb371f9c5","modified":1678110351247},{"_id":"public/鼻-2023-03-03/IMG_5058.JPG","hash":"a05320c30a8df082eb212c03b39314f4ba8140d5","modified":1678110351247}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Mongodb Replica Set 集群配置","date":"2016-10-11T08:22:15.000Z","_content":"\n> Replica Set  为 mongodb 3.0 以上版本官方推荐的群集方法\nMongodb 3.0 以上版本使用 Replica Set 搭建 Mongodb 集群服务，原 master-slave 则在3.0以上版本为不推荐使用\nhttps://docs.mongodb.com/manual/core/replica-set-architectures/\nReplica Set （副本集）支持一台写，多台读, 分片 (sharding) 则可以支持每个分片放置副本集 https://docs.mongodb.com/manual/sharding/\n\n\n## 防火墙设定\n<!-- more -->\n``` bash\nufw allow 27017/tcp # 允许 27017端口通过\n```\n\n## 所有服务器的 mongod.conf (一般位于 /etc/mongod.conf)\n``` conf\nnet:\n  port: 27017\n  bindIp: 192.168.0.104,192.168.0.107 # 增加其他服务器IP\n   \nreplication:\n  replSetName: mongo1 # 副本集名称 所有服务器相同\n  oplogSizeMB: 5120 # 大幅性能 https://docs.mongodb.com/manual/reference/configuration-options/#replication-options\n   \n```\n\n``` bash\n# 重新启动所有服务器 mongod 服务\nservice mongod restart\n```\n\n## 主 Mongo 设定\n\n进入 Mongo Shell\n``` conf\nconfig = {\n    _id: 'mongo1', \n    members: [\n        {_id: 0, host: '192.168.0.104:27017', priority:1}, #主mongo\n        {_id: 1, host: '192.168.0.107:27017'} #其他 mongo\n        ]\n}\nrs.initiate(config)\nrs.conf()\nrs.status()\n \n# 返回结果\n \n{\n    \"set\" : \"mongo1\",\n    \"date\" : ISODate(\"2016-10-11T08:14:16.365Z\"),\n    \"myState\" : 1,\n    \"members\" : [\n        {\n            \"_id\" : 0,\n            \"name\" : \"192.168.0.104:27017\",\n            \"health\" : 1,\n            \"state\" : 1,\n            \"stateStr\" : \"PRIMARY\",\n            \"uptime\" : 1713,\n            \"optime\" : Timestamp(1476173146, 1),\n            \"optimeDate\" : ISODate(\"2016-10-11T08:05:46Z\"),\n            \"electionTime\" : Timestamp(1476172001, 1),\n            \"electionDate\" : ISODate(\"2016-10-11T07:46:41Z\"),\n            \"configVersion\" : 84486,\n            \"self\" : true\n        },\n        {\n            \"_id\" : 1,\n            \"name\" : \"192.168.0.107:27017\",\n            \"health\" : 1,\n            \"state\" : 2,\n            \"stateStr\" : \"SECONDARY\",\n            \"uptime\" : 1656,\n            \"optime\" : Timestamp(1476173146, 1),\n            \"optimeDate\" : ISODate(\"2016-10-11T08:05:46Z\"),\n            \"lastHeartbeat\" : ISODate(\"2016-10-11T08:14:15.569Z\"),\n            \"lastHeartbeatRecv\" : ISODate(\"2016-10-11T08:14:14.929Z\"),\n            \"pingMs\" : 0,\n            \"syncingTo\" : \"192.168.0.104:27017\",\n            \"configVersion\" : 84486\n        }\n    ],\n    \"ok\" : 1\n}\n \n# 如果配置有误  health:0 显示为0\n# 重新配置加 force:true\nrs.reconfig(config, {force: true})\n```\n\n## 增加更多 Mongo\n\n```bash\nrs.add(\"192.168.0.108:27017\")\n```\n\n## 删除不使用的 Mongo\n\n``` bash\nrs.remove(\"192.168.0.108:27017\")\n```\n\n## 其他 Mongo 设定\n进入 Mongo Shell\n\n```bash\nrs.slaveOk() #即可完成数据同步\n```\n\n>只有主 Mongo 允许写数据，所以测试时进入主 Mongo，创建新 collection ，回到所有 其他  Mongo 通过以下查看同步过来的 collection\n\n``` bash\nshow collections\n```\n\n> 无法写入错误\n副本集至少需要有2个以上 Mongod 服务，如果只剩下最后一个 Mongod 服务那就会出现无法写入情况\n","source":"_posts/Mongodb-Replica-Set-集群配置.md","raw":"---\ntitle: Mongodb Replica Set 集群配置\ndate: 2016-10-11 16:22:15\ntags: \n- dev\n- mongodb \n- 数据库\n---\n\n> Replica Set  为 mongodb 3.0 以上版本官方推荐的群集方法\nMongodb 3.0 以上版本使用 Replica Set 搭建 Mongodb 集群服务，原 master-slave 则在3.0以上版本为不推荐使用\nhttps://docs.mongodb.com/manual/core/replica-set-architectures/\nReplica Set （副本集）支持一台写，多台读, 分片 (sharding) 则可以支持每个分片放置副本集 https://docs.mongodb.com/manual/sharding/\n\n\n## 防火墙设定\n<!-- more -->\n``` bash\nufw allow 27017/tcp # 允许 27017端口通过\n```\n\n## 所有服务器的 mongod.conf (一般位于 /etc/mongod.conf)\n``` conf\nnet:\n  port: 27017\n  bindIp: 192.168.0.104,192.168.0.107 # 增加其他服务器IP\n   \nreplication:\n  replSetName: mongo1 # 副本集名称 所有服务器相同\n  oplogSizeMB: 5120 # 大幅性能 https://docs.mongodb.com/manual/reference/configuration-options/#replication-options\n   \n```\n\n``` bash\n# 重新启动所有服务器 mongod 服务\nservice mongod restart\n```\n\n## 主 Mongo 设定\n\n进入 Mongo Shell\n``` conf\nconfig = {\n    _id: 'mongo1', \n    members: [\n        {_id: 0, host: '192.168.0.104:27017', priority:1}, #主mongo\n        {_id: 1, host: '192.168.0.107:27017'} #其他 mongo\n        ]\n}\nrs.initiate(config)\nrs.conf()\nrs.status()\n \n# 返回结果\n \n{\n    \"set\" : \"mongo1\",\n    \"date\" : ISODate(\"2016-10-11T08:14:16.365Z\"),\n    \"myState\" : 1,\n    \"members\" : [\n        {\n            \"_id\" : 0,\n            \"name\" : \"192.168.0.104:27017\",\n            \"health\" : 1,\n            \"state\" : 1,\n            \"stateStr\" : \"PRIMARY\",\n            \"uptime\" : 1713,\n            \"optime\" : Timestamp(1476173146, 1),\n            \"optimeDate\" : ISODate(\"2016-10-11T08:05:46Z\"),\n            \"electionTime\" : Timestamp(1476172001, 1),\n            \"electionDate\" : ISODate(\"2016-10-11T07:46:41Z\"),\n            \"configVersion\" : 84486,\n            \"self\" : true\n        },\n        {\n            \"_id\" : 1,\n            \"name\" : \"192.168.0.107:27017\",\n            \"health\" : 1,\n            \"state\" : 2,\n            \"stateStr\" : \"SECONDARY\",\n            \"uptime\" : 1656,\n            \"optime\" : Timestamp(1476173146, 1),\n            \"optimeDate\" : ISODate(\"2016-10-11T08:05:46Z\"),\n            \"lastHeartbeat\" : ISODate(\"2016-10-11T08:14:15.569Z\"),\n            \"lastHeartbeatRecv\" : ISODate(\"2016-10-11T08:14:14.929Z\"),\n            \"pingMs\" : 0,\n            \"syncingTo\" : \"192.168.0.104:27017\",\n            \"configVersion\" : 84486\n        }\n    ],\n    \"ok\" : 1\n}\n \n# 如果配置有误  health:0 显示为0\n# 重新配置加 force:true\nrs.reconfig(config, {force: true})\n```\n\n## 增加更多 Mongo\n\n```bash\nrs.add(\"192.168.0.108:27017\")\n```\n\n## 删除不使用的 Mongo\n\n``` bash\nrs.remove(\"192.168.0.108:27017\")\n```\n\n## 其他 Mongo 设定\n进入 Mongo Shell\n\n```bash\nrs.slaveOk() #即可完成数据同步\n```\n\n>只有主 Mongo 允许写数据，所以测试时进入主 Mongo，创建新 collection ，回到所有 其他  Mongo 通过以下查看同步过来的 collection\n\n``` bash\nshow collections\n```\n\n> 无法写入错误\n副本集至少需要有2个以上 Mongod 服务，如果只剩下最后一个 Mongod 服务那就会出现无法写入情况\n","slug":"Mongodb-Replica-Set-集群配置","published":1,"updated":"2023-03-06T13:38:31.391Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq2w0000fb8h7yo27tco","content":"<blockquote>\n<p>Replica Set  为 mongodb 3.0 以上版本官方推荐的群集方法<br>Mongodb 3.0 以上版本使用 Replica Set 搭建 Mongodb 集群服务，原 master-slave 则在3.0以上版本为不推荐使用<br><a href=\"https://docs.mongodb.com/manual/core/replica-set-architectures/\">https://docs.mongodb.com/manual/core/replica-set-architectures/</a><br>Replica Set （副本集）支持一台写，多台读, 分片 (sharding) 则可以支持每个分片放置副本集 <a href=\"https://docs.mongodb.com/manual/sharding/\">https://docs.mongodb.com/manual/sharding/</a></p>\n</blockquote>\n<h2 id=\"防火墙设定\"><a href=\"#防火墙设定\" class=\"headerlink\" title=\"防火墙设定\"></a>防火墙设定</h2><span id=\"more\"></span>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ufw allow 27017/tcp <span class=\"comment\"># 允许 27017端口通过</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"所有服务器的-mongod-conf-一般位于-x2F-etc-x2F-mongod-conf\"><a href=\"#所有服务器的-mongod-conf-一般位于-x2F-etc-x2F-mongod-conf\" class=\"headerlink\" title=\"所有服务器的 mongod.conf (一般位于 &#x2F;etc&#x2F;mongod.conf)\"></a>所有服务器的 mongod.conf (一般位于 &#x2F;etc&#x2F;mongod.conf)</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">net:</span><br><span class=\"line\">  port: 27017</span><br><span class=\"line\">  bindIp: 192.168.0.104,192.168.0.107 # 增加其他服务器IP</span><br><span class=\"line\">   </span><br><span class=\"line\">replication:</span><br><span class=\"line\">  replSetName: mongo1 # 副本集名称 所有服务器相同</span><br><span class=\"line\">  oplogSizeMB: 5120 # 大幅性能 https://docs.mongodb.com/manual/reference/configuration-options/#replication-options</span><br><span class=\"line\">   </span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 重新启动所有服务器 mongod 服务</span></span><br><span class=\"line\">service mongod restart</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"主-Mongo-设定\"><a href=\"#主-Mongo-设定\" class=\"headerlink\" title=\"主 Mongo 设定\"></a>主 Mongo 设定</h2><p>进入 Mongo Shell</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">config = &#123;</span><br><span class=\"line\">    _id: &#x27;mongo1&#x27;, </span><br><span class=\"line\">    members: [</span><br><span class=\"line\">        &#123;_id: 0, host: &#x27;192.168.0.104:27017&#x27;, priority:1&#125;, #主mongo</span><br><span class=\"line\">        &#123;_id: 1, host: &#x27;192.168.0.107:27017&#x27;&#125; #其他 mongo</span><br><span class=\"line\">        ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">rs.initiate(config)</span><br><span class=\"line\">rs.conf()</span><br><span class=\"line\">rs.status()</span><br><span class=\"line\"> </span><br><span class=\"line\"># 返回结果</span><br><span class=\"line\"> </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;set&quot; : &quot;mongo1&quot;,</span><br><span class=\"line\">    &quot;date&quot; : ISODate(&quot;2016-10-11T08:14:16.365Z&quot;),</span><br><span class=\"line\">    &quot;myState&quot; : 1,</span><br><span class=\"line\">    &quot;members&quot; : [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;_id&quot; : 0,</span><br><span class=\"line\">            &quot;name&quot; : &quot;192.168.0.104:27017&quot;,</span><br><span class=\"line\">            &quot;health&quot; : 1,</span><br><span class=\"line\">            &quot;state&quot; : 1,</span><br><span class=\"line\">            &quot;stateStr&quot; : &quot;PRIMARY&quot;,</span><br><span class=\"line\">            &quot;uptime&quot; : 1713,</span><br><span class=\"line\">            &quot;optime&quot; : Timestamp(1476173146, 1),</span><br><span class=\"line\">            &quot;optimeDate&quot; : ISODate(&quot;2016-10-11T08:05:46Z&quot;),</span><br><span class=\"line\">            &quot;electionTime&quot; : Timestamp(1476172001, 1),</span><br><span class=\"line\">            &quot;electionDate&quot; : ISODate(&quot;2016-10-11T07:46:41Z&quot;),</span><br><span class=\"line\">            &quot;configVersion&quot; : 84486,</span><br><span class=\"line\">            &quot;self&quot; : true</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;_id&quot; : 1,</span><br><span class=\"line\">            &quot;name&quot; : &quot;192.168.0.107:27017&quot;,</span><br><span class=\"line\">            &quot;health&quot; : 1,</span><br><span class=\"line\">            &quot;state&quot; : 2,</span><br><span class=\"line\">            &quot;stateStr&quot; : &quot;SECONDARY&quot;,</span><br><span class=\"line\">            &quot;uptime&quot; : 1656,</span><br><span class=\"line\">            &quot;optime&quot; : Timestamp(1476173146, 1),</span><br><span class=\"line\">            &quot;optimeDate&quot; : ISODate(&quot;2016-10-11T08:05:46Z&quot;),</span><br><span class=\"line\">            &quot;lastHeartbeat&quot; : ISODate(&quot;2016-10-11T08:14:15.569Z&quot;),</span><br><span class=\"line\">            &quot;lastHeartbeatRecv&quot; : ISODate(&quot;2016-10-11T08:14:14.929Z&quot;),</span><br><span class=\"line\">            &quot;pingMs&quot; : 0,</span><br><span class=\"line\">            &quot;syncingTo&quot; : &quot;192.168.0.104:27017&quot;,</span><br><span class=\"line\">            &quot;configVersion&quot; : 84486</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    &quot;ok&quot; : 1</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"># 如果配置有误  health:0 显示为0</span><br><span class=\"line\"># 重新配置加 force:true</span><br><span class=\"line\">rs.reconfig(config, &#123;force: true&#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"增加更多-Mongo\"><a href=\"#增加更多-Mongo\" class=\"headerlink\" title=\"增加更多 Mongo\"></a>增加更多 Mongo</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs.add(<span class=\"string\">&quot;192.168.0.108:27017&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"删除不使用的-Mongo\"><a href=\"#删除不使用的-Mongo\" class=\"headerlink\" title=\"删除不使用的 Mongo\"></a>删除不使用的 Mongo</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs.remove(<span class=\"string\">&quot;192.168.0.108:27017&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"其他-Mongo-设定\"><a href=\"#其他-Mongo-设定\" class=\"headerlink\" title=\"其他 Mongo 设定\"></a>其他 Mongo 设定</h2><p>进入 Mongo Shell</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs.slaveOk() <span class=\"comment\">#即可完成数据同步</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>只有主 Mongo 允许写数据，所以测试时进入主 Mongo，创建新 collection ，回到所有 其他  Mongo 通过以下查看同步过来的 collection</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show collections</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>无法写入错误<br>副本集至少需要有2个以上 Mongod 服务，如果只剩下最后一个 Mongod 服务那就会出现无法写入情况</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>Replica Set  为 mongodb 3.0 以上版本官方推荐的群集方法<br>Mongodb 3.0 以上版本使用 Replica Set 搭建 Mongodb 集群服务，原 master-slave 则在3.0以上版本为不推荐使用<br><a href=\"https://docs.mongodb.com/manual/core/replica-set-architectures/\">https://docs.mongodb.com/manual/core/replica-set-architectures/</a><br>Replica Set （副本集）支持一台写，多台读, 分片 (sharding) 则可以支持每个分片放置副本集 <a href=\"https://docs.mongodb.com/manual/sharding/\">https://docs.mongodb.com/manual/sharding/</a></p>\n</blockquote>\n<h2 id=\"防火墙设定\"><a href=\"#防火墙设定\" class=\"headerlink\" title=\"防火墙设定\"></a>防火墙设定</h2>","more":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ufw allow 27017/tcp <span class=\"comment\"># 允许 27017端口通过</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"所有服务器的-mongod-conf-一般位于-x2F-etc-x2F-mongod-conf\"><a href=\"#所有服务器的-mongod-conf-一般位于-x2F-etc-x2F-mongod-conf\" class=\"headerlink\" title=\"所有服务器的 mongod.conf (一般位于 &#x2F;etc&#x2F;mongod.conf)\"></a>所有服务器的 mongod.conf (一般位于 &#x2F;etc&#x2F;mongod.conf)</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">net:</span><br><span class=\"line\">  port: 27017</span><br><span class=\"line\">  bindIp: 192.168.0.104,192.168.0.107 # 增加其他服务器IP</span><br><span class=\"line\">   </span><br><span class=\"line\">replication:</span><br><span class=\"line\">  replSetName: mongo1 # 副本集名称 所有服务器相同</span><br><span class=\"line\">  oplogSizeMB: 5120 # 大幅性能 https://docs.mongodb.com/manual/reference/configuration-options/#replication-options</span><br><span class=\"line\">   </span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 重新启动所有服务器 mongod 服务</span></span><br><span class=\"line\">service mongod restart</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"主-Mongo-设定\"><a href=\"#主-Mongo-设定\" class=\"headerlink\" title=\"主 Mongo 设定\"></a>主 Mongo 设定</h2><p>进入 Mongo Shell</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">config = &#123;</span><br><span class=\"line\">    _id: &#x27;mongo1&#x27;, </span><br><span class=\"line\">    members: [</span><br><span class=\"line\">        &#123;_id: 0, host: &#x27;192.168.0.104:27017&#x27;, priority:1&#125;, #主mongo</span><br><span class=\"line\">        &#123;_id: 1, host: &#x27;192.168.0.107:27017&#x27;&#125; #其他 mongo</span><br><span class=\"line\">        ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">rs.initiate(config)</span><br><span class=\"line\">rs.conf()</span><br><span class=\"line\">rs.status()</span><br><span class=\"line\"> </span><br><span class=\"line\"># 返回结果</span><br><span class=\"line\"> </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;set&quot; : &quot;mongo1&quot;,</span><br><span class=\"line\">    &quot;date&quot; : ISODate(&quot;2016-10-11T08:14:16.365Z&quot;),</span><br><span class=\"line\">    &quot;myState&quot; : 1,</span><br><span class=\"line\">    &quot;members&quot; : [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;_id&quot; : 0,</span><br><span class=\"line\">            &quot;name&quot; : &quot;192.168.0.104:27017&quot;,</span><br><span class=\"line\">            &quot;health&quot; : 1,</span><br><span class=\"line\">            &quot;state&quot; : 1,</span><br><span class=\"line\">            &quot;stateStr&quot; : &quot;PRIMARY&quot;,</span><br><span class=\"line\">            &quot;uptime&quot; : 1713,</span><br><span class=\"line\">            &quot;optime&quot; : Timestamp(1476173146, 1),</span><br><span class=\"line\">            &quot;optimeDate&quot; : ISODate(&quot;2016-10-11T08:05:46Z&quot;),</span><br><span class=\"line\">            &quot;electionTime&quot; : Timestamp(1476172001, 1),</span><br><span class=\"line\">            &quot;electionDate&quot; : ISODate(&quot;2016-10-11T07:46:41Z&quot;),</span><br><span class=\"line\">            &quot;configVersion&quot; : 84486,</span><br><span class=\"line\">            &quot;self&quot; : true</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            &quot;_id&quot; : 1,</span><br><span class=\"line\">            &quot;name&quot; : &quot;192.168.0.107:27017&quot;,</span><br><span class=\"line\">            &quot;health&quot; : 1,</span><br><span class=\"line\">            &quot;state&quot; : 2,</span><br><span class=\"line\">            &quot;stateStr&quot; : &quot;SECONDARY&quot;,</span><br><span class=\"line\">            &quot;uptime&quot; : 1656,</span><br><span class=\"line\">            &quot;optime&quot; : Timestamp(1476173146, 1),</span><br><span class=\"line\">            &quot;optimeDate&quot; : ISODate(&quot;2016-10-11T08:05:46Z&quot;),</span><br><span class=\"line\">            &quot;lastHeartbeat&quot; : ISODate(&quot;2016-10-11T08:14:15.569Z&quot;),</span><br><span class=\"line\">            &quot;lastHeartbeatRecv&quot; : ISODate(&quot;2016-10-11T08:14:14.929Z&quot;),</span><br><span class=\"line\">            &quot;pingMs&quot; : 0,</span><br><span class=\"line\">            &quot;syncingTo&quot; : &quot;192.168.0.104:27017&quot;,</span><br><span class=\"line\">            &quot;configVersion&quot; : 84486</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    &quot;ok&quot; : 1</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"># 如果配置有误  health:0 显示为0</span><br><span class=\"line\"># 重新配置加 force:true</span><br><span class=\"line\">rs.reconfig(config, &#123;force: true&#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"增加更多-Mongo\"><a href=\"#增加更多-Mongo\" class=\"headerlink\" title=\"增加更多 Mongo\"></a>增加更多 Mongo</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs.add(<span class=\"string\">&quot;192.168.0.108:27017&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"删除不使用的-Mongo\"><a href=\"#删除不使用的-Mongo\" class=\"headerlink\" title=\"删除不使用的 Mongo\"></a>删除不使用的 Mongo</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs.remove(<span class=\"string\">&quot;192.168.0.108:27017&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"其他-Mongo-设定\"><a href=\"#其他-Mongo-设定\" class=\"headerlink\" title=\"其他 Mongo 设定\"></a>其他 Mongo 设定</h2><p>进入 Mongo Shell</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs.slaveOk() <span class=\"comment\">#即可完成数据同步</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>只有主 Mongo 允许写数据，所以测试时进入主 Mongo，创建新 collection ，回到所有 其他  Mongo 通过以下查看同步过来的 collection</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show collections</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>无法写入错误<br>副本集至少需要有2个以上 Mongod 服务，如果只剩下最后一个 Mongod 服务那就会出现无法写入情况</p>\n</blockquote>"},{"title":"Arduino 灯光控制","date":"2016-04-10T12:37:50.000Z","_content":">使用 Arduino 光敏、人体红外传感器、舵机来控制灯光开启。这里以不破坏原则使用舵机推动开关来实现开灯和关灯。 实现目标：区域内光线强度不够时，同时有人在区域内驱动舵机推动开关开灯，无人在或光线强度足够则关灯\n\n\n## 接线图\n![接线图](light.jpg)\n\n\n## 控制代码\n<!-- more -->\n\n``` C\n#include <Servo.h> //舵机驱动库\n\nServo myservo; // 最多可以控制8路舵机\n/**\n *  光敏 pin 2\n *  红外 pin 7\n *  舵机 pin 9\n *  [LED] pin 13\n */\n// 光敏 接在   pin 2\nint brightPin = 2; \n// 光值\nint brightVal = 0;\n// 小于此值时 开灯\nint minLight = 250;\n// LED 13号口\nint ledPin = 13;\n// 光线状态\n//int brightState = HIGH;\n// 红外感应 pin 7\nint infraredPin = 7;\n// 人感应状态\nint personState = LOW;\n// light 状态\nint lightState = LOW;\n// 舵机 pin 9\nint switchPin = 9;\n//打开灯\nint openLight = HIGH;\n//关闭灯\nint closeLight = LOW;\n//等待 1.5s 后 关灯 1.5 继续检测是否有人运动 弥补 传感器 人未动无法检测的问题\nunsigned long delayMillis = 2000;\n//传感器最后更新时间 \nunsigned long lastMillis = 0;\nint lightOpen = 70; //开灯角度\nint lightClose = 180; //关灯角度\n  \nvoid setup() {\n  // LED 输出\n  pinMode(ledPin, OUTPUT); \n  // 红外输入\n  pinMode(infraredPin, INPUT);\n  // 舵机控制信号引脚 \n  myservo.attach(switchPin);\n\n  //串口调试\n  Serial.begin(9600);\n\n  //90 度 默认居中\n  myservo.write(90);\n\n}\n\nvoid loop() { \n\n  //读取当前角度\n  int nowState = myservo.read();\n  Serial.print(\"nowState -> \");\n  Serial.println(nowState);\n\n  // 防止人为控制开关 推动舵机方向错误 刷新舵机方向与灯状态值一致\n  if (lightOpen == nowState){\n    Serial.print(\"open with high state\\n\\n\");\n    lightState = HIGH;\n  }\n  if (lightClose == nowState){\n    Serial.print(\"open with low state\\n\\n\");\n    lightState = LOW;\n  }\n  \n  //当前光状态\n  int brightState = detectiveBright();\n  //保存人是否存在状态\n  int personState = detectivePerson();\n\n    // 只要取到人存在 就记录一下 时间\n  if (personState){\n    lastMillis = millis(); // 记录一下 成功取到 的时间\n  }\n  if (false == brightState){ //光线不足\n    // 刷新状态值保持一致性\n    lightState = LOW;\n\n    // 无光 时 只有2种情况需要操作\n    // 1 有人 无灯 => 开灯\n    // 2 有灯 无人 => 关灯\n    if (personState && LOW == lightState){ //有人 且 无灯\n      switchLight(openLight); //开灯\n      lastMillis = millis();\n      Serial.print(\"first start the light,the lastmillis is:\"); \n      Serial.println(lastMillis); \n    }else if (false == personState && HIGH == lightState){ // 有灯 无人\n      // 无特殊原因无此情况\n      Serial.print(\" turn off:\"); \n      Serial.println(brightState); \n      switchLight(closeLight);\n    }\n  }else{ //光线充足\n    lightState = HIGH;\n    \n    if (HIGH == lightState && false == personState){ //有光 有灯 无人\n       unsigned long currentMillis = millis();\n       if ((currentMillis - lastMillis) > delayMillis){ //延迟 n 秒关灯\n          Serial.print(\" turn off:\"); \n          Serial.println(lastMillis); \n          switchLight(closeLight); //关灯\n          lastMillis = 0;\n        }else{\n           //虽然达到关灯要求 但需要 延迟 n 秒\n           //继续判断是否有人\n          unsigned long check = currentMillis - lastMillis;\n          Serial.print(\"still have time to turn off:\"); \n          Serial.println(check); \n        }       \n\n    }\n  }\n\n  // 0.1秒查看一次\n  delay(100);       \n}\n\n//检查光源是否充足\nbool detectiveBright() {\n  // 讀取光敏電阻並輸出到 Serial Port \n  brightVal = analogRead(brightPin);\n  //Serial.print(\"detectiveBright -> brightVal: \");\n  //Serial.println(brightVal);   \n\n  // 光線不足\n  if (brightVal < minLight){\n    //brightState = LOW;\n    //Serial.print(\"brightState = LOW; \");\n    return false;\n  }else{ //光线充足 ok\n    //brightState = HIGH;\n    //Serial.print(\"brightState = HIGH; \");\n    return true;\n  }\n}\n\n//检查 160度内 是否有人感应\nbool detectivePerson() {\n  int detectiveNum = 0;\n  for (int i = 0; i < 20; i++){\n      personState = digitalRead(infraredPin); \n      if (HIGH == personState){\n        detectiveNum++;\n        delay(5);\n      }\n  }\n\n  //有人的时候输出高电平1 无人0\n  Serial.print(\"detectivePerson -> detectiveNum: \");\n  Serial.println(detectiveNum); \n  // 有人情况超过一半 视为有人\n  if (detectiveNum >= 10){\n    Serial.print(\"perple on\\n\");\n    return true;\n  }else{\n    Serial.print(\"perple off\\n\");\n    return false;\n  }\n}\n\n// 开灯 OR 关灯\nvoid switchLight(int state) {\n\n  //读取当前角度\n  int nowState = myservo.read();\n\n  // 0 - 180 度\n  // 输入对应的角度值，舵机会转到此位置\n  if (state == openLight && lightOpen != nowState){ //打开\n    Serial.print(\"open\");\n    myservo.write(lightOpen);              \n  }\n  \n  if (state == closeLight && lightClose != nowState) {  //关闭\n    Serial.print(\"close\");\n    myservo.write(lightClose);\n  }\n\n  // 更新灯状态\n  lightState = state;\n\n  //开或关灯 时 LED显示\n  digitalWrite(ledPin, lightState); // turn ON/OFF LED\n\n  Serial.print(\"switchLight(): \");\n  Serial.println(lightState);\n}\n```\n\n\n>13号口LED灯仅调试时使用，测试时需拿下LED灯，LED亮会影响光敏判断流程 舵机最好单独供电，人体红外探测范围约160度左右不够时可多加几位人体红外，面板包仅测试时使用，长期使用可能会不稳定","source":"_posts/Arduino-灯光控制.md","raw":"---\ntitle: Arduino 灯光控制\ndate: 2016-04-10 20:37:50\ntags: \n- dev\n- arduino\n- 单片机\n---\n>使用 Arduino 光敏、人体红外传感器、舵机来控制灯光开启。这里以不破坏原则使用舵机推动开关来实现开灯和关灯。 实现目标：区域内光线强度不够时，同时有人在区域内驱动舵机推动开关开灯，无人在或光线强度足够则关灯\n\n\n## 接线图\n![接线图](light.jpg)\n\n\n## 控制代码\n<!-- more -->\n\n``` C\n#include <Servo.h> //舵机驱动库\n\nServo myservo; // 最多可以控制8路舵机\n/**\n *  光敏 pin 2\n *  红外 pin 7\n *  舵机 pin 9\n *  [LED] pin 13\n */\n// 光敏 接在   pin 2\nint brightPin = 2; \n// 光值\nint brightVal = 0;\n// 小于此值时 开灯\nint minLight = 250;\n// LED 13号口\nint ledPin = 13;\n// 光线状态\n//int brightState = HIGH;\n// 红外感应 pin 7\nint infraredPin = 7;\n// 人感应状态\nint personState = LOW;\n// light 状态\nint lightState = LOW;\n// 舵机 pin 9\nint switchPin = 9;\n//打开灯\nint openLight = HIGH;\n//关闭灯\nint closeLight = LOW;\n//等待 1.5s 后 关灯 1.5 继续检测是否有人运动 弥补 传感器 人未动无法检测的问题\nunsigned long delayMillis = 2000;\n//传感器最后更新时间 \nunsigned long lastMillis = 0;\nint lightOpen = 70; //开灯角度\nint lightClose = 180; //关灯角度\n  \nvoid setup() {\n  // LED 输出\n  pinMode(ledPin, OUTPUT); \n  // 红外输入\n  pinMode(infraredPin, INPUT);\n  // 舵机控制信号引脚 \n  myservo.attach(switchPin);\n\n  //串口调试\n  Serial.begin(9600);\n\n  //90 度 默认居中\n  myservo.write(90);\n\n}\n\nvoid loop() { \n\n  //读取当前角度\n  int nowState = myservo.read();\n  Serial.print(\"nowState -> \");\n  Serial.println(nowState);\n\n  // 防止人为控制开关 推动舵机方向错误 刷新舵机方向与灯状态值一致\n  if (lightOpen == nowState){\n    Serial.print(\"open with high state\\n\\n\");\n    lightState = HIGH;\n  }\n  if (lightClose == nowState){\n    Serial.print(\"open with low state\\n\\n\");\n    lightState = LOW;\n  }\n  \n  //当前光状态\n  int brightState = detectiveBright();\n  //保存人是否存在状态\n  int personState = detectivePerson();\n\n    // 只要取到人存在 就记录一下 时间\n  if (personState){\n    lastMillis = millis(); // 记录一下 成功取到 的时间\n  }\n  if (false == brightState){ //光线不足\n    // 刷新状态值保持一致性\n    lightState = LOW;\n\n    // 无光 时 只有2种情况需要操作\n    // 1 有人 无灯 => 开灯\n    // 2 有灯 无人 => 关灯\n    if (personState && LOW == lightState){ //有人 且 无灯\n      switchLight(openLight); //开灯\n      lastMillis = millis();\n      Serial.print(\"first start the light,the lastmillis is:\"); \n      Serial.println(lastMillis); \n    }else if (false == personState && HIGH == lightState){ // 有灯 无人\n      // 无特殊原因无此情况\n      Serial.print(\" turn off:\"); \n      Serial.println(brightState); \n      switchLight(closeLight);\n    }\n  }else{ //光线充足\n    lightState = HIGH;\n    \n    if (HIGH == lightState && false == personState){ //有光 有灯 无人\n       unsigned long currentMillis = millis();\n       if ((currentMillis - lastMillis) > delayMillis){ //延迟 n 秒关灯\n          Serial.print(\" turn off:\"); \n          Serial.println(lastMillis); \n          switchLight(closeLight); //关灯\n          lastMillis = 0;\n        }else{\n           //虽然达到关灯要求 但需要 延迟 n 秒\n           //继续判断是否有人\n          unsigned long check = currentMillis - lastMillis;\n          Serial.print(\"still have time to turn off:\"); \n          Serial.println(check); \n        }       \n\n    }\n  }\n\n  // 0.1秒查看一次\n  delay(100);       \n}\n\n//检查光源是否充足\nbool detectiveBright() {\n  // 讀取光敏電阻並輸出到 Serial Port \n  brightVal = analogRead(brightPin);\n  //Serial.print(\"detectiveBright -> brightVal: \");\n  //Serial.println(brightVal);   \n\n  // 光線不足\n  if (brightVal < minLight){\n    //brightState = LOW;\n    //Serial.print(\"brightState = LOW; \");\n    return false;\n  }else{ //光线充足 ok\n    //brightState = HIGH;\n    //Serial.print(\"brightState = HIGH; \");\n    return true;\n  }\n}\n\n//检查 160度内 是否有人感应\nbool detectivePerson() {\n  int detectiveNum = 0;\n  for (int i = 0; i < 20; i++){\n      personState = digitalRead(infraredPin); \n      if (HIGH == personState){\n        detectiveNum++;\n        delay(5);\n      }\n  }\n\n  //有人的时候输出高电平1 无人0\n  Serial.print(\"detectivePerson -> detectiveNum: \");\n  Serial.println(detectiveNum); \n  // 有人情况超过一半 视为有人\n  if (detectiveNum >= 10){\n    Serial.print(\"perple on\\n\");\n    return true;\n  }else{\n    Serial.print(\"perple off\\n\");\n    return false;\n  }\n}\n\n// 开灯 OR 关灯\nvoid switchLight(int state) {\n\n  //读取当前角度\n  int nowState = myservo.read();\n\n  // 0 - 180 度\n  // 输入对应的角度值，舵机会转到此位置\n  if (state == openLight && lightOpen != nowState){ //打开\n    Serial.print(\"open\");\n    myservo.write(lightOpen);              \n  }\n  \n  if (state == closeLight && lightClose != nowState) {  //关闭\n    Serial.print(\"close\");\n    myservo.write(lightClose);\n  }\n\n  // 更新灯状态\n  lightState = state;\n\n  //开或关灯 时 LED显示\n  digitalWrite(ledPin, lightState); // turn ON/OFF LED\n\n  Serial.print(\"switchLight(): \");\n  Serial.println(lightState);\n}\n```\n\n\n>13号口LED灯仅调试时使用，测试时需拿下LED灯，LED亮会影响光敏判断流程 舵机最好单独供电，人体红外探测范围约160度左右不够时可多加几位人体红外，面板包仅测试时使用，长期使用可能会不稳定","slug":"Arduino-灯光控制","published":1,"updated":"2023-03-06T13:38:31.391Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq2z0001fb8halhtcene","content":"<blockquote>\n<p>使用 Arduino 光敏、人体红外传感器、舵机来控制灯光开启。这里以不破坏原则使用舵机推动开关来实现开灯和关灯。 实现目标：区域内光线强度不够时，同时有人在区域内驱动舵机推动开关开灯，无人在或光线强度足够则关灯</p>\n</blockquote>\n<h2 id=\"接线图\"><a href=\"#接线图\" class=\"headerlink\" title=\"接线图\"></a>接线图</h2><p><img src=\"/Arduino-%E7%81%AF%E5%85%89%E6%8E%A7%E5%88%B6-2016-04-10/light.jpg\" alt=\"接线图\"></p>\n<h2 id=\"控制代码\"><a href=\"#控制代码\" class=\"headerlink\" title=\"控制代码\"></a>控制代码</h2><span id=\"more\"></span>\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;Servo.h&gt;</span> <span class=\"comment\">//舵机驱动库</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">Servo myservo; <span class=\"comment\">// 最多可以控制8路舵机</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> *  光敏 pin 2</span></span><br><span class=\"line\"><span class=\"comment\"> *  红外 pin 7</span></span><br><span class=\"line\"><span class=\"comment\"> *  舵机 pin 9</span></span><br><span class=\"line\"><span class=\"comment\"> *  [LED] pin 13</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">// 光敏 接在   pin 2</span></span><br><span class=\"line\"><span class=\"type\">int</span> brightPin = <span class=\"number\">2</span>; </span><br><span class=\"line\"><span class=\"comment\">// 光值</span></span><br><span class=\"line\"><span class=\"type\">int</span> brightVal = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"comment\">// 小于此值时 开灯</span></span><br><span class=\"line\"><span class=\"type\">int</span> minLight = <span class=\"number\">250</span>;</span><br><span class=\"line\"><span class=\"comment\">// LED 13号口</span></span><br><span class=\"line\"><span class=\"type\">int</span> ledPin = <span class=\"number\">13</span>;</span><br><span class=\"line\"><span class=\"comment\">// 光线状态</span></span><br><span class=\"line\"><span class=\"comment\">//int brightState = HIGH;</span></span><br><span class=\"line\"><span class=\"comment\">// 红外感应 pin 7</span></span><br><span class=\"line\"><span class=\"type\">int</span> infraredPin = <span class=\"number\">7</span>;</span><br><span class=\"line\"><span class=\"comment\">// 人感应状态</span></span><br><span class=\"line\"><span class=\"type\">int</span> personState = LOW;</span><br><span class=\"line\"><span class=\"comment\">// light 状态</span></span><br><span class=\"line\"><span class=\"type\">int</span> lightState = LOW;</span><br><span class=\"line\"><span class=\"comment\">// 舵机 pin 9</span></span><br><span class=\"line\"><span class=\"type\">int</span> switchPin = <span class=\"number\">9</span>;</span><br><span class=\"line\"><span class=\"comment\">//打开灯</span></span><br><span class=\"line\"><span class=\"type\">int</span> openLight = HIGH;</span><br><span class=\"line\"><span class=\"comment\">//关闭灯</span></span><br><span class=\"line\"><span class=\"type\">int</span> closeLight = LOW;</span><br><span class=\"line\"><span class=\"comment\">//等待 1.5s 后 关灯 1.5 继续检测是否有人运动 弥补 传感器 人未动无法检测的问题</span></span><br><span class=\"line\"><span class=\"type\">unsigned</span> <span class=\"type\">long</span> delayMillis = <span class=\"number\">2000</span>;</span><br><span class=\"line\"><span class=\"comment\">//传感器最后更新时间 </span></span><br><span class=\"line\"><span class=\"type\">unsigned</span> <span class=\"type\">long</span> lastMillis = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> lightOpen = <span class=\"number\">70</span>; <span class=\"comment\">//开灯角度</span></span><br><span class=\"line\"><span class=\"type\">int</span> lightClose = <span class=\"number\">180</span>; <span class=\"comment\">//关灯角度</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">setup</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// LED 输出</span></span><br><span class=\"line\">  pinMode(ledPin, OUTPUT); </span><br><span class=\"line\">  <span class=\"comment\">// 红外输入</span></span><br><span class=\"line\">  pinMode(infraredPin, INPUT);</span><br><span class=\"line\">  <span class=\"comment\">// 舵机控制信号引脚 </span></span><br><span class=\"line\">  myservo.attach(switchPin);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//串口调试</span></span><br><span class=\"line\">  Serial.begin(<span class=\"number\">9600</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//90 度 默认居中</span></span><br><span class=\"line\">  myservo.write(<span class=\"number\">90</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">loop</span><span class=\"params\">()</span> &#123; </span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//读取当前角度</span></span><br><span class=\"line\">  <span class=\"type\">int</span> nowState = myservo.read();</span><br><span class=\"line\">  Serial.print(<span class=\"string\">&quot;nowState -&gt; &quot;</span>);</span><br><span class=\"line\">  Serial.println(nowState);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 防止人为控制开关 推动舵机方向错误 刷新舵机方向与灯状态值一致</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (lightOpen == nowState)&#123;</span><br><span class=\"line\">    Serial.print(<span class=\"string\">&quot;open with high state\\n\\n&quot;</span>);</span><br><span class=\"line\">    lightState = HIGH;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (lightClose == nowState)&#123;</span><br><span class=\"line\">    Serial.print(<span class=\"string\">&quot;open with low state\\n\\n&quot;</span>);</span><br><span class=\"line\">    lightState = LOW;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">//当前光状态</span></span><br><span class=\"line\">  <span class=\"type\">int</span> brightState = detectiveBright();</span><br><span class=\"line\">  <span class=\"comment\">//保存人是否存在状态</span></span><br><span class=\"line\">  <span class=\"type\">int</span> personState = detectivePerson();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 只要取到人存在 就记录一下 时间</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (personState)&#123;</span><br><span class=\"line\">    lastMillis = millis(); <span class=\"comment\">// 记录一下 成功取到 的时间</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"literal\">false</span> == brightState)&#123; <span class=\"comment\">//光线不足</span></span><br><span class=\"line\">    <span class=\"comment\">// 刷新状态值保持一致性</span></span><br><span class=\"line\">    lightState = LOW;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 无光 时 只有2种情况需要操作</span></span><br><span class=\"line\">    <span class=\"comment\">// 1 有人 无灯 =&gt; 开灯</span></span><br><span class=\"line\">    <span class=\"comment\">// 2 有灯 无人 =&gt; 关灯</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (personState &amp;&amp; LOW == lightState)&#123; <span class=\"comment\">//有人 且 无灯</span></span><br><span class=\"line\">      switchLight(openLight); <span class=\"comment\">//开灯</span></span><br><span class=\"line\">      lastMillis = millis();</span><br><span class=\"line\">      Serial.print(<span class=\"string\">&quot;first start the light,the lastmillis is:&quot;</span>); </span><br><span class=\"line\">      Serial.println(lastMillis); </span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"literal\">false</span> == personState &amp;&amp; HIGH == lightState)&#123; <span class=\"comment\">// 有灯 无人</span></span><br><span class=\"line\">      <span class=\"comment\">// 无特殊原因无此情况</span></span><br><span class=\"line\">      Serial.print(<span class=\"string\">&quot; turn off:&quot;</span>); </span><br><span class=\"line\">      Serial.println(brightState); </span><br><span class=\"line\">      switchLight(closeLight);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123; <span class=\"comment\">//光线充足</span></span><br><span class=\"line\">    lightState = HIGH;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (HIGH == lightState &amp;&amp; <span class=\"literal\">false</span> == personState)&#123; <span class=\"comment\">//有光 有灯 无人</span></span><br><span class=\"line\">       <span class=\"type\">unsigned</span> <span class=\"type\">long</span> currentMillis = millis();</span><br><span class=\"line\">       <span class=\"keyword\">if</span> ((currentMillis - lastMillis) &gt; delayMillis)&#123; <span class=\"comment\">//延迟 n 秒关灯</span></span><br><span class=\"line\">          Serial.print(<span class=\"string\">&quot; turn off:&quot;</span>); </span><br><span class=\"line\">          Serial.println(lastMillis); </span><br><span class=\"line\">          switchLight(closeLight); <span class=\"comment\">//关灯</span></span><br><span class=\"line\">          lastMillis = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">           <span class=\"comment\">//虽然达到关灯要求 但需要 延迟 n 秒</span></span><br><span class=\"line\">           <span class=\"comment\">//继续判断是否有人</span></span><br><span class=\"line\">          <span class=\"type\">unsigned</span> <span class=\"type\">long</span> check = currentMillis - lastMillis;</span><br><span class=\"line\">          Serial.print(<span class=\"string\">&quot;still have time to turn off:&quot;</span>); </span><br><span class=\"line\">          Serial.println(check); </span><br><span class=\"line\">        &#125;       </span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 0.1秒查看一次</span></span><br><span class=\"line\">  delay(<span class=\"number\">100</span>);       </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//检查光源是否充足</span></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">detectiveBright</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 讀取光敏電阻並輸出到 Serial Port </span></span><br><span class=\"line\">  brightVal = analogRead(brightPin);</span><br><span class=\"line\">  <span class=\"comment\">//Serial.print(&quot;detectiveBright -&gt; brightVal: &quot;);</span></span><br><span class=\"line\">  <span class=\"comment\">//Serial.println(brightVal);   </span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 光線不足</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (brightVal &lt; minLight)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//brightState = LOW;</span></span><br><span class=\"line\">    <span class=\"comment\">//Serial.print(&quot;brightState = LOW; &quot;);</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123; <span class=\"comment\">//光线充足 ok</span></span><br><span class=\"line\">    <span class=\"comment\">//brightState = HIGH;</span></span><br><span class=\"line\">    <span class=\"comment\">//Serial.print(&quot;brightState = HIGH; &quot;);</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//检查 160度内 是否有人感应</span></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">detectivePerson</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> detectiveNum = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">20</span>; i++)&#123;</span><br><span class=\"line\">      personState = digitalRead(infraredPin); </span><br><span class=\"line\">      <span class=\"keyword\">if</span> (HIGH == personState)&#123;</span><br><span class=\"line\">        detectiveNum++;</span><br><span class=\"line\">        delay(<span class=\"number\">5</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//有人的时候输出高电平1 无人0</span></span><br><span class=\"line\">  Serial.print(<span class=\"string\">&quot;detectivePerson -&gt; detectiveNum: &quot;</span>);</span><br><span class=\"line\">  Serial.println(detectiveNum); </span><br><span class=\"line\">  <span class=\"comment\">// 有人情况超过一半 视为有人</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (detectiveNum &gt;= <span class=\"number\">10</span>)&#123;</span><br><span class=\"line\">    Serial.print(<span class=\"string\">&quot;perple on\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    Serial.print(<span class=\"string\">&quot;perple off\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 开灯 OR 关灯</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">switchLight</span><span class=\"params\">(<span class=\"type\">int</span> state)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//读取当前角度</span></span><br><span class=\"line\">  <span class=\"type\">int</span> nowState = myservo.read();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 0 - 180 度</span></span><br><span class=\"line\">  <span class=\"comment\">// 输入对应的角度值，舵机会转到此位置</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (state == openLight &amp;&amp; lightOpen != nowState)&#123; <span class=\"comment\">//打开</span></span><br><span class=\"line\">    Serial.print(<span class=\"string\">&quot;open&quot;</span>);</span><br><span class=\"line\">    myservo.write(lightOpen);              </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">if</span> (state == closeLight &amp;&amp; lightClose != nowState) &#123;  <span class=\"comment\">//关闭</span></span><br><span class=\"line\">    Serial.print(<span class=\"string\">&quot;close&quot;</span>);</span><br><span class=\"line\">    myservo.write(lightClose);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 更新灯状态</span></span><br><span class=\"line\">  lightState = state;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//开或关灯 时 LED显示</span></span><br><span class=\"line\">  digitalWrite(ledPin, lightState); <span class=\"comment\">// turn ON/OFF LED</span></span><br><span class=\"line\"></span><br><span class=\"line\">  Serial.print(<span class=\"string\">&quot;switchLight(): &quot;</span>);</span><br><span class=\"line\">  Serial.println(lightState);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<blockquote>\n<p>13号口LED灯仅调试时使用，测试时需拿下LED灯，LED亮会影响光敏判断流程 舵机最好单独供电，人体红外探测范围约160度左右不够时可多加几位人体红外，面板包仅测试时使用，长期使用可能会不稳定</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>使用 Arduino 光敏、人体红外传感器、舵机来控制灯光开启。这里以不破坏原则使用舵机推动开关来实现开灯和关灯。 实现目标：区域内光线强度不够时，同时有人在区域内驱动舵机推动开关开灯，无人在或光线强度足够则关灯</p>\n</blockquote>\n<h2 id=\"接线图\"><a href=\"#接线图\" class=\"headerlink\" title=\"接线图\"></a>接线图</h2><p><img src=\"/Arduino-%E7%81%AF%E5%85%89%E6%8E%A7%E5%88%B6-2016-04-10/light.jpg\" alt=\"接线图\"></p>\n<h2 id=\"控制代码\"><a href=\"#控制代码\" class=\"headerlink\" title=\"控制代码\"></a>控制代码</h2>","more":"<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;Servo.h&gt;</span> <span class=\"comment\">//舵机驱动库</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">Servo myservo; <span class=\"comment\">// 最多可以控制8路舵机</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> *  光敏 pin 2</span></span><br><span class=\"line\"><span class=\"comment\"> *  红外 pin 7</span></span><br><span class=\"line\"><span class=\"comment\"> *  舵机 pin 9</span></span><br><span class=\"line\"><span class=\"comment\"> *  [LED] pin 13</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">// 光敏 接在   pin 2</span></span><br><span class=\"line\"><span class=\"type\">int</span> brightPin = <span class=\"number\">2</span>; </span><br><span class=\"line\"><span class=\"comment\">// 光值</span></span><br><span class=\"line\"><span class=\"type\">int</span> brightVal = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"comment\">// 小于此值时 开灯</span></span><br><span class=\"line\"><span class=\"type\">int</span> minLight = <span class=\"number\">250</span>;</span><br><span class=\"line\"><span class=\"comment\">// LED 13号口</span></span><br><span class=\"line\"><span class=\"type\">int</span> ledPin = <span class=\"number\">13</span>;</span><br><span class=\"line\"><span class=\"comment\">// 光线状态</span></span><br><span class=\"line\"><span class=\"comment\">//int brightState = HIGH;</span></span><br><span class=\"line\"><span class=\"comment\">// 红外感应 pin 7</span></span><br><span class=\"line\"><span class=\"type\">int</span> infraredPin = <span class=\"number\">7</span>;</span><br><span class=\"line\"><span class=\"comment\">// 人感应状态</span></span><br><span class=\"line\"><span class=\"type\">int</span> personState = LOW;</span><br><span class=\"line\"><span class=\"comment\">// light 状态</span></span><br><span class=\"line\"><span class=\"type\">int</span> lightState = LOW;</span><br><span class=\"line\"><span class=\"comment\">// 舵机 pin 9</span></span><br><span class=\"line\"><span class=\"type\">int</span> switchPin = <span class=\"number\">9</span>;</span><br><span class=\"line\"><span class=\"comment\">//打开灯</span></span><br><span class=\"line\"><span class=\"type\">int</span> openLight = HIGH;</span><br><span class=\"line\"><span class=\"comment\">//关闭灯</span></span><br><span class=\"line\"><span class=\"type\">int</span> closeLight = LOW;</span><br><span class=\"line\"><span class=\"comment\">//等待 1.5s 后 关灯 1.5 继续检测是否有人运动 弥补 传感器 人未动无法检测的问题</span></span><br><span class=\"line\"><span class=\"type\">unsigned</span> <span class=\"type\">long</span> delayMillis = <span class=\"number\">2000</span>;</span><br><span class=\"line\"><span class=\"comment\">//传感器最后更新时间 </span></span><br><span class=\"line\"><span class=\"type\">unsigned</span> <span class=\"type\">long</span> lastMillis = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> lightOpen = <span class=\"number\">70</span>; <span class=\"comment\">//开灯角度</span></span><br><span class=\"line\"><span class=\"type\">int</span> lightClose = <span class=\"number\">180</span>; <span class=\"comment\">//关灯角度</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">setup</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// LED 输出</span></span><br><span class=\"line\">  pinMode(ledPin, OUTPUT); </span><br><span class=\"line\">  <span class=\"comment\">// 红外输入</span></span><br><span class=\"line\">  pinMode(infraredPin, INPUT);</span><br><span class=\"line\">  <span class=\"comment\">// 舵机控制信号引脚 </span></span><br><span class=\"line\">  myservo.attach(switchPin);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//串口调试</span></span><br><span class=\"line\">  Serial.begin(<span class=\"number\">9600</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//90 度 默认居中</span></span><br><span class=\"line\">  myservo.write(<span class=\"number\">90</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">loop</span><span class=\"params\">()</span> &#123; </span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//读取当前角度</span></span><br><span class=\"line\">  <span class=\"type\">int</span> nowState = myservo.read();</span><br><span class=\"line\">  Serial.print(<span class=\"string\">&quot;nowState -&gt; &quot;</span>);</span><br><span class=\"line\">  Serial.println(nowState);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 防止人为控制开关 推动舵机方向错误 刷新舵机方向与灯状态值一致</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (lightOpen == nowState)&#123;</span><br><span class=\"line\">    Serial.print(<span class=\"string\">&quot;open with high state\\n\\n&quot;</span>);</span><br><span class=\"line\">    lightState = HIGH;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (lightClose == nowState)&#123;</span><br><span class=\"line\">    Serial.print(<span class=\"string\">&quot;open with low state\\n\\n&quot;</span>);</span><br><span class=\"line\">    lightState = LOW;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">//当前光状态</span></span><br><span class=\"line\">  <span class=\"type\">int</span> brightState = detectiveBright();</span><br><span class=\"line\">  <span class=\"comment\">//保存人是否存在状态</span></span><br><span class=\"line\">  <span class=\"type\">int</span> personState = detectivePerson();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 只要取到人存在 就记录一下 时间</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (personState)&#123;</span><br><span class=\"line\">    lastMillis = millis(); <span class=\"comment\">// 记录一下 成功取到 的时间</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"literal\">false</span> == brightState)&#123; <span class=\"comment\">//光线不足</span></span><br><span class=\"line\">    <span class=\"comment\">// 刷新状态值保持一致性</span></span><br><span class=\"line\">    lightState = LOW;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 无光 时 只有2种情况需要操作</span></span><br><span class=\"line\">    <span class=\"comment\">// 1 有人 无灯 =&gt; 开灯</span></span><br><span class=\"line\">    <span class=\"comment\">// 2 有灯 无人 =&gt; 关灯</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (personState &amp;&amp; LOW == lightState)&#123; <span class=\"comment\">//有人 且 无灯</span></span><br><span class=\"line\">      switchLight(openLight); <span class=\"comment\">//开灯</span></span><br><span class=\"line\">      lastMillis = millis();</span><br><span class=\"line\">      Serial.print(<span class=\"string\">&quot;first start the light,the lastmillis is:&quot;</span>); </span><br><span class=\"line\">      Serial.println(lastMillis); </span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"literal\">false</span> == personState &amp;&amp; HIGH == lightState)&#123; <span class=\"comment\">// 有灯 无人</span></span><br><span class=\"line\">      <span class=\"comment\">// 无特殊原因无此情况</span></span><br><span class=\"line\">      Serial.print(<span class=\"string\">&quot; turn off:&quot;</span>); </span><br><span class=\"line\">      Serial.println(brightState); </span><br><span class=\"line\">      switchLight(closeLight);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123; <span class=\"comment\">//光线充足</span></span><br><span class=\"line\">    lightState = HIGH;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (HIGH == lightState &amp;&amp; <span class=\"literal\">false</span> == personState)&#123; <span class=\"comment\">//有光 有灯 无人</span></span><br><span class=\"line\">       <span class=\"type\">unsigned</span> <span class=\"type\">long</span> currentMillis = millis();</span><br><span class=\"line\">       <span class=\"keyword\">if</span> ((currentMillis - lastMillis) &gt; delayMillis)&#123; <span class=\"comment\">//延迟 n 秒关灯</span></span><br><span class=\"line\">          Serial.print(<span class=\"string\">&quot; turn off:&quot;</span>); </span><br><span class=\"line\">          Serial.println(lastMillis); </span><br><span class=\"line\">          switchLight(closeLight); <span class=\"comment\">//关灯</span></span><br><span class=\"line\">          lastMillis = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">           <span class=\"comment\">//虽然达到关灯要求 但需要 延迟 n 秒</span></span><br><span class=\"line\">           <span class=\"comment\">//继续判断是否有人</span></span><br><span class=\"line\">          <span class=\"type\">unsigned</span> <span class=\"type\">long</span> check = currentMillis - lastMillis;</span><br><span class=\"line\">          Serial.print(<span class=\"string\">&quot;still have time to turn off:&quot;</span>); </span><br><span class=\"line\">          Serial.println(check); </span><br><span class=\"line\">        &#125;       </span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 0.1秒查看一次</span></span><br><span class=\"line\">  delay(<span class=\"number\">100</span>);       </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//检查光源是否充足</span></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">detectiveBright</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 讀取光敏電阻並輸出到 Serial Port </span></span><br><span class=\"line\">  brightVal = analogRead(brightPin);</span><br><span class=\"line\">  <span class=\"comment\">//Serial.print(&quot;detectiveBright -&gt; brightVal: &quot;);</span></span><br><span class=\"line\">  <span class=\"comment\">//Serial.println(brightVal);   </span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 光線不足</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (brightVal &lt; minLight)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//brightState = LOW;</span></span><br><span class=\"line\">    <span class=\"comment\">//Serial.print(&quot;brightState = LOW; &quot;);</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123; <span class=\"comment\">//光线充足 ok</span></span><br><span class=\"line\">    <span class=\"comment\">//brightState = HIGH;</span></span><br><span class=\"line\">    <span class=\"comment\">//Serial.print(&quot;brightState = HIGH; &quot;);</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//检查 160度内 是否有人感应</span></span><br><span class=\"line\"><span class=\"type\">bool</span> <span class=\"title function_\">detectivePerson</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> detectiveNum = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">20</span>; i++)&#123;</span><br><span class=\"line\">      personState = digitalRead(infraredPin); </span><br><span class=\"line\">      <span class=\"keyword\">if</span> (HIGH == personState)&#123;</span><br><span class=\"line\">        detectiveNum++;</span><br><span class=\"line\">        delay(<span class=\"number\">5</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//有人的时候输出高电平1 无人0</span></span><br><span class=\"line\">  Serial.print(<span class=\"string\">&quot;detectivePerson -&gt; detectiveNum: &quot;</span>);</span><br><span class=\"line\">  Serial.println(detectiveNum); </span><br><span class=\"line\">  <span class=\"comment\">// 有人情况超过一半 视为有人</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (detectiveNum &gt;= <span class=\"number\">10</span>)&#123;</span><br><span class=\"line\">    Serial.print(<span class=\"string\">&quot;perple on\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    Serial.print(<span class=\"string\">&quot;perple off\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 开灯 OR 关灯</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">switchLight</span><span class=\"params\">(<span class=\"type\">int</span> state)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//读取当前角度</span></span><br><span class=\"line\">  <span class=\"type\">int</span> nowState = myservo.read();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 0 - 180 度</span></span><br><span class=\"line\">  <span class=\"comment\">// 输入对应的角度值，舵机会转到此位置</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (state == openLight &amp;&amp; lightOpen != nowState)&#123; <span class=\"comment\">//打开</span></span><br><span class=\"line\">    Serial.print(<span class=\"string\">&quot;open&quot;</span>);</span><br><span class=\"line\">    myservo.write(lightOpen);              </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">if</span> (state == closeLight &amp;&amp; lightClose != nowState) &#123;  <span class=\"comment\">//关闭</span></span><br><span class=\"line\">    Serial.print(<span class=\"string\">&quot;close&quot;</span>);</span><br><span class=\"line\">    myservo.write(lightClose);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 更新灯状态</span></span><br><span class=\"line\">  lightState = state;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//开或关灯 时 LED显示</span></span><br><span class=\"line\">  digitalWrite(ledPin, lightState); <span class=\"comment\">// turn ON/OFF LED</span></span><br><span class=\"line\"></span><br><span class=\"line\">  Serial.print(<span class=\"string\">&quot;switchLight(): &quot;</span>);</span><br><span class=\"line\">  Serial.println(lightState);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<blockquote>\n<p>13号口LED灯仅调试时使用，测试时需拿下LED灯，LED亮会影响光敏判断流程 舵机最好单独供电，人体红外探测范围约160度左右不够时可多加几位人体红外，面板包仅测试时使用，长期使用可能会不稳定</p>\n</blockquote>"},{"title":"VIM 配置","date":"2015-12-11T13:31:49.000Z","_content":"\n>VIM 7.4 以上版本，大部分配置同时适用于 Linux / Mac OS 终端 以及 gVim\n\n\n## 安装插件管理器 \n\n```bash\ngit clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle\n```\n\n## 完整配置\n>编辑本用户的 vim 配置文件\n>Linux / Mac OS 一般创建文件 ~/.vimrc\n>Windows 可在用户名文件夹下创建 .vimrc 文件 (C:\\Users\\USERNAME)\n\n<!-- more -->\n```bash\n\" =============================================================================\n\"        << 判断操作系统是 Windows 还是 Linux 和判断是终端还是 Gvim >>\n\" =============================================================================\n\n\" -----------------------------------------------------------------------------\n\"  < 判断操作系统是否是 Windows 还是 Linux >\n\" -----------------------------------------------------------------------------\nlet g:iswindows = 0\nlet g:islinux = 0\nif(has(\"win32\") || has(\"win64\") || has(\"win95\") || has(\"win16\"))\n    let g:iswindows = 1\nelse\n    let g:islinux = 1\nendif\n\n\" -----------------------------------------------------------------------------\n\"  < 判断是终端还是 Gvim >\n\" -----------------------------------------------------------------------------\nif has(\"gui_running\")\n    let g:isGUI = 1\nelse\n    let g:isGUI = 0\nendif\n\n\n\" =============================================================================\n\"                          << 以下为软件默认配置 >>\n\" =============================================================================\n\n\" -----------------------------------------------------------------------------\n\"  < Windows Gvim 默认配置> 做了一点修改\n\" -----------------------------------------------------------------------------\nif (g:iswindows && g:isGUI)\n    source $VIMRUNTIME/vimrc_example.vim\n    source $VIMRUNTIME/mswin.vim\n    behave mswin\n    set diffexpr=MyDiff()\n\n    function MyDiff()\n        let opt = '-a --binary '\n        if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif\n        if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif\n        let arg1 = v:fname_in\n        if arg1 =~ ' ' | let arg1 = '\"' . arg1 . '\"' | endif\n        let arg2 = v:fname_new\n        if arg2 =~ ' ' | let arg2 = '\"' . arg2 . '\"' | endif\n        let arg3 = v:fname_out\n        if arg3 =~ ' ' | let arg3 = '\"' . arg3 . '\"' | endif\n        let eq = ''\n        if $VIMRUNTIME =~ ' '\n            if &sh =~ '\\<cmd'\n                let cmd = '\"\"' . $VIMRUNTIME . '\\diff\"'\n                let eq = '\"'\n            else\n                let cmd = substitute($VIMRUNTIME, ' ', '\" ', '') . '\\diff\"'\n            endif\n        else\n            let cmd = $VIMRUNTIME . '\\diff'\n        endif\n        silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3 . eq\n    endfunction\nendif\n\n\" -----------------------------------------------------------------------------\n\"  < Linux Gvim/Vim 默认配置> 做了一点修改\n\" -----------------------------------------------------------------------------\nif g:islinux\n    set hlsearch        \"高亮搜索\n    set incsearch       \"在输入要搜索的文字时，实时匹配\n\n    \" Uncomment the following to have Vim jump to the last position when\n    \" reopening a file\n    if has(\"autocmd\")\n        au BufReadPost * if line(\"'\\\"\") > 1 && line(\"'\\\"\") <= line(\"$\") | exe \"normal! g'\\\"\" | endif\n    endif\n\n    if g:isGUI\n        \" Source a global configuration file if available\n        if filereadable(\"/etc/vim/gvimrc.local\")\n            source /etc/vim/gvimrc.local\n        endif\n    else\n        \" This line should not be removed as it ensures that various options are\n        \" properly set to work with the Vim-related packages available in Debian.\n        runtime! debian.vim\n\n        \" Vim5 and later versions support syntax highlighting. Uncommenting the next\n        \" line enables syntax highlighting by default.\n        if has(\"syntax\")\n            syntax on\n        endif\n\n        \" set mouse=a                    \" 在任何模式下启用鼠标\n        set t_Co=256                   \" 在终端启用256色\n        set backspace=2                \" 设置退格键可用\n\n        \" Source a global configuration file if available\n        if filereadable(\"/etc/vim/vimrc.local\")\n            source /etc/vim/vimrc.local\n        endif\n    endif\nendif\n\n\n\" =============================================================================\n\"                          << 以下为用户自定义配置 >>\n\" =============================================================================\n\n\" -----------------------------------------------------------------------------\n\"  < Vundle 插件管理工具配置 >\n\" -----------------------------------------------------------------------------\n\" 用于更方便的管理vim插件，具体用法参考 :h vundle 帮助\n\" Vundle工具安装方法为在终端输入如下命令\n\" git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle\n\" 如果想在 windows 安装就必需先安装 \"git for window\"，可查阅网上资料\n\nset nocompatible                                      \"禁用 Vi 兼容模式\nfiletype off                                          \"禁用文件类型侦测\n\nif g:islinux\n    set rtp+=~/.vim/bundle/vundle/\n    call vundle#rc()\nelse\n    set rtp+=$VIM/vimfiles/bundle/vundle/\n    call vundle#rc('$VIM/vimfiles/bundle/')\nendif\n\n\" 使用Vundle来管理插件，这个必须要有。\nBundle 'gmarik/vundle'\n\n\" 以下为要安装或更新的插件，不同仓库都有（具体书写规范请参考帮助）\n\" -----------------------------------------------------------------------------\n\"  < a.vim 插件配置 >\n\" -----------------------------------------------------------------------------\n\" :AS    ---切换头文件并水平分割窗口\n\" Bundle 'a.vim'\n\" -----------------------------------------------------------------------------\n\"  < Align 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 一个对齐的插件，用来——排版与对齐代码，功能强大，不过用到的机会不多\nBundle 'Align'\n\" -----------------------------------------------------------------------------\n\"  < tab 键自动补全 >\n\" -----------------------------------------------------------------------------\n\" Bundle 'SuperTab'\n\" -----------------------------------------------------------------------------\n\"  < auto-pairs 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 用于括号与引号自动补全，不过会与函数原型提示插件echofunc冲突\nBundle 'jiangmiao/auto-pairs'\n\" -----------------------------------------------------------------------------\n\"  < BufExplorer 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 快速轻松的在缓存中切换（相当于另一种多个文件间的切换方式）\nBundle 'bufexplorer.zip'\n\" -----------------------------------------------------------------------------\n\"  < ccvext.vim 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 用于对指定文件自动生成tags与cscope文件并连接\n\" Bundle 'ccvext.vim'\n\" -----------------------------------------------------------------------------\n\"  < cSyntaxAfter 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 高亮括号与运算符等\nBundle 'cSyntaxAfter'\n\" -----------------------------------------------------------------------------\n\"  < ctrlp.vim 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 一个全路径模糊文件，缓冲区，最近最多使用，... 检索插件；详细帮助见 :h ctrlp\n\" 常规模式下输入：Ctrl + p 调用插件\nBundle 'ctrlpvim/ctrlp.vim'\n\" -----------------------------------------------------------------------------\n\"  < emmet-vim（前身为Zen coding） 插件配置 >\n\" -----------------------------------------------------------------------------\n\" HTML/CSS代码快速编写神器，详细帮助见 :h emmet.txt\nBundle 'mattn/emmet-vim'\n\" -----------------------------------------------------------------------------\n\"  < indentLine 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 用于显示对齐线，与 indent_guides 在显示方式上不同，根据自己喜好选择了\n\" 在终端上会有屏幕刷新的问题，这个问题能解决有更好了\nBundle 'Yggdroot/indentLine'\n\" -----------------------------------------------------------------------------\n\"  < vim-javacompleteex（也就是 javacomplete 增强版）插件配置 >\n\" -----------------------------------------------------------------------------\n\" java 补全插件\n\" Bundle 'vim-javacompleteex'\n\" -----------------------------------------------------------------------------\n\"  < Mark--Karkat（也就是 Mark） 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 给不同的单词高亮，表明不同的变量时很有用，详细帮助见 :h mark.txt\nBundle 'Mark--Karkat'\n\" -----------------------------------------------------------------------------\n\"  < neocomplcache 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 关键字补全、文件路径补全、tag补全等等，各种，非常好用，速度超快。\nBundle 'Shougo/neocomplcache.vim'\n\" -----------------------------------------------------------------------------\n\"  < nerdcommenter 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 我主要用于C/C++代码注释(其它的也行)\n\" 以下为插件默认快捷键，其中的说明是以C/C++为例的，其它语言类似\nBundle 'scrooloose/nerdcommenter'\n\" -----------------------------------------------------------------------------\n\"  < nerdtree 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 有目录村结构的文件浏览插件\n\n\" 常规模式下输入 F2 调用插件\nBundle 'scrooloose/nerdtree'\n\" -----------------------------------------------------------------------------\n\"  < omnicppcomplete 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 用于C/C++代码补全，这种补全主要针对命名空间、类、结构、共同体等进行补全，详细\n\" 说明可以参考帮助或网络教程等\n\" 使用前先执行如下 ctags 命令（本配置中可以直接使用 ccvext 插件来执行以下命令）\n\" ctags -R --c++-kinds=+p --fields=+iaS --extra=+q\n\" 我使用上面的参数生成标签后，对函数使用跳转时会出现多个选择\n\" Bundle 'OmniCppComplete'\n\" -----------------------------------------------------------------------------\n\"  < powerline 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 状态栏插件，更好的状态栏效果\nBundle 'Lokaltog/vim-powerline'\n\" -----------------------------------------------------------------------------\n\"  < repeat 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 主要用\".\"命令来重复上次插件使用的命令\nBundle 'repeat.vim'\n\" -----------------------------------------------------------------------------\n\"  < snipMate 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 用于各种代码补全，这种补全是一种对代码中的词与代码块的缩写补全，详细用法可以参\n\" 考使用说明或网络教程等。不过有时候也会与 supertab 插件在补全时产生冲突，如果大\n\" 侠有什么其它解决方法希望不要保留呀\nBundle 'msanders/snipmate.vim'\n\" -----------------------------------------------------------------------------\n\"  < SrcExpl 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 增强源代码浏览，其功能就像Windows中的\"Source Insight\"\nBundle 'wesleyche/SrcExpl'\n\" -----------------------------------------------------------------------------\n\"  < std_c 插件配置 >\n\" -----------------------------------------------------------------------------\n\" Bundle 'std_c.zip'\n\" -----------------------------------------------------------------------------\n\"  < surround 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 快速给单词/句子两边增加符号（包括html标签），缺点是不能用\".\"来重复命令\n\" 不过 repeat 插件可以解决这个问题，详细帮助见 :h surround.txt\nBundle 'tpope/vim-surround'\n\" -----------------------------------------------------------------------------\n\"  < Syntastic 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 用于保存文件时查检语法\nBundle 'scrooloose/syntastic'\n\" -----------------------------------------------------------------------------\n\"  < Tagbar 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 相对 TagList 能更好的支持面向对象\n\n\" 常规模式下输入 tb 调用插件，如果有打开 TagList 窗口则先将其关闭\nBundle 'majutsushi/tagbar'\n\" -----------------------------------------------------------------------------\n\"  < TagList 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 高效地浏览源码, 其功能就像vc中的workpace\n\" 那里面列出了当前文件中的所有宏,全局变量, 函数名等\n\" 常规模式下输入 tl 调用插件，如果有打开 Tagbar 窗口则先将其关闭\nBundle 'taglist.vim'\n\" -----------------------------------------------------------------------------\n\"  < txtbrowser 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 用于文本文件生成标签与与语法高亮（调用TagList插件生成标签，如果可以）\nBundle 'TxtBrowser'\n\" -----------------------------------------------------------------------------\n\"  < ZoomWin 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 用于分割窗口的最大化与还原\n\" 常规模式下按快捷键 <c-w>o 在最大化与还原间切换\nBundle 'ZoomWin'\n\n\" Go 语法高亮 https://github.com/fatih/vim-go \nBundle 'fatih/vim-go'\n\n\" Go 语法检查\nBundle 'rjohnsondev/vim-compiler-go'\n\n\" PHP DOC MAC ONLY\nBundle 'rizzatti/dash.vim'\n\n\" 全文搜索（项目） 函数名\n\" 需要先安装 ack \n\" yum install ack\nBundle 'mileszs/ack.vim'\nBundle 'dyng/ctrlsf.vim'\n\n\" 全局搜索 leader - t 开启\nBundle 'wincent/command-t'\n\n\" coffee-script compile\nBundle 'kchmck/vim-coffee-script'\n\n\" -----------------------------------------------------------------------------\n\"  < 编码配置 >\n\" -----------------------------------------------------------------------------\n\" 注：使用utf-8格式后，软件与程序源码、文件路径不能有中文，否则报错\nset encoding=utf-8                                    \"设置gvim内部编码，默认不更改\nset fileencoding=utf-8                                \"设置当前文件编码，可以更改，如：gbk（同cp936）\nset fileencodings=ucs-bom,utf-8,gbk,cp936,latin-1     \"设置支持打开的文件的编码\n\n\" 文件格式，默认 ffs=dos,unix\nset fileformat=unix                                   \"设置新（当前）文件的<EOL>格式，可以更改，如：dos（windows系统常用）\nset fileformats=unix,dos,mac                          \"给出文件的<EOL>格式类型\n\nif (g:iswindows && g:isGUI)\n    \"解决菜单乱码\n    source $VIMRUNTIME/delmenu.vim\n    source $VIMRUNTIME/menu.vim\n\n    \"解决consle输出乱码\n    language messages zh_CN.utf-8\nendif\n\n\" -----------------------------------------------------------------------------\n\"  < 编写文件时的配置 >\n\" -----------------------------------------------------------------------------\nfiletype on                                           \"启用文件类型侦测\nfiletype plugin on                                    \"针对不同的文件类型加载对应的插件\nfiletype plugin indent on                             \"启用缩进\nset smartindent                                       \"启用智能对齐方式\nset expandtab                                         \"将Tab键转换为空格\nset tabstop=4                                         \"设置Tab键的宽度，可以更改，如：宽度为2\nset shiftwidth=4                                      \"换行时自动缩进宽度，可更改（宽度同tabstop）\nset smarttab                                          \"指定按一次backspace就删除shiftwidth宽度\n\" set foldenable                                        \"启用折叠\n\" set foldmethod=indent                                 \"indent 折叠方式\n\" set foldmethod=marker                                \"marker 折叠方式\n\n\" 常规模式下用空格键来开关光标行所在折叠（注：zR 展开所有折叠，zM 关闭所有折叠）\nnnoremap <space> @=((foldclosed(line('.')) < 0) ? 'zc' : 'zo')<CR>\n\n\" 当文件在外部被修改，自动更新该文件\nset autoread\n\n\" 常规模式下输入 cS 清除行尾空格\nnmap cS :%s/\\s\\+$//g<CR>:noh<CR>\n\n\" 常规模式下输入 cM 清除行尾 ^M 符号\nnmap cM :%s/\\r$//g<CR>:noh<CR>\n\nset ignorecase                                        \"搜索模式里忽略大小写\n\" set smartcase                                         \"如果搜索模式包含大写字符，不使用 'ignorecase' 选项，只有在输入搜索模式并且打开 'ignorecase' 选项时才会使用\n\" set noincsearch                                       \"在输入要搜索的文字时，取消实时匹配\n\n\" Ctrl + K 插入模式下光标向上移动\nimap <c-k> <Up>\n\n\" Ctrl + J 插入模式下光标向下移动\nimap <c-j> <Down>\n\n\" Ctrl + H 插入模式下光标向左移动\nimap <c-h> <Left>\n\n\" Ctrl + L 插入模式下光标向右移动\nimap <c-l> <Right>\n\n\" 启用每行超过80列的字符提示（字体变蓝并加下划线），不启用就注释掉\n\" au BufWinEnter * let w:m2=matchadd('Underlined', '\\%>' . 80 . 'v.\\+', -1)\n\n\" -----------------------------------------------------------------------------\n\"  < 界面配置 >\n\" -----------------------------------------------------------------------------\nset number                                            \"显示行号\nset laststatus=2                                      \"启用状态栏信息\nset cmdheight=2                                       \"设置命令行的高度为2，默认为1\nset cursorline                                        \"突出显示当前行\n\" set guifont=YaHei_Consolas_Hybrid:h10                 \"设置字体:字号（字体名称空格用下划线代替）\nset guifont=courier_new:h9                            \"设置字体:字号（字体名称空格用下划线代替）\n\" set nowrap                                            \"设置不自动换行\nset shortmess=atI                                     \"去掉欢迎界面\n\n\" 设置 gVim 窗口初始位置及大小\nif g:isGUI\n    set guifont=courier_new:h16                           \"设置字体:字号（字体名称空格用下划线代替）\n    \" au GUIEnter * simalt ~x                           \"窗口启动时自动最大化\n    winpos 100 10                                     \"指定窗口出现的位置，坐标原点在屏幕左上角\n    set lines=50 columns=180                          \"指定窗口大小，lines为高度，columns为宽度\nendif\n\n\" 设置代码配色方案\nif g:isGUI\n    colorscheme molokai               \"Gvim配色方案\nelse\n    colorscheme molokai               \"终端配色方案\nendif\n\n\" 显示/隐藏菜单栏、工具栏、滚动条，可用 Ctrl + F11 切换\nif g:isGUI\n    set guioptions-=m\n    set guioptions-=T\n    set guioptions-=r\n    set guioptions-=L\n    nmap <silent> <c-F11> :if &guioptions =~# 'm' <Bar>\n        \\set guioptions-=m <Bar>\n        \\set guioptions-=T <Bar>\n        \\set guioptions-=r <Bar>\n        \\set guioptions-=L <Bar>\n    \\else <Bar>\n        \\set guioptions+=m <Bar>\n        \\set guioptions+=T <Bar>\n        \\set guioptions+=r <Bar>\n        \\set guioptions+=L <Bar>\n    \\endif<CR>\nendif\n\n\" -----------------------------------------------------------------------------\n\"  < 编译、连接、运行配置 (目前只配置了C、C++、Java语言)>\n\" -----------------------------------------------------------------------------\n\" F9 一键保存、编译、连接存并运行\nnmap <F9> :call Run()<CR>\nimap <F9> <ESC>:call Run()<CR>\n\n\" Ctrl + F9 一键保存并编译\nnmap <c-F9> :call Compile()<CR>\nimap <c-F9> <ESC>:call Compile()<CR>\n\n\" Ctrl + F10 一键保存并连接\nnmap <c-F10> :call Link()<CR>\nimap <c-F10> <ESC>:call Link()<CR>\n\nlet s:LastShellReturn_C = 0\nlet s:LastShellReturn_L = 0\nlet s:ShowWarning = 1\nlet s:Obj_Extension = '.o'\nlet s:Exe_Extension = '.exe'\nlet s:Class_Extension = '.class'\nlet s:Sou_Error = 0\n\nlet s:windows_CFlags = 'gcc\\ -fexec-charset=gbk\\ -Wall\\ -g\\ -O0\\ -c\\ %\\ -o\\ %<.o'\nlet s:linux_CFlags = 'gcc\\ -Wall\\ -g\\ -O0\\ -c\\ %\\ -o\\ %<.o'\n\nlet s:windows_CPPFlags = 'g++\\ -fexec-charset=gbk\\ -Wall\\ -g\\ -O0\\ -c\\ %\\ -o\\ %<.o'\nlet s:linux_CPPFlags = 'g++\\ -Wall\\ -g\\ -O0\\ -c\\ %\\ -o\\ %<.o'\n\nlet s:JavaFlags = 'javac\\ %'\n\nfunc! Compile()\n    exe \":ccl\"\n    exe \":update\"\n    let s:Sou_Error = 0\n    let s:LastShellReturn_C = 0\n    let Sou = expand(\"%:p\")\n    let v:statusmsg = ''\n    if expand(\"%:e\") == \"c\" || expand(\"%:e\") == \"cpp\" || expand(\"%:e\") == \"cxx\"\n        let Obj = expand(\"%:p:r\").s:Obj_Extension\n        let Obj_Name = expand(\"%:p:t:r\").s:Obj_Extension\n        if !filereadable(Obj) || (filereadable(Obj) && (getftime(Obj) < getftime(Sou)))\n            redraw!\n            if expand(\"%:e\") == \"c\"\n                if g:iswindows\n                    exe \":setlocal makeprg=\".s:windows_CFlags\n                else\n                    exe \":setlocal makeprg=\".s:linux_CFlags\n                endif\n                echohl WarningMsg | echo \" compiling...\"\n                silent make\n            elseif expand(\"%:e\") == \"cpp\" || expand(\"%:e\") == \"cxx\"\n                if g:iswindows\n                    exe \":setlocal makeprg=\".s:windows_CPPFlags\n                else\n                    exe \":setlocal makeprg=\".s:linux_CPPFlags\n                endif\n                echohl WarningMsg | echo \" compiling...\"\n                silent make\n            endif\n            redraw!\n            if v:shell_error != 0\n                let s:LastShellReturn_C = v:shell_error\n            endif\n            if g:iswindows\n                if s:LastShellReturn_C != 0\n                    exe \":bo cope\"\n                    echohl WarningMsg | echo \" compilation failed\"\n                else\n                    if s:ShowWarning\n                        exe \":bo cw\"\n                    endif\n                    echohl WarningMsg | echo \" compilation successful\"\n                endif\n            else\n                if empty(v:statusmsg)\n                    echohl WarningMsg | echo \" compilation successful\"\n                else\n                    exe \":bo cope\"\n                endif\n            endif\n        else\n            echohl WarningMsg | echo \"\"Obj_Name\"is up to date\"\n        endif\n    elseif expand(\"%:e\") == \"java\"\n        let class = expand(\"%:p:r\").s:Class_Extension\n        let class_Name = expand(\"%:p:t:r\").s:Class_Extension\n        if !filereadable(class) || (filereadable(class) && (getftime(class) < getftime(Sou)))\n            redraw!\n            exe \":setlocal makeprg=\".s:JavaFlags\n            echohl WarningMsg | echo \" compiling...\"\n            silent make\n            redraw!\n            if v:shell_error != 0\n                let s:LastShellReturn_C = v:shell_error\n            endif\n            if g:iswindows\n                if s:LastShellReturn_C != 0\n                    exe \":bo cope\"\n                    echohl WarningMsg | echo \" compilation failed\"\n                else\n                    if s:ShowWarning\n                        exe \":bo cw\"\n                    endif\n                    echohl WarningMsg | echo \" compilation successful\"\n                endif\n            else\n                if empty(v:statusmsg)\n                    echohl WarningMsg | echo \" compilation successful\"\n                else\n                    exe \":bo cope\"\n                endif\n            endif\n        else\n            echohl WarningMsg | echo \"\"class_Name\"is up to date\"\n        endif\n    else\n        let s:Sou_Error = 1\n        echohl WarningMsg | echo \" please choose the correct source file\"\n    endif\n    exe \":setlocal makeprg=make\"\nendfunc\n\nfunc! Link()\n    call Compile()\n    if s:Sou_Error || s:LastShellReturn_C != 0\n        return\n    endif\n    if expand(\"%:e\") == \"c\" || expand(\"%:e\") == \"cpp\" || expand(\"%:e\") == \"cxx\"\n        let s:LastShellReturn_L = 0\n        let Sou = expand(\"%:p\")\n        let Obj = expand(\"%:p:r\").s:Obj_Extension\n        if g:iswindows\n            let Exe = expand(\"%:p:r\").s:Exe_Extension\n            let Exe_Name = expand(\"%:p:t:r\").s:Exe_Extension\n        else\n            let Exe = expand(\"%:p:r\")\n            let Exe_Name = expand(\"%:p:t:r\")\n        endif\n        let v:statusmsg = ''\n        if filereadable(Obj) && (getftime(Obj) >= getftime(Sou))\n            redraw!\n            if !executable(Exe) || (executable(Exe) && getftime(Exe) < getftime(Obj))\n                if expand(\"%:e\") == \"c\"\n                    setlocal makeprg=gcc\\ -o\\ %<\\ %<.o\n                    echohl WarningMsg | echo \" linking...\"\n                    silent make\n                elseif expand(\"%:e\") == \"cpp\" || expand(\"%:e\") == \"cxx\"\n                    setlocal makeprg=g++\\ -o\\ %<\\ %<.o\n                    echohl WarningMsg | echo \" linking...\"\n                    silent make\n                endif\n                redraw!\n                if v:shell_error != 0\n                    let s:LastShellReturn_L = v:shell_error\n                endif\n                if g:iswindows\n                    if s:LastShellReturn_L != 0\n                        exe \":bo cope\"\n                        echohl WarningMsg | echo \" linking failed\"\n                    else\n                        if s:ShowWarning\n                            exe \":bo cw\"\n                        endif\n                        echohl WarningMsg | echo \" linking successful\"\n                    endif\n                else\n                    if empty(v:statusmsg)\n                        echohl WarningMsg | echo \" linking successful\"\n                    else\n                        exe \":bo cope\"\n                    endif\n                endif\n            else\n                echohl WarningMsg | echo \"\"Exe_Name\"is up to date\"\n            endif\n        endif\n        setlocal makeprg=make\n    elseif expand(\"%:e\") == \"java\"\n        return\n    endif\nendfunc\n\nfunc! Run()\n    let s:ShowWarning = 0\n    call Link()\n    let s:ShowWarning = 1\n    if s:Sou_Error || s:LastShellReturn_C != 0 || s:LastShellReturn_L != 0\n        return\n    endif\n    let Sou = expand(\"%:p\")\n    if expand(\"%:e\") == \"c\" || expand(\"%:e\") == \"cpp\" || expand(\"%:e\") == \"cxx\"\n        let Obj = expand(\"%:p:r\").s:Obj_Extension\n        if g:iswindows\n            let Exe = expand(\"%:p:r\").s:Exe_Extension\n        else\n            let Exe = expand(\"%:p:r\")\n        endif\n        if executable(Exe) && getftime(Exe) >= getftime(Obj) && getftime(Obj) >= getftime(Sou)\n            redraw!\n            echohl WarningMsg | echo \" running...\"\n            if g:iswindows\n                exe \":!%<.exe\"\n            else\n                if g:isGUI\n                    exe \":!gnome-terminal -x bash -c './%<; echo; echo 请按 Enter 键继续; read'\"\n                else\n                    exe \":!clear; ./%<\"\n                endif\n            endif\n            redraw!\n            echohl WarningMsg | echo \" running finish\"\n        endif\n    elseif expand(\"%:e\") == \"java\"\n        let class = expand(\"%:p:r\").s:Class_Extension\n        if getftime(class) >= getftime(Sou)\n            redraw!\n            echohl WarningMsg | echo \" running...\"\n            if g:iswindows\n                exe \":!java %<\"\n            else\n                if g:isGUI\n                    exe \":!gnome-terminal -x bash -c 'java %<; echo; echo 请按 Enter 键继续; read'\"\n                else\n                    exe \":!clear; java %<\"\n                endif\n            endif\n            redraw!\n            echohl WarningMsg | echo \" running finish\"\n        endif\n    endif\nendfunc\n\n\n\" -----------------------------------------------------------------------------\n\"  < 其它配置 >\n\" -----------------------------------------------------------------------------\nset writebackup                             \"保存文件前建立备份，保存成功后删除该备份\nset nobackup                                \"设置无备份文件\n\" set noswapfile                              \"设置无临时文件\n\" set vb t_vb=                                \"关闭提示音\n\n\n\" =============================================================================\n\"                          << 以下为常用插件配置 >>\n\" =============================================================================\n\n\" -----------------------------------------------------------------------------\n\"  < a.vim 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 用于切换C/C++头文件\n\" :A     ---切换头文件并独占整个窗口\n\" :AV    ---切换头文件并垂直分割窗口\n\" :AS    ---切换头文件并水平分割窗口\n\n\" -----------------------------------------------------------------------------\n\"  < BufExplorer 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 快速轻松的在缓存中切换（相当于另一种多个文件间的切换方式）\n\" <Leader>be 在当前窗口显示缓存列表并打开选定文件\n\" <Leader>bs 水平分割窗口显示缓存列表，并在缓存列表窗口中打开选定文件\n\" <Leader>bv 垂直分割窗口显示缓存列表，并在缓存列表窗口中打开选定文件\n\n\" -----------------------------------------------------------------------------\n\"  < ccvext.vim 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 用于对指定文件自动生成tags与cscope文件并连接\n\" 如果是Windows系统, 则生成的文件在源文件所在盘符根目录的.symbs目录下(如: X:\\.symbs\\)\n\" 如果是Linux系统, 则生成的文件在~/.symbs/目录下\n\" 具体用法可参考www.vim.org中此插件的说明\n\" <Leader>sy 自动生成tags与cscope文件并连接\n\" <Leader>sc 连接已存在的tags与cscope文件\n\n\" -----------------------------------------------------------------------------\n\"  < cSyntaxAfter 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 高亮括号与运算符等\n\" au! BufRead,BufNewFile,BufEnter *.{c,cpp,h,java,javascript} call CSyntaxAfter()\n\n\" -----------------------------------------------------------------------------\n\"  < indentLine 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 用于显示对齐线，与 indent_guides 在显示方式上不同，根据自己喜好选择了\n\" 在终端上会有屏幕刷新的问题，这个问题能解决有更好了\n\" 开启/关闭对齐线\nnmap <leader>il :IndentLinesToggle<CR>\n\n\" 设置Gvim的对齐线样式\nif g:isGUI\n    let g:indentLine_char = \"┊\"\n    let g:indentLine_first_char = \"┊\"\nendif\n\n\" 设置终端对齐线颜色，如果不喜欢可以将其注释掉采用默认颜色\nlet g:indentLine_color_term = 239\n\n\" 设置 GUI 对齐线颜色，如果不喜欢可以将其注释掉采用默认颜色\n\" let g:indentLine_color_gui = '#A4E57E'\n\n\n\" \" -----------------------------------------------------------------------------\n\" \"  < MiniBufExplorer 插件配置 >\n\" \" -----------------------------------------------------------------------------\n\" \" 快速浏览和操作Buffer\n\" \" 主要用于同时打开多个文件并相与切换\n\n\" \" let g:miniBufExplMapWindowNavArrows = 1     \"用Ctrl加方向键切换到上下左右的窗口中去\n\" let g:miniBufExplMapWindowNavVim = 1        \"用<C-k,j,h,l>切换到上下左右的窗口中去\n\" let g:miniBufExplMapCTabSwitchBufs = 1      \"功能增强（不过好像只有在Windows中才有用）\n\" \"                                            <C-Tab> 向前循环切换到每个buffer上,并在但前窗口打开\n\" \"                                            <C-S-Tab> 向后循环切换到每个buffer上,并在当前窗口打开\n\n\" 在不使用 MiniBufExplorer 插件时也可用<C-k,j,h,l>切换到上下左右的窗口中去\nnoremap <c-k> <c-w>k\nnoremap <c-j> <c-w>j\nnoremap <c-h> <c-w>h\nnoremap <c-l> <c-w>l\n\n\" -----------------------------------------------------------------------------\n\"  < neocomplcache 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 关键字补全、文件路径补全、tag补全等等，各种，非常好用，速度超快。\nlet g:neocomplcache_enable_at_startup = 1     \"vim 启动时启用插件\n\" let g:neocomplcache_disable_auto_complete = 1 \"不自动弹出补全列表\n\" 在弹出补全列表后用 <c-p> 或 <c-n> 进行上下选择效果比较好\n\n\" -----------------------------------------------------------------------------\n\"  < nerdcommenter 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 我主要用于C/C++代码注释(其它的也行)\n\" 以下为插件默认快捷键，其中的说明是以C/C++为例的，其它语言类似\n\" <Leader>ci 以每行一个 /* */ 注释选中行(选中区域所在行)，再输入则取消注释\n\" <Leader>cm 以一个 /* */ 注释选中行(选中区域所在行)，再输入则称重复注释\n\" <Leader>cc 以每行一个 /* */ 注释选中行或区域，再输入则称重复注释\n\" <Leader>cu 取消选中区域(行)的注释，选中区域(行)内至少有一个 /* */\n\" <Leader>ca 在/*...*/与//这两种注释方式中切换（其它语言可能不一样了）\n\" <Leader>cA 行尾注释\nlet NERDSpaceDelims = 1                     \"在左注释符之后，右注释符之前留有空格\n\n\" -----------------------------------------------------------------------------\n\"  < nerdtree 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 有目录村结构的文件浏览插件\n\n\" 常规模式下输入 F2 调用插件\nnmap <F2> :NERDTreeToggle<CR>\n\n\" -----------------------------------------------------------------------------\n\"  < omnicppcomplete 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 用于C/C++代码补全，这种补全主要针对命名空间、类、结构、共同体等进行补全，详细\n\" 说明可以参考帮助或网络教程等\n\" 使用前先执行如下 ctags 命令（本配置中可以直接使用 ccvext 插件来执行以下命令）\n\" ctags -R --c++-kinds=+p --fields=+iaS --extra=+q\n\" 我使用上面的参数生成标签后，对函数使用跳转时会出现多个选择\n\" 所以我就将--c++-kinds=+p参数给去掉了，如果大侠有什么其它解决方法希望不要保留呀\nset completeopt=menu                        \"关闭预览窗口\n\n\" 函数名全局搜索 F3\nnmap <F3> <ESC>:CtrlSF <c-r><c-w><CR> \nnmap <C-F3> <ESC>:CtrlSFOpen<CR>\n\n\" -----------------------------------------------------------------------------\n\"  < SrcExpl 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 增强源代码浏览，其功能就像Windows中的\"Source Insight\"\nnmap <F4> :SrcExplToggle<CR>                \"打开/闭浏览窗口\n\" // Set the height of Source Explorer window\nlet g:SrcExpl_winHeight = 8\n\n\" // Set 100 ms for refreshing the Source Explorer\nlet g:SrcExpl_refreshTime = 100\n\" // In order to Avoid conflicts, the Source Explorer should know what plugins\n\" // are using buffers. And you need add their bufname into the list below\n\" // according to the command \":buffers!\"\nlet g:SrcExpl_pluginList = [\n        \\ \"__Tag_List__\",\n        \\ \"_NERD_tree_\",\n        \\ \"Source_Explorer\"\n    \\ ]\n\" // Do not let the Source Explorer update the tags file when opening          \"\nlet g:SrcExpl_isUpdateTags = 0\n\" // Enable/Disable the local definition searching, and note that this is not  \"\n\" // guaranteed to work, the Source Explorer doesn't check the syntax for now. \"\n\" // It only searches for a match with the keyword according to command 'gd'   \"\nlet g:SrcExpl_searchLocalDef = 1\n\n\" 启用 // 注视风格\nlet c_cpp_comments = 0\n\n\n\" -----------------------------------------------------------------------------\n\"  < Tagbar 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 相对 TagList 能更好的支持面向对象\n\n\" 常规模式下输入 tb 调用插件，如果有打开 TagList 窗口则先将其关闭\nnmap tb :TlistClose<CR>:TagbarToggle<CR>\n\nlet g:tagbar_width=30                       \"设置窗口宽度\n\" let g:tagbar_left=1                         \"在左侧窗口中显示\n\n\" -----------------------------------------------------------------------------\n\"  < TagList 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 高效地浏览源码, 其功能就像vc中的workpace\n\" 那里面列出了当前文件中的所有宏,全局变量, 函数名等\n\n\" 常规模式下输入 tl 调用插件，如果有打开 Tagbar 窗口则先将其关闭\nnmap tl :TagbarClose<CR>:Tlist<CR>\n\nlet Tlist_Show_One_File=1                   \"只显示当前文件的tags\n\" let Tlist_Enable_Fold_Column=0              \"使taglist插件不显示左边的折叠行\nlet Tlist_Exit_OnlyWindow=1                \"如果Taglist窗口是最后一个窗口则退出Vim\nlet Tlist_File_Fold_Auto_Close=1            \"自动折叠\nlet Tlist_WinWidth=30                       \"设置窗口宽度\nlet Tlist_Use_Right_Window=1                \"在右侧窗口中显示\n\n\" -----------------------------------------------------------------------------\n\"  < txtbrowser 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 用于文本文件生成标签与与语法高亮（调用TagList插件生成标签，如果可以）\nau BufRead,BufNewFile *.txt setlocal ft=txt\n\n\" \\ r 快速执行GO\n\" au FileType go nmap <leader>r <Plug>(go-run)\n\" -----------------------------------------------------------------------------\n\" <rjohnsondev/vim-compiler-go>\n\" 语法检查  Go 路径\n\" -----------------------------------------------------------------------------\nautocmd FileType go compiler golang\nlet g:golang_goroot = \"/usr/local/go\"\n\n\" compile coffee on write\nlet coffee_compile_vert = 1\nau BufWritePost *.coffee silent execute 'CoffeeMake! -o'.expand('<afile>:p:h').'./'\n\" auto compile on save\n\n\" =============================================================================\n\"                          << 以下为常用工具配置 >>\n\" =============================================================================\n\n\" -----------------------------------------------------------------------------\n\"  < cscope 工具配置 >\n\" -----------------------------------------------------------------------------\n\" 用Cscope自己的话说 - \"你可以把它当做是超过频的ctags\"\nif has(\"cscope\")\n    \"设定可以使用 quickfix 窗口来查看 cscope 结果\n    set cscopequickfix=s-,c-,d-,i-,t-,e-\n    \"使支持用 Ctrl+]  和 Ctrl+t 快捷键在代码间跳转\n    set cscopetag\n    \"如果你想反向搜索顺序设置为1\n    set csto=0\n    \"在当前目录中添加任何数据库\n    if filereadable(\"cscope.out\")\n        cs add cscope.out\n    \"否则添加数据库环境中所指出的\n    elseif $CSCOPE_DB != \"\"\n        cs add $CSCOPE_DB\n    endif\n    set cscopeverbose\n    \"快捷键设置\n    nmap <C-\\>s :cs find s <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-\\>g :cs find g <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-\\>c :cs find c <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-\\>t :cs find t <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-\\>e :cs find e <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-\\>f :cs find f <C-R>=expand(\"<cfile>\")<CR><CR>\n    nmap <C-\\>i :cs find i ^<C-R>=expand(\"<cfile>\")<CR>$<CR>\n    nmap <C-\\>d :cs find d <C-R>=expand(\"<cword>\")<CR><CR>\nendif\n\n\" -----------------------------------------------------------------------------\n\"  < ctags 工具配置 >\n\" -----------------------------------------------------------------------------\n\" 对浏览代码非常的方便,可以在函数,变量之间跳转等\nset tags=./tags;                            \"向上级目录递归查找tags文件（好像只有在Windows下才有用）\n\n\" -----------------------------------------------------------------------------\n\"  < gvimfullscreen 工具配置 > 请确保已安装了工具\n\" -----------------------------------------------------------------------------\n\" 用于 Windows Gvim 全屏窗口，可用 F11 切换\n\" 全屏后再隐藏菜单栏、工具栏、滚动条效果更好\nif (g:iswindows && g:isGUI)\n    nmap <F11> <Esc>:call libcallnr(\"gvimfullscreen.dll\", \"ToggleFullScreen\", 0)<CR>\nendif\n\n\" -----------------------------------------------------------------------------\n\"  < vimtweak 工具配置 > 请确保以已装了工具\n\" -----------------------------------------------------------------------------\n\" 这里只用于窗口透明与置顶\n\" 常规模式下 Ctrl + Up（上方向键） 增加不透明度，Ctrl + Down（下方向键） 减少不透明度，<Leader>t 窗口置顶与否切换\nif (g:iswindows && g:isGUI)\n    let g:Current_Alpha = 255\n    let g:Top_Most = 0\n    func! Alpha_add()\n        let g:Current_Alpha = g:Current_Alpha + 10\n        if g:Current_Alpha > 255\n            let g:Current_Alpha = 255\n        endif\n        call libcallnr(\"vimtweak.dll\",\"SetAlpha\",g:Current_Alpha)\n    endfunc\n    func! Alpha_sub()\n        let g:Current_Alpha = g:Current_Alpha - 10\n        if g:Current_Alpha < 155\n            let g:Current_Alpha = 155\n        endif\n        call libcallnr(\"vimtweak.dll\",\"SetAlpha\",g:Current_Alpha)\n    endfunc\n    func! Top_window()\n        if  g:Top_Most == 0\n            call libcallnr(\"vimtweak.dll\",\"EnableTopMost\",1)\n            let g:Top_Most = 1\n        else\n            call libcallnr(\"vimtweak.dll\",\"EnableTopMost\",0)\n            let g:Top_Most = 0\n        endif\n    endfunc\n\n    \"快捷键设置\n    nmap <c-up> :call Alpha_add()<CR>\n    nmap <c-down> :call Alpha_sub()<CR>\n    nmap <leader>t :call Top_window()<CR>\nendif\n\n\" =============================================================================\n\"                          << 以下为常用自动命令配置 >>\n\" =============================================================================\n\n\" 自动切换目录为当前编辑文件所在目录\nau BufRead,BufNewFile,BufEnter * cd %:p:h\n\n\" =============================================================================\n\"                     << windows 下解决 Quickfix 乱码问题 >>\n\" =============================================================================\n\" windows 默认编码为 cp936，而 Gvim(Vim) 内部编码为 utf-8，所以常常输出为乱码\n\" 以下代码可以将编码为 cp936 的输出信息转换为 utf-8 编码，以解决输出乱码问题\n\" 但好像只对输出信息全部为中文才有满意的效果，如果输出信息是中英混合的，那可能\n\" 不成功，会造成其中一种语言乱码，输出信息全部为英文的好像不会乱码\n\" 如果输出信息为乱码的可以试一下下面的代码，如果不行就还是给它注释掉\n\n\" if g:iswindows\n\"     function QfMakeConv()\n\"         let qflist = getqflist()\n\"         for i in qflist\n\"            let i.text = iconv(i.text, \"cp936\", \"utf-8\")\n\"         endfor\n\"         call setqflist(qflist)\n\"      endfunction\n\"      au QuickfixCmdPost make call QfMakeConv()\n\" endif\n\n\" =============================================================================\n\"                          << 其它 >>\n\" =============================================================================\n\" 注：上面配置中的\"<Leader>\"在本软件中设置为\"\\\"键（引号里的反斜杠），如<Leader>t\n\" 指在常规模式下按\"\\\"键加\"t\"键，这里不是同时按，而是先按\"\\\"键后按\"t\"键，间隔在一\n\" 秒内，而<Leader>cs是先按\"\\\"键再按\"c\"又再按\"s\"键；如要修改\"<leader>\"键，可以把\n\" 下面的设置取消注释，并修改双引号中的键为你想要的，如修改为逗号键。\n\n\" let mapleader = \",\"\n\n\" \" =============================================================================\n\" \"                          << 五笔拼音输入法 >>\n\" \"                           调用 C + S + 空格\n\" \" =============================================================================\nlet g:ywvim_ims=[\n             \\['wb', '五笔', 'wubi.ywvim'],\n             \\['py', '拼音', 'pinyin.ywvim'],\n             \\]\n\nlet g:ywvim_py = { 'helpim':'py', 'gb':0   }\n\nlet g:ywvim_zhpunc = 1\nlet g:ywvim_listmax = 5\nlet g:ywvim_esc_autoff = 0\nlet g:ywvim_autoinput = 0\nlet g:ywvim_circlecandidates = 1\nlet g:ywvim_helpim_on = 0\nlet g:ywvim_matchexact = 0\nlet g:ywvim_chinesecode = 1\nlet g:ywvim_gb = 0\nlet g:ywvim_preconv = 'g2b'\nlet g:ywvim_conv = ''\nlet g:ywvim_lockb = 1\n```\n\n>保存配置文件于 ~/.vimrc ，进入 vim 执行 **:PluginInstall**，进行插件安装\n\n## 部分插件说明\n\n### Bundle\n\nWindows 使用 Bundle 安装插件之前还需要先安装 Git for Windows 然后将 git 目录加入环境变量 ，如 C:\\Program Files (x86)\\Git\\bin 运行 vim 执行 :PluginInstall , 等待插件全部安装完成。\n\n### ctags 自动提示\n\n>Ctags 需要先下载并编译 http://ctags.sf.net , Windows版本下载 zip 文件 并加入环境变量 C:\\Program Files (x86)\\Vim\\ctags58 \n>Linux 下载源码包编译安装 或使用 apt-get 安装 \n\n```bash\nsudo apt-get install ctags\n```\n\nMac 下使用 brew 安装\n```bash\nbrew install ctags\n```\n\n>由于 mac 自带一个ctags，而taglist要求的是exuberant crags，所以我们给我们安装的 tags 一个别名\n\n```bash\nvim ~/.zsh_aliases \n```\n\n>如果使用的是默认的 bash 那应该修改 ~/.bash_aliases 或者 ~/.profile\n\n添加行\n```bash\nalias ctags2=\"/usr/local/Cellar/ctags/5.8_1/bin/ctags\"\n```\n>使用 ctags 命令生成 ctags 文件\n\n```bash\nctags -R\n```\n\n>生成完 ctags 文件于本目录中 Vim 中使用\n\nC + ] 命令跳转至函数定义处\n\nC + t 返回跳转前函数\n\n### Align 自动对齐\n\n```bash\n\\t=  : align assignments (don't count logic, like == or !=) \n\\t,  : align on commas \n\\t|  : align on vertical bars (|) \n\\tsp : align on whitespace \n\\tt  : align LaTeX tabular tables\n```\n\n### ACK 快速查询函数定义\n\n```bash\nsudo apt-get install ack\n```\n\n>默认配置中使用快捷键 F3 触发查看\n\n### NERDTree 文件目录树查看\n\n>默认配置中使用快捷键 F2 切换打开/关闭\n>NERDTree提供了丰富的键盘操作方式来浏览和打开文件，一些常用的快捷键：\n\n```bash\n通过h j k l移动光标定位\no 打开关闭文件或者目录，如果是文件的话，光标出现在打开的文件中\ngo 效果同上，不过光标保持在文件目录里，类似预览文件内容的功能\ni和s可以水平分割或纵向分割窗口打开文件，前面加g类似go的功能\nt 在标签页中打开\nT 在后台标签页中打开\np 到上层目录\nP 到根目录\nK 到同目录第一个节点\nJ 到同目录最后一个节点\nm 显示文件系统菜单（添加、删除、移动操作）\n? 帮助\nq 关闭\n\" <Leader>be 在当前窗口显示缓存列表并打开选定文件\n\" <Leader>bs 水平分割窗口显示缓存列表，并在缓存列表窗口中打开选定文件\n\" <Leader>bv 垂直分割窗口显示缓存列表，并在缓存列表窗口中打开选定文件\n\n<Leader> 指 \\ 反斜杠\n想了解更多操作方式，可以通过? 查看详细的帮助信息。\n```\n\n### VIM 的其他命令\n\n* 转到您的目录 cd xx\n* 首次启动时执行 ctags -R 自动生成 tag\n* 启动VIM  vim\n* F2 打开左侧文件树，r 刷新当前目录 R 刷新全部目录\n* tb 打开右侧函数列表 （或 tl）\n* F3 打开变量/方法说明\n* C + ] 跳转至方法/变量 定义处 同上一个方法 只是这个会跳转, 如果只是想瞥一下方法的功能使用 F4 即可, F3 全项目搜索该函数定义\n* C + t 上一个方法跳过去后使用这个跳回来\n* C + p 全项目搜索文件名称\n* C + h / j /k / l 可以在多窗口中移动 亦可用于 主窗口中跳至文件树列表或跳至 函数列表等\n在文件树窗口中\n* o 打开文件在主窗口 / 折叠或展开目录\n* t 在新 tab 中打开\n* T 在新 tab 中打开不激活（即后台）\n* i 水平分隔主窗口并打开该文件\n* s 纵向分隔主窗口并打开该文件\n* 打开了多个文件后 \\be 查看在缓存中的文件 （有点像 tab 如果没有关闭的都可以切换）\n\\cc 注释掉选择行 \\cu 反注释 \\cc 的行\n* 如果开了多个 tab （即使用 t / T 打开了文件） gt 切换到下一个 tab  gT 切换到上一个 tab\n* 自动提示 使用 C + j / C + k 选择列表中的内容\n* Html 文件中 emmet 使用 c + y 后 , 逗号 来展开\n* \\t= 格式化选中行\n* Esc 离得比较远的可以将 Caps Lock 键换成 Esc 在 插入 (insert) 模式下 还可以使用 C + h / j / k / l 来移动 可参考 [互换-Ctrl-Caps-Lock-按键](/2016/05/05/互换-Ctrl-Caps-Lock-按键/)\n* 输入中文 C + S + SPACE 默认五笔 z 键临时拼音，用拼音的直接删除配置中的五笔即可\n* 编译相关 F9 保存、编译、打开","source":"_posts/VIM-配置.md","raw":"---\ntitle: VIM 配置\ndate: 2015-12-11 21:31:49\ntags:\n- dev\n- vim \n---\n\n>VIM 7.4 以上版本，大部分配置同时适用于 Linux / Mac OS 终端 以及 gVim\n\n\n## 安装插件管理器 \n\n```bash\ngit clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle\n```\n\n## 完整配置\n>编辑本用户的 vim 配置文件\n>Linux / Mac OS 一般创建文件 ~/.vimrc\n>Windows 可在用户名文件夹下创建 .vimrc 文件 (C:\\Users\\USERNAME)\n\n<!-- more -->\n```bash\n\" =============================================================================\n\"        << 判断操作系统是 Windows 还是 Linux 和判断是终端还是 Gvim >>\n\" =============================================================================\n\n\" -----------------------------------------------------------------------------\n\"  < 判断操作系统是否是 Windows 还是 Linux >\n\" -----------------------------------------------------------------------------\nlet g:iswindows = 0\nlet g:islinux = 0\nif(has(\"win32\") || has(\"win64\") || has(\"win95\") || has(\"win16\"))\n    let g:iswindows = 1\nelse\n    let g:islinux = 1\nendif\n\n\" -----------------------------------------------------------------------------\n\"  < 判断是终端还是 Gvim >\n\" -----------------------------------------------------------------------------\nif has(\"gui_running\")\n    let g:isGUI = 1\nelse\n    let g:isGUI = 0\nendif\n\n\n\" =============================================================================\n\"                          << 以下为软件默认配置 >>\n\" =============================================================================\n\n\" -----------------------------------------------------------------------------\n\"  < Windows Gvim 默认配置> 做了一点修改\n\" -----------------------------------------------------------------------------\nif (g:iswindows && g:isGUI)\n    source $VIMRUNTIME/vimrc_example.vim\n    source $VIMRUNTIME/mswin.vim\n    behave mswin\n    set diffexpr=MyDiff()\n\n    function MyDiff()\n        let opt = '-a --binary '\n        if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif\n        if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif\n        let arg1 = v:fname_in\n        if arg1 =~ ' ' | let arg1 = '\"' . arg1 . '\"' | endif\n        let arg2 = v:fname_new\n        if arg2 =~ ' ' | let arg2 = '\"' . arg2 . '\"' | endif\n        let arg3 = v:fname_out\n        if arg3 =~ ' ' | let arg3 = '\"' . arg3 . '\"' | endif\n        let eq = ''\n        if $VIMRUNTIME =~ ' '\n            if &sh =~ '\\<cmd'\n                let cmd = '\"\"' . $VIMRUNTIME . '\\diff\"'\n                let eq = '\"'\n            else\n                let cmd = substitute($VIMRUNTIME, ' ', '\" ', '') . '\\diff\"'\n            endif\n        else\n            let cmd = $VIMRUNTIME . '\\diff'\n        endif\n        silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3 . eq\n    endfunction\nendif\n\n\" -----------------------------------------------------------------------------\n\"  < Linux Gvim/Vim 默认配置> 做了一点修改\n\" -----------------------------------------------------------------------------\nif g:islinux\n    set hlsearch        \"高亮搜索\n    set incsearch       \"在输入要搜索的文字时，实时匹配\n\n    \" Uncomment the following to have Vim jump to the last position when\n    \" reopening a file\n    if has(\"autocmd\")\n        au BufReadPost * if line(\"'\\\"\") > 1 && line(\"'\\\"\") <= line(\"$\") | exe \"normal! g'\\\"\" | endif\n    endif\n\n    if g:isGUI\n        \" Source a global configuration file if available\n        if filereadable(\"/etc/vim/gvimrc.local\")\n            source /etc/vim/gvimrc.local\n        endif\n    else\n        \" This line should not be removed as it ensures that various options are\n        \" properly set to work with the Vim-related packages available in Debian.\n        runtime! debian.vim\n\n        \" Vim5 and later versions support syntax highlighting. Uncommenting the next\n        \" line enables syntax highlighting by default.\n        if has(\"syntax\")\n            syntax on\n        endif\n\n        \" set mouse=a                    \" 在任何模式下启用鼠标\n        set t_Co=256                   \" 在终端启用256色\n        set backspace=2                \" 设置退格键可用\n\n        \" Source a global configuration file if available\n        if filereadable(\"/etc/vim/vimrc.local\")\n            source /etc/vim/vimrc.local\n        endif\n    endif\nendif\n\n\n\" =============================================================================\n\"                          << 以下为用户自定义配置 >>\n\" =============================================================================\n\n\" -----------------------------------------------------------------------------\n\"  < Vundle 插件管理工具配置 >\n\" -----------------------------------------------------------------------------\n\" 用于更方便的管理vim插件，具体用法参考 :h vundle 帮助\n\" Vundle工具安装方法为在终端输入如下命令\n\" git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle\n\" 如果想在 windows 安装就必需先安装 \"git for window\"，可查阅网上资料\n\nset nocompatible                                      \"禁用 Vi 兼容模式\nfiletype off                                          \"禁用文件类型侦测\n\nif g:islinux\n    set rtp+=~/.vim/bundle/vundle/\n    call vundle#rc()\nelse\n    set rtp+=$VIM/vimfiles/bundle/vundle/\n    call vundle#rc('$VIM/vimfiles/bundle/')\nendif\n\n\" 使用Vundle来管理插件，这个必须要有。\nBundle 'gmarik/vundle'\n\n\" 以下为要安装或更新的插件，不同仓库都有（具体书写规范请参考帮助）\n\" -----------------------------------------------------------------------------\n\"  < a.vim 插件配置 >\n\" -----------------------------------------------------------------------------\n\" :AS    ---切换头文件并水平分割窗口\n\" Bundle 'a.vim'\n\" -----------------------------------------------------------------------------\n\"  < Align 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 一个对齐的插件，用来——排版与对齐代码，功能强大，不过用到的机会不多\nBundle 'Align'\n\" -----------------------------------------------------------------------------\n\"  < tab 键自动补全 >\n\" -----------------------------------------------------------------------------\n\" Bundle 'SuperTab'\n\" -----------------------------------------------------------------------------\n\"  < auto-pairs 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 用于括号与引号自动补全，不过会与函数原型提示插件echofunc冲突\nBundle 'jiangmiao/auto-pairs'\n\" -----------------------------------------------------------------------------\n\"  < BufExplorer 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 快速轻松的在缓存中切换（相当于另一种多个文件间的切换方式）\nBundle 'bufexplorer.zip'\n\" -----------------------------------------------------------------------------\n\"  < ccvext.vim 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 用于对指定文件自动生成tags与cscope文件并连接\n\" Bundle 'ccvext.vim'\n\" -----------------------------------------------------------------------------\n\"  < cSyntaxAfter 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 高亮括号与运算符等\nBundle 'cSyntaxAfter'\n\" -----------------------------------------------------------------------------\n\"  < ctrlp.vim 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 一个全路径模糊文件，缓冲区，最近最多使用，... 检索插件；详细帮助见 :h ctrlp\n\" 常规模式下输入：Ctrl + p 调用插件\nBundle 'ctrlpvim/ctrlp.vim'\n\" -----------------------------------------------------------------------------\n\"  < emmet-vim（前身为Zen coding） 插件配置 >\n\" -----------------------------------------------------------------------------\n\" HTML/CSS代码快速编写神器，详细帮助见 :h emmet.txt\nBundle 'mattn/emmet-vim'\n\" -----------------------------------------------------------------------------\n\"  < indentLine 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 用于显示对齐线，与 indent_guides 在显示方式上不同，根据自己喜好选择了\n\" 在终端上会有屏幕刷新的问题，这个问题能解决有更好了\nBundle 'Yggdroot/indentLine'\n\" -----------------------------------------------------------------------------\n\"  < vim-javacompleteex（也就是 javacomplete 增强版）插件配置 >\n\" -----------------------------------------------------------------------------\n\" java 补全插件\n\" Bundle 'vim-javacompleteex'\n\" -----------------------------------------------------------------------------\n\"  < Mark--Karkat（也就是 Mark） 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 给不同的单词高亮，表明不同的变量时很有用，详细帮助见 :h mark.txt\nBundle 'Mark--Karkat'\n\" -----------------------------------------------------------------------------\n\"  < neocomplcache 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 关键字补全、文件路径补全、tag补全等等，各种，非常好用，速度超快。\nBundle 'Shougo/neocomplcache.vim'\n\" -----------------------------------------------------------------------------\n\"  < nerdcommenter 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 我主要用于C/C++代码注释(其它的也行)\n\" 以下为插件默认快捷键，其中的说明是以C/C++为例的，其它语言类似\nBundle 'scrooloose/nerdcommenter'\n\" -----------------------------------------------------------------------------\n\"  < nerdtree 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 有目录村结构的文件浏览插件\n\n\" 常规模式下输入 F2 调用插件\nBundle 'scrooloose/nerdtree'\n\" -----------------------------------------------------------------------------\n\"  < omnicppcomplete 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 用于C/C++代码补全，这种补全主要针对命名空间、类、结构、共同体等进行补全，详细\n\" 说明可以参考帮助或网络教程等\n\" 使用前先执行如下 ctags 命令（本配置中可以直接使用 ccvext 插件来执行以下命令）\n\" ctags -R --c++-kinds=+p --fields=+iaS --extra=+q\n\" 我使用上面的参数生成标签后，对函数使用跳转时会出现多个选择\n\" Bundle 'OmniCppComplete'\n\" -----------------------------------------------------------------------------\n\"  < powerline 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 状态栏插件，更好的状态栏效果\nBundle 'Lokaltog/vim-powerline'\n\" -----------------------------------------------------------------------------\n\"  < repeat 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 主要用\".\"命令来重复上次插件使用的命令\nBundle 'repeat.vim'\n\" -----------------------------------------------------------------------------\n\"  < snipMate 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 用于各种代码补全，这种补全是一种对代码中的词与代码块的缩写补全，详细用法可以参\n\" 考使用说明或网络教程等。不过有时候也会与 supertab 插件在补全时产生冲突，如果大\n\" 侠有什么其它解决方法希望不要保留呀\nBundle 'msanders/snipmate.vim'\n\" -----------------------------------------------------------------------------\n\"  < SrcExpl 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 增强源代码浏览，其功能就像Windows中的\"Source Insight\"\nBundle 'wesleyche/SrcExpl'\n\" -----------------------------------------------------------------------------\n\"  < std_c 插件配置 >\n\" -----------------------------------------------------------------------------\n\" Bundle 'std_c.zip'\n\" -----------------------------------------------------------------------------\n\"  < surround 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 快速给单词/句子两边增加符号（包括html标签），缺点是不能用\".\"来重复命令\n\" 不过 repeat 插件可以解决这个问题，详细帮助见 :h surround.txt\nBundle 'tpope/vim-surround'\n\" -----------------------------------------------------------------------------\n\"  < Syntastic 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 用于保存文件时查检语法\nBundle 'scrooloose/syntastic'\n\" -----------------------------------------------------------------------------\n\"  < Tagbar 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 相对 TagList 能更好的支持面向对象\n\n\" 常规模式下输入 tb 调用插件，如果有打开 TagList 窗口则先将其关闭\nBundle 'majutsushi/tagbar'\n\" -----------------------------------------------------------------------------\n\"  < TagList 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 高效地浏览源码, 其功能就像vc中的workpace\n\" 那里面列出了当前文件中的所有宏,全局变量, 函数名等\n\" 常规模式下输入 tl 调用插件，如果有打开 Tagbar 窗口则先将其关闭\nBundle 'taglist.vim'\n\" -----------------------------------------------------------------------------\n\"  < txtbrowser 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 用于文本文件生成标签与与语法高亮（调用TagList插件生成标签，如果可以）\nBundle 'TxtBrowser'\n\" -----------------------------------------------------------------------------\n\"  < ZoomWin 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 用于分割窗口的最大化与还原\n\" 常规模式下按快捷键 <c-w>o 在最大化与还原间切换\nBundle 'ZoomWin'\n\n\" Go 语法高亮 https://github.com/fatih/vim-go \nBundle 'fatih/vim-go'\n\n\" Go 语法检查\nBundle 'rjohnsondev/vim-compiler-go'\n\n\" PHP DOC MAC ONLY\nBundle 'rizzatti/dash.vim'\n\n\" 全文搜索（项目） 函数名\n\" 需要先安装 ack \n\" yum install ack\nBundle 'mileszs/ack.vim'\nBundle 'dyng/ctrlsf.vim'\n\n\" 全局搜索 leader - t 开启\nBundle 'wincent/command-t'\n\n\" coffee-script compile\nBundle 'kchmck/vim-coffee-script'\n\n\" -----------------------------------------------------------------------------\n\"  < 编码配置 >\n\" -----------------------------------------------------------------------------\n\" 注：使用utf-8格式后，软件与程序源码、文件路径不能有中文，否则报错\nset encoding=utf-8                                    \"设置gvim内部编码，默认不更改\nset fileencoding=utf-8                                \"设置当前文件编码，可以更改，如：gbk（同cp936）\nset fileencodings=ucs-bom,utf-8,gbk,cp936,latin-1     \"设置支持打开的文件的编码\n\n\" 文件格式，默认 ffs=dos,unix\nset fileformat=unix                                   \"设置新（当前）文件的<EOL>格式，可以更改，如：dos（windows系统常用）\nset fileformats=unix,dos,mac                          \"给出文件的<EOL>格式类型\n\nif (g:iswindows && g:isGUI)\n    \"解决菜单乱码\n    source $VIMRUNTIME/delmenu.vim\n    source $VIMRUNTIME/menu.vim\n\n    \"解决consle输出乱码\n    language messages zh_CN.utf-8\nendif\n\n\" -----------------------------------------------------------------------------\n\"  < 编写文件时的配置 >\n\" -----------------------------------------------------------------------------\nfiletype on                                           \"启用文件类型侦测\nfiletype plugin on                                    \"针对不同的文件类型加载对应的插件\nfiletype plugin indent on                             \"启用缩进\nset smartindent                                       \"启用智能对齐方式\nset expandtab                                         \"将Tab键转换为空格\nset tabstop=4                                         \"设置Tab键的宽度，可以更改，如：宽度为2\nset shiftwidth=4                                      \"换行时自动缩进宽度，可更改（宽度同tabstop）\nset smarttab                                          \"指定按一次backspace就删除shiftwidth宽度\n\" set foldenable                                        \"启用折叠\n\" set foldmethod=indent                                 \"indent 折叠方式\n\" set foldmethod=marker                                \"marker 折叠方式\n\n\" 常规模式下用空格键来开关光标行所在折叠（注：zR 展开所有折叠，zM 关闭所有折叠）\nnnoremap <space> @=((foldclosed(line('.')) < 0) ? 'zc' : 'zo')<CR>\n\n\" 当文件在外部被修改，自动更新该文件\nset autoread\n\n\" 常规模式下输入 cS 清除行尾空格\nnmap cS :%s/\\s\\+$//g<CR>:noh<CR>\n\n\" 常规模式下输入 cM 清除行尾 ^M 符号\nnmap cM :%s/\\r$//g<CR>:noh<CR>\n\nset ignorecase                                        \"搜索模式里忽略大小写\n\" set smartcase                                         \"如果搜索模式包含大写字符，不使用 'ignorecase' 选项，只有在输入搜索模式并且打开 'ignorecase' 选项时才会使用\n\" set noincsearch                                       \"在输入要搜索的文字时，取消实时匹配\n\n\" Ctrl + K 插入模式下光标向上移动\nimap <c-k> <Up>\n\n\" Ctrl + J 插入模式下光标向下移动\nimap <c-j> <Down>\n\n\" Ctrl + H 插入模式下光标向左移动\nimap <c-h> <Left>\n\n\" Ctrl + L 插入模式下光标向右移动\nimap <c-l> <Right>\n\n\" 启用每行超过80列的字符提示（字体变蓝并加下划线），不启用就注释掉\n\" au BufWinEnter * let w:m2=matchadd('Underlined', '\\%>' . 80 . 'v.\\+', -1)\n\n\" -----------------------------------------------------------------------------\n\"  < 界面配置 >\n\" -----------------------------------------------------------------------------\nset number                                            \"显示行号\nset laststatus=2                                      \"启用状态栏信息\nset cmdheight=2                                       \"设置命令行的高度为2，默认为1\nset cursorline                                        \"突出显示当前行\n\" set guifont=YaHei_Consolas_Hybrid:h10                 \"设置字体:字号（字体名称空格用下划线代替）\nset guifont=courier_new:h9                            \"设置字体:字号（字体名称空格用下划线代替）\n\" set nowrap                                            \"设置不自动换行\nset shortmess=atI                                     \"去掉欢迎界面\n\n\" 设置 gVim 窗口初始位置及大小\nif g:isGUI\n    set guifont=courier_new:h16                           \"设置字体:字号（字体名称空格用下划线代替）\n    \" au GUIEnter * simalt ~x                           \"窗口启动时自动最大化\n    winpos 100 10                                     \"指定窗口出现的位置，坐标原点在屏幕左上角\n    set lines=50 columns=180                          \"指定窗口大小，lines为高度，columns为宽度\nendif\n\n\" 设置代码配色方案\nif g:isGUI\n    colorscheme molokai               \"Gvim配色方案\nelse\n    colorscheme molokai               \"终端配色方案\nendif\n\n\" 显示/隐藏菜单栏、工具栏、滚动条，可用 Ctrl + F11 切换\nif g:isGUI\n    set guioptions-=m\n    set guioptions-=T\n    set guioptions-=r\n    set guioptions-=L\n    nmap <silent> <c-F11> :if &guioptions =~# 'm' <Bar>\n        \\set guioptions-=m <Bar>\n        \\set guioptions-=T <Bar>\n        \\set guioptions-=r <Bar>\n        \\set guioptions-=L <Bar>\n    \\else <Bar>\n        \\set guioptions+=m <Bar>\n        \\set guioptions+=T <Bar>\n        \\set guioptions+=r <Bar>\n        \\set guioptions+=L <Bar>\n    \\endif<CR>\nendif\n\n\" -----------------------------------------------------------------------------\n\"  < 编译、连接、运行配置 (目前只配置了C、C++、Java语言)>\n\" -----------------------------------------------------------------------------\n\" F9 一键保存、编译、连接存并运行\nnmap <F9> :call Run()<CR>\nimap <F9> <ESC>:call Run()<CR>\n\n\" Ctrl + F9 一键保存并编译\nnmap <c-F9> :call Compile()<CR>\nimap <c-F9> <ESC>:call Compile()<CR>\n\n\" Ctrl + F10 一键保存并连接\nnmap <c-F10> :call Link()<CR>\nimap <c-F10> <ESC>:call Link()<CR>\n\nlet s:LastShellReturn_C = 0\nlet s:LastShellReturn_L = 0\nlet s:ShowWarning = 1\nlet s:Obj_Extension = '.o'\nlet s:Exe_Extension = '.exe'\nlet s:Class_Extension = '.class'\nlet s:Sou_Error = 0\n\nlet s:windows_CFlags = 'gcc\\ -fexec-charset=gbk\\ -Wall\\ -g\\ -O0\\ -c\\ %\\ -o\\ %<.o'\nlet s:linux_CFlags = 'gcc\\ -Wall\\ -g\\ -O0\\ -c\\ %\\ -o\\ %<.o'\n\nlet s:windows_CPPFlags = 'g++\\ -fexec-charset=gbk\\ -Wall\\ -g\\ -O0\\ -c\\ %\\ -o\\ %<.o'\nlet s:linux_CPPFlags = 'g++\\ -Wall\\ -g\\ -O0\\ -c\\ %\\ -o\\ %<.o'\n\nlet s:JavaFlags = 'javac\\ %'\n\nfunc! Compile()\n    exe \":ccl\"\n    exe \":update\"\n    let s:Sou_Error = 0\n    let s:LastShellReturn_C = 0\n    let Sou = expand(\"%:p\")\n    let v:statusmsg = ''\n    if expand(\"%:e\") == \"c\" || expand(\"%:e\") == \"cpp\" || expand(\"%:e\") == \"cxx\"\n        let Obj = expand(\"%:p:r\").s:Obj_Extension\n        let Obj_Name = expand(\"%:p:t:r\").s:Obj_Extension\n        if !filereadable(Obj) || (filereadable(Obj) && (getftime(Obj) < getftime(Sou)))\n            redraw!\n            if expand(\"%:e\") == \"c\"\n                if g:iswindows\n                    exe \":setlocal makeprg=\".s:windows_CFlags\n                else\n                    exe \":setlocal makeprg=\".s:linux_CFlags\n                endif\n                echohl WarningMsg | echo \" compiling...\"\n                silent make\n            elseif expand(\"%:e\") == \"cpp\" || expand(\"%:e\") == \"cxx\"\n                if g:iswindows\n                    exe \":setlocal makeprg=\".s:windows_CPPFlags\n                else\n                    exe \":setlocal makeprg=\".s:linux_CPPFlags\n                endif\n                echohl WarningMsg | echo \" compiling...\"\n                silent make\n            endif\n            redraw!\n            if v:shell_error != 0\n                let s:LastShellReturn_C = v:shell_error\n            endif\n            if g:iswindows\n                if s:LastShellReturn_C != 0\n                    exe \":bo cope\"\n                    echohl WarningMsg | echo \" compilation failed\"\n                else\n                    if s:ShowWarning\n                        exe \":bo cw\"\n                    endif\n                    echohl WarningMsg | echo \" compilation successful\"\n                endif\n            else\n                if empty(v:statusmsg)\n                    echohl WarningMsg | echo \" compilation successful\"\n                else\n                    exe \":bo cope\"\n                endif\n            endif\n        else\n            echohl WarningMsg | echo \"\"Obj_Name\"is up to date\"\n        endif\n    elseif expand(\"%:e\") == \"java\"\n        let class = expand(\"%:p:r\").s:Class_Extension\n        let class_Name = expand(\"%:p:t:r\").s:Class_Extension\n        if !filereadable(class) || (filereadable(class) && (getftime(class) < getftime(Sou)))\n            redraw!\n            exe \":setlocal makeprg=\".s:JavaFlags\n            echohl WarningMsg | echo \" compiling...\"\n            silent make\n            redraw!\n            if v:shell_error != 0\n                let s:LastShellReturn_C = v:shell_error\n            endif\n            if g:iswindows\n                if s:LastShellReturn_C != 0\n                    exe \":bo cope\"\n                    echohl WarningMsg | echo \" compilation failed\"\n                else\n                    if s:ShowWarning\n                        exe \":bo cw\"\n                    endif\n                    echohl WarningMsg | echo \" compilation successful\"\n                endif\n            else\n                if empty(v:statusmsg)\n                    echohl WarningMsg | echo \" compilation successful\"\n                else\n                    exe \":bo cope\"\n                endif\n            endif\n        else\n            echohl WarningMsg | echo \"\"class_Name\"is up to date\"\n        endif\n    else\n        let s:Sou_Error = 1\n        echohl WarningMsg | echo \" please choose the correct source file\"\n    endif\n    exe \":setlocal makeprg=make\"\nendfunc\n\nfunc! Link()\n    call Compile()\n    if s:Sou_Error || s:LastShellReturn_C != 0\n        return\n    endif\n    if expand(\"%:e\") == \"c\" || expand(\"%:e\") == \"cpp\" || expand(\"%:e\") == \"cxx\"\n        let s:LastShellReturn_L = 0\n        let Sou = expand(\"%:p\")\n        let Obj = expand(\"%:p:r\").s:Obj_Extension\n        if g:iswindows\n            let Exe = expand(\"%:p:r\").s:Exe_Extension\n            let Exe_Name = expand(\"%:p:t:r\").s:Exe_Extension\n        else\n            let Exe = expand(\"%:p:r\")\n            let Exe_Name = expand(\"%:p:t:r\")\n        endif\n        let v:statusmsg = ''\n        if filereadable(Obj) && (getftime(Obj) >= getftime(Sou))\n            redraw!\n            if !executable(Exe) || (executable(Exe) && getftime(Exe) < getftime(Obj))\n                if expand(\"%:e\") == \"c\"\n                    setlocal makeprg=gcc\\ -o\\ %<\\ %<.o\n                    echohl WarningMsg | echo \" linking...\"\n                    silent make\n                elseif expand(\"%:e\") == \"cpp\" || expand(\"%:e\") == \"cxx\"\n                    setlocal makeprg=g++\\ -o\\ %<\\ %<.o\n                    echohl WarningMsg | echo \" linking...\"\n                    silent make\n                endif\n                redraw!\n                if v:shell_error != 0\n                    let s:LastShellReturn_L = v:shell_error\n                endif\n                if g:iswindows\n                    if s:LastShellReturn_L != 0\n                        exe \":bo cope\"\n                        echohl WarningMsg | echo \" linking failed\"\n                    else\n                        if s:ShowWarning\n                            exe \":bo cw\"\n                        endif\n                        echohl WarningMsg | echo \" linking successful\"\n                    endif\n                else\n                    if empty(v:statusmsg)\n                        echohl WarningMsg | echo \" linking successful\"\n                    else\n                        exe \":bo cope\"\n                    endif\n                endif\n            else\n                echohl WarningMsg | echo \"\"Exe_Name\"is up to date\"\n            endif\n        endif\n        setlocal makeprg=make\n    elseif expand(\"%:e\") == \"java\"\n        return\n    endif\nendfunc\n\nfunc! Run()\n    let s:ShowWarning = 0\n    call Link()\n    let s:ShowWarning = 1\n    if s:Sou_Error || s:LastShellReturn_C != 0 || s:LastShellReturn_L != 0\n        return\n    endif\n    let Sou = expand(\"%:p\")\n    if expand(\"%:e\") == \"c\" || expand(\"%:e\") == \"cpp\" || expand(\"%:e\") == \"cxx\"\n        let Obj = expand(\"%:p:r\").s:Obj_Extension\n        if g:iswindows\n            let Exe = expand(\"%:p:r\").s:Exe_Extension\n        else\n            let Exe = expand(\"%:p:r\")\n        endif\n        if executable(Exe) && getftime(Exe) >= getftime(Obj) && getftime(Obj) >= getftime(Sou)\n            redraw!\n            echohl WarningMsg | echo \" running...\"\n            if g:iswindows\n                exe \":!%<.exe\"\n            else\n                if g:isGUI\n                    exe \":!gnome-terminal -x bash -c './%<; echo; echo 请按 Enter 键继续; read'\"\n                else\n                    exe \":!clear; ./%<\"\n                endif\n            endif\n            redraw!\n            echohl WarningMsg | echo \" running finish\"\n        endif\n    elseif expand(\"%:e\") == \"java\"\n        let class = expand(\"%:p:r\").s:Class_Extension\n        if getftime(class) >= getftime(Sou)\n            redraw!\n            echohl WarningMsg | echo \" running...\"\n            if g:iswindows\n                exe \":!java %<\"\n            else\n                if g:isGUI\n                    exe \":!gnome-terminal -x bash -c 'java %<; echo; echo 请按 Enter 键继续; read'\"\n                else\n                    exe \":!clear; java %<\"\n                endif\n            endif\n            redraw!\n            echohl WarningMsg | echo \" running finish\"\n        endif\n    endif\nendfunc\n\n\n\" -----------------------------------------------------------------------------\n\"  < 其它配置 >\n\" -----------------------------------------------------------------------------\nset writebackup                             \"保存文件前建立备份，保存成功后删除该备份\nset nobackup                                \"设置无备份文件\n\" set noswapfile                              \"设置无临时文件\n\" set vb t_vb=                                \"关闭提示音\n\n\n\" =============================================================================\n\"                          << 以下为常用插件配置 >>\n\" =============================================================================\n\n\" -----------------------------------------------------------------------------\n\"  < a.vim 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 用于切换C/C++头文件\n\" :A     ---切换头文件并独占整个窗口\n\" :AV    ---切换头文件并垂直分割窗口\n\" :AS    ---切换头文件并水平分割窗口\n\n\" -----------------------------------------------------------------------------\n\"  < BufExplorer 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 快速轻松的在缓存中切换（相当于另一种多个文件间的切换方式）\n\" <Leader>be 在当前窗口显示缓存列表并打开选定文件\n\" <Leader>bs 水平分割窗口显示缓存列表，并在缓存列表窗口中打开选定文件\n\" <Leader>bv 垂直分割窗口显示缓存列表，并在缓存列表窗口中打开选定文件\n\n\" -----------------------------------------------------------------------------\n\"  < ccvext.vim 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 用于对指定文件自动生成tags与cscope文件并连接\n\" 如果是Windows系统, 则生成的文件在源文件所在盘符根目录的.symbs目录下(如: X:\\.symbs\\)\n\" 如果是Linux系统, 则生成的文件在~/.symbs/目录下\n\" 具体用法可参考www.vim.org中此插件的说明\n\" <Leader>sy 自动生成tags与cscope文件并连接\n\" <Leader>sc 连接已存在的tags与cscope文件\n\n\" -----------------------------------------------------------------------------\n\"  < cSyntaxAfter 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 高亮括号与运算符等\n\" au! BufRead,BufNewFile,BufEnter *.{c,cpp,h,java,javascript} call CSyntaxAfter()\n\n\" -----------------------------------------------------------------------------\n\"  < indentLine 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 用于显示对齐线，与 indent_guides 在显示方式上不同，根据自己喜好选择了\n\" 在终端上会有屏幕刷新的问题，这个问题能解决有更好了\n\" 开启/关闭对齐线\nnmap <leader>il :IndentLinesToggle<CR>\n\n\" 设置Gvim的对齐线样式\nif g:isGUI\n    let g:indentLine_char = \"┊\"\n    let g:indentLine_first_char = \"┊\"\nendif\n\n\" 设置终端对齐线颜色，如果不喜欢可以将其注释掉采用默认颜色\nlet g:indentLine_color_term = 239\n\n\" 设置 GUI 对齐线颜色，如果不喜欢可以将其注释掉采用默认颜色\n\" let g:indentLine_color_gui = '#A4E57E'\n\n\n\" \" -----------------------------------------------------------------------------\n\" \"  < MiniBufExplorer 插件配置 >\n\" \" -----------------------------------------------------------------------------\n\" \" 快速浏览和操作Buffer\n\" \" 主要用于同时打开多个文件并相与切换\n\n\" \" let g:miniBufExplMapWindowNavArrows = 1     \"用Ctrl加方向键切换到上下左右的窗口中去\n\" let g:miniBufExplMapWindowNavVim = 1        \"用<C-k,j,h,l>切换到上下左右的窗口中去\n\" let g:miniBufExplMapCTabSwitchBufs = 1      \"功能增强（不过好像只有在Windows中才有用）\n\" \"                                            <C-Tab> 向前循环切换到每个buffer上,并在但前窗口打开\n\" \"                                            <C-S-Tab> 向后循环切换到每个buffer上,并在当前窗口打开\n\n\" 在不使用 MiniBufExplorer 插件时也可用<C-k,j,h,l>切换到上下左右的窗口中去\nnoremap <c-k> <c-w>k\nnoremap <c-j> <c-w>j\nnoremap <c-h> <c-w>h\nnoremap <c-l> <c-w>l\n\n\" -----------------------------------------------------------------------------\n\"  < neocomplcache 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 关键字补全、文件路径补全、tag补全等等，各种，非常好用，速度超快。\nlet g:neocomplcache_enable_at_startup = 1     \"vim 启动时启用插件\n\" let g:neocomplcache_disable_auto_complete = 1 \"不自动弹出补全列表\n\" 在弹出补全列表后用 <c-p> 或 <c-n> 进行上下选择效果比较好\n\n\" -----------------------------------------------------------------------------\n\"  < nerdcommenter 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 我主要用于C/C++代码注释(其它的也行)\n\" 以下为插件默认快捷键，其中的说明是以C/C++为例的，其它语言类似\n\" <Leader>ci 以每行一个 /* */ 注释选中行(选中区域所在行)，再输入则取消注释\n\" <Leader>cm 以一个 /* */ 注释选中行(选中区域所在行)，再输入则称重复注释\n\" <Leader>cc 以每行一个 /* */ 注释选中行或区域，再输入则称重复注释\n\" <Leader>cu 取消选中区域(行)的注释，选中区域(行)内至少有一个 /* */\n\" <Leader>ca 在/*...*/与//这两种注释方式中切换（其它语言可能不一样了）\n\" <Leader>cA 行尾注释\nlet NERDSpaceDelims = 1                     \"在左注释符之后，右注释符之前留有空格\n\n\" -----------------------------------------------------------------------------\n\"  < nerdtree 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 有目录村结构的文件浏览插件\n\n\" 常规模式下输入 F2 调用插件\nnmap <F2> :NERDTreeToggle<CR>\n\n\" -----------------------------------------------------------------------------\n\"  < omnicppcomplete 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 用于C/C++代码补全，这种补全主要针对命名空间、类、结构、共同体等进行补全，详细\n\" 说明可以参考帮助或网络教程等\n\" 使用前先执行如下 ctags 命令（本配置中可以直接使用 ccvext 插件来执行以下命令）\n\" ctags -R --c++-kinds=+p --fields=+iaS --extra=+q\n\" 我使用上面的参数生成标签后，对函数使用跳转时会出现多个选择\n\" 所以我就将--c++-kinds=+p参数给去掉了，如果大侠有什么其它解决方法希望不要保留呀\nset completeopt=menu                        \"关闭预览窗口\n\n\" 函数名全局搜索 F3\nnmap <F3> <ESC>:CtrlSF <c-r><c-w><CR> \nnmap <C-F3> <ESC>:CtrlSFOpen<CR>\n\n\" -----------------------------------------------------------------------------\n\"  < SrcExpl 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 增强源代码浏览，其功能就像Windows中的\"Source Insight\"\nnmap <F4> :SrcExplToggle<CR>                \"打开/闭浏览窗口\n\" // Set the height of Source Explorer window\nlet g:SrcExpl_winHeight = 8\n\n\" // Set 100 ms for refreshing the Source Explorer\nlet g:SrcExpl_refreshTime = 100\n\" // In order to Avoid conflicts, the Source Explorer should know what plugins\n\" // are using buffers. And you need add their bufname into the list below\n\" // according to the command \":buffers!\"\nlet g:SrcExpl_pluginList = [\n        \\ \"__Tag_List__\",\n        \\ \"_NERD_tree_\",\n        \\ \"Source_Explorer\"\n    \\ ]\n\" // Do not let the Source Explorer update the tags file when opening          \"\nlet g:SrcExpl_isUpdateTags = 0\n\" // Enable/Disable the local definition searching, and note that this is not  \"\n\" // guaranteed to work, the Source Explorer doesn't check the syntax for now. \"\n\" // It only searches for a match with the keyword according to command 'gd'   \"\nlet g:SrcExpl_searchLocalDef = 1\n\n\" 启用 // 注视风格\nlet c_cpp_comments = 0\n\n\n\" -----------------------------------------------------------------------------\n\"  < Tagbar 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 相对 TagList 能更好的支持面向对象\n\n\" 常规模式下输入 tb 调用插件，如果有打开 TagList 窗口则先将其关闭\nnmap tb :TlistClose<CR>:TagbarToggle<CR>\n\nlet g:tagbar_width=30                       \"设置窗口宽度\n\" let g:tagbar_left=1                         \"在左侧窗口中显示\n\n\" -----------------------------------------------------------------------------\n\"  < TagList 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 高效地浏览源码, 其功能就像vc中的workpace\n\" 那里面列出了当前文件中的所有宏,全局变量, 函数名等\n\n\" 常规模式下输入 tl 调用插件，如果有打开 Tagbar 窗口则先将其关闭\nnmap tl :TagbarClose<CR>:Tlist<CR>\n\nlet Tlist_Show_One_File=1                   \"只显示当前文件的tags\n\" let Tlist_Enable_Fold_Column=0              \"使taglist插件不显示左边的折叠行\nlet Tlist_Exit_OnlyWindow=1                \"如果Taglist窗口是最后一个窗口则退出Vim\nlet Tlist_File_Fold_Auto_Close=1            \"自动折叠\nlet Tlist_WinWidth=30                       \"设置窗口宽度\nlet Tlist_Use_Right_Window=1                \"在右侧窗口中显示\n\n\" -----------------------------------------------------------------------------\n\"  < txtbrowser 插件配置 >\n\" -----------------------------------------------------------------------------\n\" 用于文本文件生成标签与与语法高亮（调用TagList插件生成标签，如果可以）\nau BufRead,BufNewFile *.txt setlocal ft=txt\n\n\" \\ r 快速执行GO\n\" au FileType go nmap <leader>r <Plug>(go-run)\n\" -----------------------------------------------------------------------------\n\" <rjohnsondev/vim-compiler-go>\n\" 语法检查  Go 路径\n\" -----------------------------------------------------------------------------\nautocmd FileType go compiler golang\nlet g:golang_goroot = \"/usr/local/go\"\n\n\" compile coffee on write\nlet coffee_compile_vert = 1\nau BufWritePost *.coffee silent execute 'CoffeeMake! -o'.expand('<afile>:p:h').'./'\n\" auto compile on save\n\n\" =============================================================================\n\"                          << 以下为常用工具配置 >>\n\" =============================================================================\n\n\" -----------------------------------------------------------------------------\n\"  < cscope 工具配置 >\n\" -----------------------------------------------------------------------------\n\" 用Cscope自己的话说 - \"你可以把它当做是超过频的ctags\"\nif has(\"cscope\")\n    \"设定可以使用 quickfix 窗口来查看 cscope 结果\n    set cscopequickfix=s-,c-,d-,i-,t-,e-\n    \"使支持用 Ctrl+]  和 Ctrl+t 快捷键在代码间跳转\n    set cscopetag\n    \"如果你想反向搜索顺序设置为1\n    set csto=0\n    \"在当前目录中添加任何数据库\n    if filereadable(\"cscope.out\")\n        cs add cscope.out\n    \"否则添加数据库环境中所指出的\n    elseif $CSCOPE_DB != \"\"\n        cs add $CSCOPE_DB\n    endif\n    set cscopeverbose\n    \"快捷键设置\n    nmap <C-\\>s :cs find s <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-\\>g :cs find g <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-\\>c :cs find c <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-\\>t :cs find t <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-\\>e :cs find e <C-R>=expand(\"<cword>\")<CR><CR>\n    nmap <C-\\>f :cs find f <C-R>=expand(\"<cfile>\")<CR><CR>\n    nmap <C-\\>i :cs find i ^<C-R>=expand(\"<cfile>\")<CR>$<CR>\n    nmap <C-\\>d :cs find d <C-R>=expand(\"<cword>\")<CR><CR>\nendif\n\n\" -----------------------------------------------------------------------------\n\"  < ctags 工具配置 >\n\" -----------------------------------------------------------------------------\n\" 对浏览代码非常的方便,可以在函数,变量之间跳转等\nset tags=./tags;                            \"向上级目录递归查找tags文件（好像只有在Windows下才有用）\n\n\" -----------------------------------------------------------------------------\n\"  < gvimfullscreen 工具配置 > 请确保已安装了工具\n\" -----------------------------------------------------------------------------\n\" 用于 Windows Gvim 全屏窗口，可用 F11 切换\n\" 全屏后再隐藏菜单栏、工具栏、滚动条效果更好\nif (g:iswindows && g:isGUI)\n    nmap <F11> <Esc>:call libcallnr(\"gvimfullscreen.dll\", \"ToggleFullScreen\", 0)<CR>\nendif\n\n\" -----------------------------------------------------------------------------\n\"  < vimtweak 工具配置 > 请确保以已装了工具\n\" -----------------------------------------------------------------------------\n\" 这里只用于窗口透明与置顶\n\" 常规模式下 Ctrl + Up（上方向键） 增加不透明度，Ctrl + Down（下方向键） 减少不透明度，<Leader>t 窗口置顶与否切换\nif (g:iswindows && g:isGUI)\n    let g:Current_Alpha = 255\n    let g:Top_Most = 0\n    func! Alpha_add()\n        let g:Current_Alpha = g:Current_Alpha + 10\n        if g:Current_Alpha > 255\n            let g:Current_Alpha = 255\n        endif\n        call libcallnr(\"vimtweak.dll\",\"SetAlpha\",g:Current_Alpha)\n    endfunc\n    func! Alpha_sub()\n        let g:Current_Alpha = g:Current_Alpha - 10\n        if g:Current_Alpha < 155\n            let g:Current_Alpha = 155\n        endif\n        call libcallnr(\"vimtweak.dll\",\"SetAlpha\",g:Current_Alpha)\n    endfunc\n    func! Top_window()\n        if  g:Top_Most == 0\n            call libcallnr(\"vimtweak.dll\",\"EnableTopMost\",1)\n            let g:Top_Most = 1\n        else\n            call libcallnr(\"vimtweak.dll\",\"EnableTopMost\",0)\n            let g:Top_Most = 0\n        endif\n    endfunc\n\n    \"快捷键设置\n    nmap <c-up> :call Alpha_add()<CR>\n    nmap <c-down> :call Alpha_sub()<CR>\n    nmap <leader>t :call Top_window()<CR>\nendif\n\n\" =============================================================================\n\"                          << 以下为常用自动命令配置 >>\n\" =============================================================================\n\n\" 自动切换目录为当前编辑文件所在目录\nau BufRead,BufNewFile,BufEnter * cd %:p:h\n\n\" =============================================================================\n\"                     << windows 下解决 Quickfix 乱码问题 >>\n\" =============================================================================\n\" windows 默认编码为 cp936，而 Gvim(Vim) 内部编码为 utf-8，所以常常输出为乱码\n\" 以下代码可以将编码为 cp936 的输出信息转换为 utf-8 编码，以解决输出乱码问题\n\" 但好像只对输出信息全部为中文才有满意的效果，如果输出信息是中英混合的，那可能\n\" 不成功，会造成其中一种语言乱码，输出信息全部为英文的好像不会乱码\n\" 如果输出信息为乱码的可以试一下下面的代码，如果不行就还是给它注释掉\n\n\" if g:iswindows\n\"     function QfMakeConv()\n\"         let qflist = getqflist()\n\"         for i in qflist\n\"            let i.text = iconv(i.text, \"cp936\", \"utf-8\")\n\"         endfor\n\"         call setqflist(qflist)\n\"      endfunction\n\"      au QuickfixCmdPost make call QfMakeConv()\n\" endif\n\n\" =============================================================================\n\"                          << 其它 >>\n\" =============================================================================\n\" 注：上面配置中的\"<Leader>\"在本软件中设置为\"\\\"键（引号里的反斜杠），如<Leader>t\n\" 指在常规模式下按\"\\\"键加\"t\"键，这里不是同时按，而是先按\"\\\"键后按\"t\"键，间隔在一\n\" 秒内，而<Leader>cs是先按\"\\\"键再按\"c\"又再按\"s\"键；如要修改\"<leader>\"键，可以把\n\" 下面的设置取消注释，并修改双引号中的键为你想要的，如修改为逗号键。\n\n\" let mapleader = \",\"\n\n\" \" =============================================================================\n\" \"                          << 五笔拼音输入法 >>\n\" \"                           调用 C + S + 空格\n\" \" =============================================================================\nlet g:ywvim_ims=[\n             \\['wb', '五笔', 'wubi.ywvim'],\n             \\['py', '拼音', 'pinyin.ywvim'],\n             \\]\n\nlet g:ywvim_py = { 'helpim':'py', 'gb':0   }\n\nlet g:ywvim_zhpunc = 1\nlet g:ywvim_listmax = 5\nlet g:ywvim_esc_autoff = 0\nlet g:ywvim_autoinput = 0\nlet g:ywvim_circlecandidates = 1\nlet g:ywvim_helpim_on = 0\nlet g:ywvim_matchexact = 0\nlet g:ywvim_chinesecode = 1\nlet g:ywvim_gb = 0\nlet g:ywvim_preconv = 'g2b'\nlet g:ywvim_conv = ''\nlet g:ywvim_lockb = 1\n```\n\n>保存配置文件于 ~/.vimrc ，进入 vim 执行 **:PluginInstall**，进行插件安装\n\n## 部分插件说明\n\n### Bundle\n\nWindows 使用 Bundle 安装插件之前还需要先安装 Git for Windows 然后将 git 目录加入环境变量 ，如 C:\\Program Files (x86)\\Git\\bin 运行 vim 执行 :PluginInstall , 等待插件全部安装完成。\n\n### ctags 自动提示\n\n>Ctags 需要先下载并编译 http://ctags.sf.net , Windows版本下载 zip 文件 并加入环境变量 C:\\Program Files (x86)\\Vim\\ctags58 \n>Linux 下载源码包编译安装 或使用 apt-get 安装 \n\n```bash\nsudo apt-get install ctags\n```\n\nMac 下使用 brew 安装\n```bash\nbrew install ctags\n```\n\n>由于 mac 自带一个ctags，而taglist要求的是exuberant crags，所以我们给我们安装的 tags 一个别名\n\n```bash\nvim ~/.zsh_aliases \n```\n\n>如果使用的是默认的 bash 那应该修改 ~/.bash_aliases 或者 ~/.profile\n\n添加行\n```bash\nalias ctags2=\"/usr/local/Cellar/ctags/5.8_1/bin/ctags\"\n```\n>使用 ctags 命令生成 ctags 文件\n\n```bash\nctags -R\n```\n\n>生成完 ctags 文件于本目录中 Vim 中使用\n\nC + ] 命令跳转至函数定义处\n\nC + t 返回跳转前函数\n\n### Align 自动对齐\n\n```bash\n\\t=  : align assignments (don't count logic, like == or !=) \n\\t,  : align on commas \n\\t|  : align on vertical bars (|) \n\\tsp : align on whitespace \n\\tt  : align LaTeX tabular tables\n```\n\n### ACK 快速查询函数定义\n\n```bash\nsudo apt-get install ack\n```\n\n>默认配置中使用快捷键 F3 触发查看\n\n### NERDTree 文件目录树查看\n\n>默认配置中使用快捷键 F2 切换打开/关闭\n>NERDTree提供了丰富的键盘操作方式来浏览和打开文件，一些常用的快捷键：\n\n```bash\n通过h j k l移动光标定位\no 打开关闭文件或者目录，如果是文件的话，光标出现在打开的文件中\ngo 效果同上，不过光标保持在文件目录里，类似预览文件内容的功能\ni和s可以水平分割或纵向分割窗口打开文件，前面加g类似go的功能\nt 在标签页中打开\nT 在后台标签页中打开\np 到上层目录\nP 到根目录\nK 到同目录第一个节点\nJ 到同目录最后一个节点\nm 显示文件系统菜单（添加、删除、移动操作）\n? 帮助\nq 关闭\n\" <Leader>be 在当前窗口显示缓存列表并打开选定文件\n\" <Leader>bs 水平分割窗口显示缓存列表，并在缓存列表窗口中打开选定文件\n\" <Leader>bv 垂直分割窗口显示缓存列表，并在缓存列表窗口中打开选定文件\n\n<Leader> 指 \\ 反斜杠\n想了解更多操作方式，可以通过? 查看详细的帮助信息。\n```\n\n### VIM 的其他命令\n\n* 转到您的目录 cd xx\n* 首次启动时执行 ctags -R 自动生成 tag\n* 启动VIM  vim\n* F2 打开左侧文件树，r 刷新当前目录 R 刷新全部目录\n* tb 打开右侧函数列表 （或 tl）\n* F3 打开变量/方法说明\n* C + ] 跳转至方法/变量 定义处 同上一个方法 只是这个会跳转, 如果只是想瞥一下方法的功能使用 F4 即可, F3 全项目搜索该函数定义\n* C + t 上一个方法跳过去后使用这个跳回来\n* C + p 全项目搜索文件名称\n* C + h / j /k / l 可以在多窗口中移动 亦可用于 主窗口中跳至文件树列表或跳至 函数列表等\n在文件树窗口中\n* o 打开文件在主窗口 / 折叠或展开目录\n* t 在新 tab 中打开\n* T 在新 tab 中打开不激活（即后台）\n* i 水平分隔主窗口并打开该文件\n* s 纵向分隔主窗口并打开该文件\n* 打开了多个文件后 \\be 查看在缓存中的文件 （有点像 tab 如果没有关闭的都可以切换）\n\\cc 注释掉选择行 \\cu 反注释 \\cc 的行\n* 如果开了多个 tab （即使用 t / T 打开了文件） gt 切换到下一个 tab  gT 切换到上一个 tab\n* 自动提示 使用 C + j / C + k 选择列表中的内容\n* Html 文件中 emmet 使用 c + y 后 , 逗号 来展开\n* \\t= 格式化选中行\n* Esc 离得比较远的可以将 Caps Lock 键换成 Esc 在 插入 (insert) 模式下 还可以使用 C + h / j / k / l 来移动 可参考 [互换-Ctrl-Caps-Lock-按键](/2016/05/05/互换-Ctrl-Caps-Lock-按键/)\n* 输入中文 C + S + SPACE 默认五笔 z 键临时拼音，用拼音的直接删除配置中的五笔即可\n* 编译相关 F9 保存、编译、打开","slug":"VIM-配置","published":1,"updated":"2023-03-06T13:38:31.392Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq33000efb8h9vx88irr","content":"<blockquote>\n<p>VIM 7.4 以上版本，大部分配置同时适用于 Linux &#x2F; Mac OS 终端 以及 gVim</p>\n</blockquote>\n<h2 id=\"安装插件管理器\"><a href=\"#安装插件管理器\" class=\"headerlink\" title=\"安装插件管理器\"></a>安装插件管理器</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"完整配置\"><a href=\"#完整配置\" class=\"headerlink\" title=\"完整配置\"></a>完整配置</h2><blockquote>\n<p>编辑本用户的 vim 配置文件<br>Linux &#x2F; Mac OS 一般创建文件 ~&#x2F;.vimrc<br>Windows 可在用户名文件夹下创建 .vimrc 文件 (C:\\Users\\USERNAME)</p>\n</blockquote>\n<span id=\"more\"></span>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br><span class=\"line\">772</span><br><span class=\"line\">773</span><br><span class=\"line\">774</span><br><span class=\"line\">775</span><br><span class=\"line\">776</span><br><span class=\"line\">777</span><br><span class=\"line\">778</span><br><span class=\"line\">779</span><br><span class=\"line\">780</span><br><span class=\"line\">781</span><br><span class=\"line\">782</span><br><span class=\"line\">783</span><br><span class=\"line\">784</span><br><span class=\"line\">785</span><br><span class=\"line\">786</span><br><span class=\"line\">787</span><br><span class=\"line\">788</span><br><span class=\"line\">789</span><br><span class=\"line\">790</span><br><span class=\"line\">791</span><br><span class=\"line\">792</span><br><span class=\"line\">793</span><br><span class=\"line\">794</span><br><span class=\"line\">795</span><br><span class=\"line\">796</span><br><span class=\"line\">797</span><br><span class=\"line\">798</span><br><span class=\"line\">799</span><br><span class=\"line\">800</span><br><span class=\"line\">801</span><br><span class=\"line\">802</span><br><span class=\"line\">803</span><br><span class=\"line\">804</span><br><span class=\"line\">805</span><br><span class=\"line\">806</span><br><span class=\"line\">807</span><br><span class=\"line\">808</span><br><span class=\"line\">809</span><br><span class=\"line\">810</span><br><span class=\"line\">811</span><br><span class=\"line\">812</span><br><span class=\"line\">813</span><br><span class=\"line\">814</span><br><span class=\"line\">815</span><br><span class=\"line\">816</span><br><span class=\"line\">817</span><br><span class=\"line\">818</span><br><span class=\"line\">819</span><br><span class=\"line\">820</span><br><span class=\"line\">821</span><br><span class=\"line\">822</span><br><span class=\"line\">823</span><br><span class=\"line\">824</span><br><span class=\"line\">825</span><br><span class=\"line\">826</span><br><span class=\"line\">827</span><br><span class=\"line\">828</span><br><span class=\"line\">829</span><br><span class=\"line\">830</span><br><span class=\"line\">831</span><br><span class=\"line\">832</span><br><span class=\"line\">833</span><br><span class=\"line\">834</span><br><span class=\"line\">835</span><br><span class=\"line\">836</span><br><span class=\"line\">837</span><br><span class=\"line\">838</span><br><span class=\"line\">839</span><br><span class=\"line\">840</span><br><span class=\"line\">841</span><br><span class=\"line\">842</span><br><span class=\"line\">843</span><br><span class=\"line\">844</span><br><span class=\"line\">845</span><br><span class=\"line\">846</span><br><span class=\"line\">847</span><br><span class=\"line\">848</span><br><span class=\"line\">849</span><br><span class=\"line\">850</span><br><span class=\"line\">851</span><br><span class=\"line\">852</span><br><span class=\"line\">853</span><br><span class=\"line\">854</span><br><span class=\"line\">855</span><br><span class=\"line\">856</span><br><span class=\"line\">857</span><br><span class=\"line\">858</span><br><span class=\"line\">859</span><br><span class=\"line\">860</span><br><span class=\"line\">861</span><br><span class=\"line\">862</span><br><span class=\"line\">863</span><br><span class=\"line\">864</span><br><span class=\"line\">865</span><br><span class=\"line\">866</span><br><span class=\"line\">867</span><br><span class=\"line\">868</span><br><span class=\"line\">869</span><br><span class=\"line\">870</span><br><span class=\"line\">871</span><br><span class=\"line\">872</span><br><span class=\"line\">873</span><br><span class=\"line\">874</span><br><span class=\"line\">875</span><br><span class=\"line\">876</span><br><span class=\"line\">877</span><br><span class=\"line\">878</span><br><span class=\"line\">879</span><br><span class=\"line\">880</span><br><span class=\"line\">881</span><br><span class=\"line\">882</span><br><span class=\"line\">883</span><br><span class=\"line\">884</span><br><span class=\"line\">885</span><br><span class=\"line\">886</span><br><span class=\"line\">887</span><br><span class=\"line\">888</span><br><span class=\"line\">889</span><br><span class=\"line\">890</span><br><span class=\"line\">891</span><br><span class=\"line\">892</span><br><span class=\"line\">893</span><br><span class=\"line\">894</span><br><span class=\"line\">895</span><br><span class=\"line\">896</span><br><span class=\"line\">897</span><br><span class=\"line\">898</span><br><span class=\"line\">899</span><br><span class=\"line\">900</span><br><span class=\"line\">901</span><br><span class=\"line\">902</span><br><span class=\"line\">903</span><br><span class=\"line\">904</span><br><span class=\"line\">905</span><br><span class=\"line\">906</span><br><span class=\"line\">907</span><br><span class=\"line\">908</span><br><span class=\"line\">909</span><br><span class=\"line\">910</span><br><span class=\"line\">911</span><br><span class=\"line\">912</span><br><span class=\"line\">913</span><br><span class=\"line\">914</span><br><span class=\"line\">915</span><br><span class=\"line\">916</span><br><span class=\"line\">917</span><br><span class=\"line\">918</span><br><span class=\"line\">919</span><br><span class=\"line\">920</span><br><span class=\"line\">921</span><br><span class=\"line\">922</span><br><span class=\"line\">923</span><br><span class=\"line\">924</span><br><span class=\"line\">925</span><br><span class=\"line\">926</span><br><span class=\"line\">927</span><br><span class=\"line\">928</span><br><span class=\"line\">929</span><br><span class=\"line\">930</span><br><span class=\"line\">931</span><br><span class=\"line\">932</span><br><span class=\"line\">933</span><br><span class=\"line\">934</span><br><span class=\"line\">935</span><br><span class=\"line\">936</span><br><span class=\"line\">937</span><br><span class=\"line\">938</span><br><span class=\"line\">939</span><br><span class=\"line\">940</span><br><span class=\"line\">941</span><br><span class=\"line\">942</span><br><span class=\"line\">943</span><br><span class=\"line\">944</span><br><span class=\"line\">945</span><br><span class=\"line\">946</span><br><span class=\"line\">947</span><br><span class=\"line\">948</span><br><span class=\"line\">949</span><br><span class=\"line\">950</span><br><span class=\"line\">951</span><br><span class=\"line\">952</span><br><span class=\"line\">953</span><br><span class=\"line\">954</span><br><span class=\"line\">955</span><br><span class=\"line\">956</span><br><span class=\"line\">957</span><br><span class=\"line\">958</span><br><span class=\"line\">959</span><br><span class=\"line\">960</span><br><span class=\"line\">961</span><br><span class=\"line\">962</span><br><span class=\"line\">963</span><br><span class=\"line\">964</span><br><span class=\"line\">965</span><br><span class=\"line\">966</span><br><span class=\"line\">967</span><br><span class=\"line\">968</span><br><span class=\"line\">969</span><br><span class=\"line\">970</span><br><span class=\"line\">971</span><br><span class=\"line\">972</span><br><span class=\"line\">973</span><br><span class=\"line\">974</span><br><span class=\"line\">975</span><br><span class=\"line\">976</span><br><span class=\"line\">977</span><br><span class=\"line\">978</span><br><span class=\"line\">979</span><br><span class=\"line\">980</span><br><span class=\"line\">981</span><br><span class=\"line\">982</span><br><span class=\"line\">983</span><br><span class=\"line\">984</span><br><span class=\"line\">985</span><br><span class=\"line\">986</span><br><span class=\"line\">987</span><br><span class=\"line\">988</span><br><span class=\"line\">989</span><br><span class=\"line\">990</span><br><span class=\"line\">991</span><br><span class=\"line\">992</span><br><span class=\"line\">993</span><br><span class=\"line\">994</span><br><span class=\"line\">995</span><br><span class=\"line\">996</span><br><span class=\"line\">997</span><br><span class=\"line\">998</span><br><span class=\"line\">999</span><br><span class=\"line\">1000</span><br><span class=\"line\">1001</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot; =============================================================================</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>        &lt;&lt; 判断操作系统是 Windows 还是 Linux 和判断是终端还是 Gvim &gt;&gt;</span><br><span class=\"line\"><span class=\"string\">&quot; =============================================================================</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; 判断操作系统是否是 Windows 还是 Linux &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"built_in\">let</span> g:iswindows = 0</span><br><span class=\"line\"><span class=\"built_in\">let</span> g:islinux = 0</span><br><span class=\"line\"><span class=\"keyword\">if</span>(has(<span class=\"string\">&quot;win32&quot;</span>) || has(<span class=\"string\">&quot;win64&quot;</span>) || has(<span class=\"string\">&quot;win95&quot;</span>) || has(<span class=\"string\">&quot;win16&quot;</span>))</span><br><span class=\"line\">    <span class=\"built_in\">let</span> g:iswindows = 1</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">let</span> g:islinux = 1</span><br><span class=\"line\">endif</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; 判断是终端还是 Gvim &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">if has(&quot;</span>gui_running<span class=\"string\">&quot;)</span></span><br><span class=\"line\"><span class=\"string\">    let g:isGUI = 1</span></span><br><span class=\"line\"><span class=\"string\">else</span></span><br><span class=\"line\"><span class=\"string\">    let g:isGUI = 0</span></span><br><span class=\"line\"><span class=\"string\">endif</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> =============================================================================</span><br><span class=\"line\"><span class=\"string\">&quot;                          &lt;&lt; 以下为软件默认配置 &gt;&gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> =============================================================================</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; Windows Gvim 默认配置&gt; 做了一点修改</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">if (g:iswindows &amp;&amp; g:isGUI)</span></span><br><span class=\"line\"><span class=\"string\">    source <span class=\"variable\">$VIMRUNTIME</span>/vimrc_example.vim</span></span><br><span class=\"line\"><span class=\"string\">    source <span class=\"variable\">$VIMRUNTIME</span>/mswin.vim</span></span><br><span class=\"line\"><span class=\"string\">    behave mswin</span></span><br><span class=\"line\"><span class=\"string\">    set diffexpr=MyDiff()</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    function MyDiff()</span></span><br><span class=\"line\"><span class=\"string\">        let opt = &#x27;-a --binary &#x27;</span></span><br><span class=\"line\"><span class=\"string\">        if &amp;diffopt =~ &#x27;icase&#x27; | let opt = opt . &#x27;-i &#x27; | endif</span></span><br><span class=\"line\"><span class=\"string\">        if &amp;diffopt =~ &#x27;iwhite&#x27; | let opt = opt . &#x27;-b &#x27; | endif</span></span><br><span class=\"line\"><span class=\"string\">        let arg1 = v:fname_in</span></span><br><span class=\"line\"><span class=\"string\">        if arg1 =~ &#x27; &#x27; | let arg1 = &#x27;&quot;</span><span class=\"string\">&#x27; . arg1 . &#x27;</span><span class=\"string\">&quot;&#x27; | endif</span></span><br><span class=\"line\"><span class=\"string\">        let arg2 = v:fname_new</span></span><br><span class=\"line\"><span class=\"string\">        if arg2 =~ &#x27; &#x27; | let arg2 = &#x27;&quot;</span><span class=\"string\">&#x27; . arg2 . &#x27;</span><span class=\"string\">&quot;&#x27; | endif</span></span><br><span class=\"line\"><span class=\"string\">        let arg3 = v:fname_out</span></span><br><span class=\"line\"><span class=\"string\">        if arg3 =~ &#x27; &#x27; | let arg3 = &#x27;&quot;</span><span class=\"string\">&#x27; . arg3 . &#x27;</span><span class=\"string\">&quot;&#x27; | endif</span></span><br><span class=\"line\"><span class=\"string\">        let eq = &#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        if <span class=\"variable\">$VIMRUNTIME</span> =~ &#x27; &#x27;</span></span><br><span class=\"line\"><span class=\"string\">            if &amp;sh =~ &#x27;\\&lt;cmd&#x27;</span></span><br><span class=\"line\"><span class=\"string\">                let cmd = &#x27;&quot;</span><span class=\"string\">&quot;&#x27; . <span class=\"variable\">$VIMRUNTIME</span> . &#x27;\\diff&quot;</span><span class=\"string\">&#x27;</span></span><br><span class=\"line\"><span class=\"string\">                let eq = &#x27;</span><span class=\"string\">&quot;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">            else</span></span><br><span class=\"line\"><span class=\"string\">                let cmd = substitute(<span class=\"variable\">$VIMRUNTIME</span>, &#x27; &#x27;, &#x27;&quot;</span> <span class=\"string\">&#x27;, &#x27;</span><span class=\"string\">&#x27;) . &#x27;</span>\\diff<span class=\"string\">&quot;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">            endif</span></span><br><span class=\"line\"><span class=\"string\">        else</span></span><br><span class=\"line\"><span class=\"string\">            let cmd = <span class=\"variable\">$VIMRUNTIME</span> . &#x27;\\diff&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        endif</span></span><br><span class=\"line\"><span class=\"string\">        silent execute &#x27;!&#x27; . cmd . &#x27; &#x27; . opt . arg1 . &#x27; &#x27; . arg2 . &#x27; &gt; &#x27; . arg3 . eq</span></span><br><span class=\"line\"><span class=\"string\">    endfunction</span></span><br><span class=\"line\"><span class=\"string\">endif</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; Linux Gvim/Vim 默认配置&gt; 做了一点修改</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"keyword\">if</span> g:islinux</span><br><span class=\"line\">    <span class=\"built_in\">set</span> hlsearch        <span class=\"string\">&quot;高亮搜索</span></span><br><span class=\"line\"><span class=\"string\">    set incsearch       &quot;</span>在输入要搜索的文字时，实时匹配</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot; Uncomment the following to have Vim jump to the last position when</span></span><br><span class=\"line\"><span class=\"string\">    &quot;</span> reopening a file</span><br><span class=\"line\">    <span class=\"keyword\">if</span> has(<span class=\"string\">&quot;autocmd&quot;</span>)</span><br><span class=\"line\">        au BufReadPost * <span class=\"keyword\">if</span> line(<span class=\"string\">&quot;&#x27;\\&quot;&quot;</span>) &gt; 1 &amp;&amp; line(<span class=\"string\">&quot;&#x27;\\&quot;&quot;</span>) &lt;= line(<span class=\"string\">&quot;$&quot;</span>) | exe <span class=\"string\">&quot;normal! g&#x27;\\&quot;&quot;</span> | endif</span><br><span class=\"line\">    endif</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> g:isGUI</span><br><span class=\"line\">        <span class=\"string\">&quot; Source a global configuration file if available</span></span><br><span class=\"line\"><span class=\"string\">        if filereadable(&quot;</span>/etc/vim/gvimrc.local<span class=\"string\">&quot;)</span></span><br><span class=\"line\"><span class=\"string\">            source /etc/vim/gvimrc.local</span></span><br><span class=\"line\"><span class=\"string\">        endif</span></span><br><span class=\"line\"><span class=\"string\">    else</span></span><br><span class=\"line\"><span class=\"string\">        &quot;</span> This line should not be removed as it ensures that various options are</span><br><span class=\"line\">        <span class=\"string\">&quot; properly set to work with the Vim-related packages available in Debian.</span></span><br><span class=\"line\"><span class=\"string\">        runtime! debian.vim</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &quot;</span> Vim5 and later versions support syntax highlighting. Uncommenting the next</span><br><span class=\"line\">        <span class=\"string\">&quot; line enables syntax highlighting by default.</span></span><br><span class=\"line\"><span class=\"string\">        if has(&quot;</span>syntax<span class=\"string\">&quot;)</span></span><br><span class=\"line\"><span class=\"string\">            syntax on</span></span><br><span class=\"line\"><span class=\"string\">        endif</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &quot;</span> <span class=\"built_in\">set</span> mouse=a                    <span class=\"string\">&quot; 在任何模式下启用鼠标</span></span><br><span class=\"line\"><span class=\"string\">        set t_Co=256                   &quot;</span> 在终端启用256色</span><br><span class=\"line\">        <span class=\"built_in\">set</span> backspace=2                <span class=\"string\">&quot; 设置退格键可用</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &quot;</span> Source a global configuration file <span class=\"keyword\">if</span> available</span><br><span class=\"line\">        <span class=\"keyword\">if</span> filereadable(<span class=\"string\">&quot;/etc/vim/vimrc.local&quot;</span>)</span><br><span class=\"line\">            <span class=\"built_in\">source</span> /etc/vim/vimrc.local</span><br><span class=\"line\">        endif</span><br><span class=\"line\">    endif</span><br><span class=\"line\">endif</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; =============================================================================</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>                          &lt;&lt; 以下为用户自定义配置 &gt;&gt;</span><br><span class=\"line\"><span class=\"string\">&quot; =============================================================================</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; Vundle 插件管理工具配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 用于更方便的管理vim插件，具体用法参考 :h vundle 帮助</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> Vundle工具安装方法为在终端输入如下命令</span><br><span class=\"line\"><span class=\"string\">&quot; git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 如果想在 windows 安装就必需先安装 <span class=\"string\">&quot;git for window&quot;</span>，可查阅网上资料</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">set</span> nocompatible                                      <span class=\"string\">&quot;禁用 Vi 兼容模式</span></span><br><span class=\"line\"><span class=\"string\">filetype off                                          &quot;</span>禁用文件类型侦测</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> g:islinux</span><br><span class=\"line\">    <span class=\"built_in\">set</span> rtp+=~/.vim/bundle/vundle/</span><br><span class=\"line\">    call vundle<span class=\"comment\">#rc()</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">set</span> rtp+=<span class=\"variable\">$VIM</span>/vimfiles/bundle/vundle/</span><br><span class=\"line\">    call vundle<span class=\"comment\">#rc(&#x27;$VIM/vimfiles/bundle/&#x27;)</span></span><br><span class=\"line\">endif</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 使用Vundle来管理插件，这个必须要有。</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;gmarik/vundle&#x27;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 以下为要安装或更新的插件，不同仓库都有（具体书写规范请参考帮助）</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; a.vim 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> :AS    ---切换头文件并水平分割窗口</span><br><span class=\"line\"><span class=\"string\">&quot; Bundle &#x27;a.vim&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; Align 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 一个对齐的插件，用来——排版与对齐代码，功能强大，不过用到的机会不多</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;Align&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; tab 键自动补全 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; Bundle &#x27;SuperTab&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; auto-pairs 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 用于括号与引号自动补全，不过会与函数原型提示插件echofunc冲突</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;jiangmiao/auto-pairs&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; BufExplorer 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 快速轻松的在缓存中切换（相当于另一种多个文件间的切换方式）</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;bufexplorer.zip&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; ccvext.vim 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 用于对指定文件自动生成tags与cscope文件并连接</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> Bundle <span class=\"string\">&#x27;ccvext.vim&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; cSyntaxAfter 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 高亮括号与运算符等</span><br><span class=\"line\">Bundle <span class=\"string\">&#x27;cSyntaxAfter&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; ctrlp.vim 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 一个全路径模糊文件，缓冲区，最近最多使用，... 检索插件；详细帮助见 :h ctrlp</span><br><span class=\"line\"><span class=\"string\">&quot; 常规模式下输入：Ctrl + p 调用插件</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;ctrlpvim/ctrlp.vim&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; emmet-vim（前身为Zen coding） 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; HTML/CSS代码快速编写神器，详细帮助见 :h emmet.txt</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;mattn/emmet-vim&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; indentLine 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 用于显示对齐线，与 indent_guides 在显示方式上不同，根据自己喜好选择了</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 在终端上会有屏幕刷新的问题，这个问题能解决有更好了</span><br><span class=\"line\">Bundle <span class=\"string\">&#x27;Yggdroot/indentLine&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; vim-javacompleteex（也就是 javacomplete 增强版）插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> java 补全插件</span><br><span class=\"line\"><span class=\"string\">&quot; Bundle &#x27;vim-javacompleteex&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; Mark--Karkat（也就是 Mark） 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 给不同的单词高亮，表明不同的变量时很有用，详细帮助见 :h mark.txt</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;Mark--Karkat&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; neocomplcache 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 关键字补全、文件路径补全、tag补全等等，各种，非常好用，速度超快。</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;Shougo/neocomplcache.vim&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; nerdcommenter 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 我主要用于C/C++代码注释(其它的也行)</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 以下为插件默认快捷键，其中的说明是以C/C++为例的，其它语言类似</span><br><span class=\"line\">Bundle <span class=\"string\">&#x27;scrooloose/nerdcommenter&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; nerdtree 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 有目录村结构的文件浏览插件</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 常规模式下输入 F2 调用插件</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;scrooloose/nerdtree&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; omnicppcomplete 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 用于C/C++代码补全，这种补全主要针对命名空间、类、结构、共同体等进行补全，详细</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 说明可以参考帮助或网络教程等</span><br><span class=\"line\"><span class=\"string\">&quot; 使用前先执行如下 ctags 命令（本配置中可以直接使用 ccvext 插件来执行以下命令）</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> ctags -R --c++-kinds=+p --fields=+iaS --extra=+q</span><br><span class=\"line\"><span class=\"string\">&quot; 我使用上面的参数生成标签后，对函数使用跳转时会出现多个选择</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> Bundle <span class=\"string\">&#x27;OmniCppComplete&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; powerline 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 状态栏插件，更好的状态栏效果</span><br><span class=\"line\">Bundle <span class=\"string\">&#x27;Lokaltog/vim-powerline&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; repeat 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 主要用<span class=\"string\">&quot;.&quot;</span>命令来重复上次插件使用的命令</span><br><span class=\"line\">Bundle <span class=\"string\">&#x27;repeat.vim&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; snipMate 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 用于各种代码补全，这种补全是一种对代码中的词与代码块的缩写补全，详细用法可以参</span><br><span class=\"line\"><span class=\"string\">&quot; 考使用说明或网络教程等。不过有时候也会与 supertab 插件在补全时产生冲突，如果大</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 侠有什么其它解决方法希望不要保留呀</span><br><span class=\"line\">Bundle <span class=\"string\">&#x27;msanders/snipmate.vim&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; SrcExpl 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 增强源代码浏览，其功能就像Windows中的<span class=\"string\">&quot;Source Insight&quot;</span></span><br><span class=\"line\">Bundle <span class=\"string\">&#x27;wesleyche/SrcExpl&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; std_c 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> Bundle <span class=\"string\">&#x27;std_c.zip&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; surround 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 快速给单词/句子两边增加符号（包括html标签），缺点是不能用<span class=\"string\">&quot;.&quot;</span>来重复命令</span><br><span class=\"line\"><span class=\"string\">&quot; 不过 repeat 插件可以解决这个问题，详细帮助见 :h surround.txt</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;tpope/vim-surround&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; Syntastic 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 用于保存文件时查检语法</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;scrooloose/syntastic&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; Tagbar 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 相对 TagList 能更好的支持面向对象</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 常规模式下输入 tb 调用插件，如果有打开 TagList 窗口则先将其关闭</span><br><span class=\"line\">Bundle <span class=\"string\">&#x27;majutsushi/tagbar&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; TagList 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 高效地浏览源码, 其功能就像vc中的workpace</span><br><span class=\"line\"><span class=\"string\">&quot; 那里面列出了当前文件中的所有宏,全局变量, 函数名等</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 常规模式下输入 tl 调用插件，如果有打开 Tagbar 窗口则先将其关闭</span><br><span class=\"line\">Bundle <span class=\"string\">&#x27;taglist.vim&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; txtbrowser 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 用于文本文件生成标签与与语法高亮（调用TagList插件生成标签，如果可以）</span><br><span class=\"line\">Bundle <span class=\"string\">&#x27;TxtBrowser&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; ZoomWin 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 用于分割窗口的最大化与还原</span><br><span class=\"line\"><span class=\"string\">&quot; 常规模式下按快捷键 &lt;c-w&gt;o 在最大化与还原间切换</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;ZoomWin&#x27;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> Go 语法高亮 https://github.com/fatih/vim-go </span><br><span class=\"line\">Bundle <span class=\"string\">&#x27;fatih/vim-go&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; Go 语法检查</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;rjohnsondev/vim-compiler-go&#x27;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> PHP DOC MAC ONLY</span><br><span class=\"line\">Bundle <span class=\"string\">&#x27;rizzatti/dash.vim&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 全文搜索（项目） 函数名</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 需要先安装 ack </span><br><span class=\"line\"><span class=\"string\">&quot; yum install ack</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;mileszs/ack.vim&#x27;</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;dyng/ctrlsf.vim&#x27;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 全局搜索 leader - t 开启</span><br><span class=\"line\">Bundle <span class=\"string\">&#x27;wincent/command-t&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; coffee-script compile</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;kchmck/vim-coffee-script&#x27;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; 编码配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 注：使用utf-8格式后，软件与程序源码、文件路径不能有中文，否则报错</span></span><br><span class=\"line\"><span class=\"string\">set encoding=utf-8                                    &quot;</span>设置gvim内部编码，默认不更改</span><br><span class=\"line\"><span class=\"built_in\">set</span> fileencoding=utf-8                                <span class=\"string\">&quot;设置当前文件编码，可以更改，如：gbk（同cp936）</span></span><br><span class=\"line\"><span class=\"string\">set fileencodings=ucs-bom,utf-8,gbk,cp936,latin-1     &quot;</span>设置支持打开的文件的编码</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 文件格式，默认 ffs=dos,unix</span></span><br><span class=\"line\"><span class=\"string\">set fileformat=unix                                   &quot;</span>设置新（当前）文件的&lt;EOL&gt;格式，可以更改，如：dos（windows系统常用）</span><br><span class=\"line\"><span class=\"built_in\">set</span> fileformats=unix,dos,mac                          <span class=\"string\">&quot;给出文件的&lt;EOL&gt;格式类型</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">if (g:iswindows &amp;&amp; g:isGUI)</span></span><br><span class=\"line\"><span class=\"string\">    &quot;</span>解决菜单乱码</span><br><span class=\"line\">    <span class=\"built_in\">source</span> <span class=\"variable\">$VIMRUNTIME</span>/delmenu.vim</span><br><span class=\"line\">    <span class=\"built_in\">source</span> <span class=\"variable\">$VIMRUNTIME</span>/menu.vim</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot;解决consle输出乱码</span></span><br><span class=\"line\"><span class=\"string\">    language messages zh_CN.utf-8</span></span><br><span class=\"line\"><span class=\"string\">endif</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; 编写文件时的配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\">filetype on                                           <span class=\"string\">&quot;启用文件类型侦测</span></span><br><span class=\"line\"><span class=\"string\">filetype plugin on                                    &quot;</span>针对不同的文件类型加载对应的插件</span><br><span class=\"line\">filetype plugin indent on                             <span class=\"string\">&quot;启用缩进</span></span><br><span class=\"line\"><span class=\"string\">set smartindent                                       &quot;</span>启用智能对齐方式</span><br><span class=\"line\"><span class=\"built_in\">set</span> expandtab                                         <span class=\"string\">&quot;将Tab键转换为空格</span></span><br><span class=\"line\"><span class=\"string\">set tabstop=4                                         &quot;</span>设置Tab键的宽度，可以更改，如：宽度为2</span><br><span class=\"line\"><span class=\"built_in\">set</span> shiftwidth=4                                      <span class=\"string\">&quot;换行时自动缩进宽度，可更改（宽度同tabstop）</span></span><br><span class=\"line\"><span class=\"string\">set smarttab                                          &quot;</span>指定按一次backspace就删除shiftwidth宽度</span><br><span class=\"line\"><span class=\"string\">&quot; set foldenable                                        &quot;</span>启用折叠</span><br><span class=\"line\"><span class=\"string\">&quot; set foldmethod=indent                                 &quot;</span>indent 折叠方式</span><br><span class=\"line\"><span class=\"string\">&quot; set foldmethod=marker                                &quot;</span>marker 折叠方式</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 常规模式下用空格键来开关光标行所在折叠（注：zR 展开所有折叠，zM 关闭所有折叠）</span></span><br><span class=\"line\"><span class=\"string\">nnoremap &lt;space&gt; @=((foldclosed(line(&#x27;.&#x27;)) &lt; 0) ? &#x27;zc&#x27; : &#x27;zo&#x27;)&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 当文件在外部被修改，自动更新该文件</span><br><span class=\"line\"><span class=\"built_in\">set</span> autoread</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 常规模式下输入 cS 清除行尾空格</span></span><br><span class=\"line\"><span class=\"string\">nmap cS :%s/\\s\\+$//g&lt;CR&gt;:noh&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 常规模式下输入 cM 清除行尾 ^M 符号</span><br><span class=\"line\">nmap cM :%s/\\r$//g&lt;CR&gt;:noh&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">set</span> ignorecase                                        <span class=\"string\">&quot;搜索模式里忽略大小写</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"built_in\">set</span> smartcase                                         <span class=\"string\">&quot;如果搜索模式包含大写字符，不使用 &#x27;ignorecase&#x27; 选项，只有在输入搜索模式并且打开 &#x27;ignorecase&#x27; 选项时才会使用</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"built_in\">set</span> noincsearch                                       <span class=\"string\">&quot;在输入要搜索的文字时，取消实时匹配</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> Ctrl + K 插入模式下光标向上移动</span><br><span class=\"line\">imap &lt;c-k&gt; &lt;Up&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; Ctrl + J 插入模式下光标向下移动</span></span><br><span class=\"line\"><span class=\"string\">imap &lt;c-j&gt; &lt;Down&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> Ctrl + H 插入模式下光标向左移动</span><br><span class=\"line\">imap &lt;c-h&gt; &lt;Left&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; Ctrl + L 插入模式下光标向右移动</span></span><br><span class=\"line\"><span class=\"string\">imap &lt;c-l&gt; &lt;Right&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 启用每行超过80列的字符提示（字体变蓝并加下划线），不启用就注释掉</span><br><span class=\"line\"><span class=\"string\">&quot; au BufWinEnter * let w:m2=matchadd(&#x27;Underlined&#x27;, &#x27;\\%&gt;&#x27; . 80 . &#x27;v.\\+&#x27;, -1)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; 界面配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"built_in\">set</span> number                                            <span class=\"string\">&quot;显示行号</span></span><br><span class=\"line\"><span class=\"string\">set laststatus=2                                      &quot;</span>启用状态栏信息</span><br><span class=\"line\"><span class=\"built_in\">set</span> cmdheight=2                                       <span class=\"string\">&quot;设置命令行的高度为2，默认为1</span></span><br><span class=\"line\"><span class=\"string\">set cursorline                                        &quot;</span>突出显示当前行</span><br><span class=\"line\"><span class=\"string\">&quot; set guifont=YaHei_Consolas_Hybrid:h10                 &quot;</span>设置字体:字号（字体名称空格用下划线代替）</span><br><span class=\"line\"><span class=\"built_in\">set</span> guifont=courier_new:h9                            <span class=\"string\">&quot;设置字体:字号（字体名称空格用下划线代替）</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"built_in\">set</span> nowrap                                            <span class=\"string\">&quot;设置不自动换行</span></span><br><span class=\"line\"><span class=\"string\">set shortmess=atI                                     &quot;</span>去掉欢迎界面</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 设置 gVim 窗口初始位置及大小</span></span><br><span class=\"line\"><span class=\"string\">if g:isGUI</span></span><br><span class=\"line\"><span class=\"string\">    set guifont=courier_new:h16                           &quot;</span>设置字体:字号（字体名称空格用下划线代替）</span><br><span class=\"line\">    <span class=\"string\">&quot; au GUIEnter * simalt ~x                           &quot;</span>窗口启动时自动最大化</span><br><span class=\"line\">    winpos 100 10                                     <span class=\"string\">&quot;指定窗口出现的位置，坐标原点在屏幕左上角</span></span><br><span class=\"line\"><span class=\"string\">    set lines=50 columns=180                          &quot;</span>指定窗口大小，lines为高度，columns为宽度</span><br><span class=\"line\">endif</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 设置代码配色方案</span></span><br><span class=\"line\"><span class=\"string\">if g:isGUI</span></span><br><span class=\"line\"><span class=\"string\">    colorscheme molokai               &quot;</span>Gvim配色方案</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    colorscheme molokai               <span class=\"string\">&quot;终端配色方案</span></span><br><span class=\"line\"><span class=\"string\">endif</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 显示/隐藏菜单栏、工具栏、滚动条，可用 Ctrl + F11 切换</span><br><span class=\"line\"><span class=\"keyword\">if</span> g:isGUI</span><br><span class=\"line\">    <span class=\"built_in\">set</span> guioptions-=m</span><br><span class=\"line\">    <span class=\"built_in\">set</span> guioptions-=T</span><br><span class=\"line\">    <span class=\"built_in\">set</span> guioptions-=r</span><br><span class=\"line\">    <span class=\"built_in\">set</span> guioptions-=L</span><br><span class=\"line\">    nmap &lt;silent&gt; &lt;c-F11&gt; :<span class=\"keyword\">if</span> &amp;guioptions =~<span class=\"comment\"># &#x27;m&#x27; &lt;Bar&gt;</span></span><br><span class=\"line\">        \\<span class=\"built_in\">set</span> guioptions-=m &lt;Bar&gt;</span><br><span class=\"line\">        \\<span class=\"built_in\">set</span> guioptions-=T &lt;Bar&gt;</span><br><span class=\"line\">        \\<span class=\"built_in\">set</span> guioptions-=r &lt;Bar&gt;</span><br><span class=\"line\">        \\<span class=\"built_in\">set</span> guioptions-=L &lt;Bar&gt;</span><br><span class=\"line\">    \\<span class=\"keyword\">else</span> &lt;Bar&gt;</span><br><span class=\"line\">        \\<span class=\"built_in\">set</span> guioptions+=m &lt;Bar&gt;</span><br><span class=\"line\">        \\<span class=\"built_in\">set</span> guioptions+=T &lt;Bar&gt;</span><br><span class=\"line\">        \\<span class=\"built_in\">set</span> guioptions+=r &lt;Bar&gt;</span><br><span class=\"line\">        \\<span class=\"built_in\">set</span> guioptions+=L &lt;Bar&gt;</span><br><span class=\"line\">    \\endif&lt;CR&gt;</span><br><span class=\"line\">endif</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; 编译、连接、运行配置 (目前只配置了C、C++、Java语言)&gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> F9 一键保存、编译、连接存并运行</span><br><span class=\"line\">nmap &lt;F9&gt; :call Run()&lt;CR&gt;</span><br><span class=\"line\">imap &lt;F9&gt; &lt;ESC&gt;:call Run()&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; Ctrl + F9 一键保存并编译</span></span><br><span class=\"line\"><span class=\"string\">nmap &lt;c-F9&gt; :call Compile()&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">imap &lt;c-F9&gt; &lt;ESC&gt;:call Compile()&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> Ctrl + F10 一键保存并连接</span><br><span class=\"line\">nmap &lt;c-F10&gt; :call Link()&lt;CR&gt;</span><br><span class=\"line\">imap &lt;c-F10&gt; &lt;ESC&gt;:call Link()&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">let</span> s:LastShellReturn_C = 0</span><br><span class=\"line\"><span class=\"built_in\">let</span> s:LastShellReturn_L = 0</span><br><span class=\"line\"><span class=\"built_in\">let</span> s:ShowWarning = 1</span><br><span class=\"line\"><span class=\"built_in\">let</span> s:Obj_Extension = <span class=\"string\">&#x27;.o&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">let</span> s:Exe_Extension = <span class=\"string\">&#x27;.exe&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">let</span> s:Class_Extension = <span class=\"string\">&#x27;.class&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">let</span> s:Sou_Error = 0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">let</span> s:windows_CFlags = <span class=\"string\">&#x27;gcc\\ -fexec-charset=gbk\\ -Wall\\ -g\\ -O0\\ -c\\ %\\ -o\\ %&lt;.o&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">let</span> s:linux_CFlags = <span class=\"string\">&#x27;gcc\\ -Wall\\ -g\\ -O0\\ -c\\ %\\ -o\\ %&lt;.o&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">let</span> s:windows_CPPFlags = <span class=\"string\">&#x27;g++\\ -fexec-charset=gbk\\ -Wall\\ -g\\ -O0\\ -c\\ %\\ -o\\ %&lt;.o&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">let</span> s:linux_CPPFlags = <span class=\"string\">&#x27;g++\\ -Wall\\ -g\\ -O0\\ -c\\ %\\ -o\\ %&lt;.o&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">let</span> s:JavaFlags = <span class=\"string\">&#x27;javac\\ %&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">func! Compile()</span><br><span class=\"line\">    exe <span class=\"string\">&quot;:ccl&quot;</span></span><br><span class=\"line\">    exe <span class=\"string\">&quot;:update&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">let</span> s:Sou_Error = 0</span><br><span class=\"line\">    <span class=\"built_in\">let</span> s:LastShellReturn_C = 0</span><br><span class=\"line\">    <span class=\"built_in\">let</span> Sou = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">let</span> v:statusmsg = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;c&quot;</span> || <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;cpp&quot;</span> || <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;cxx&quot;</span></span><br><span class=\"line\">        <span class=\"built_in\">let</span> Obj = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p:r&quot;</span>).s:Obj_Extension</span><br><span class=\"line\">        <span class=\"built_in\">let</span> Obj_Name = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p:t:r&quot;</span>).s:Obj_Extension</span><br><span class=\"line\">        <span class=\"keyword\">if</span> !filereadable(Obj) || (filereadable(Obj) &amp;&amp; (getftime(Obj) &lt; getftime(Sou)))</span><br><span class=\"line\">            redraw!</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;c&quot;</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> g:iswindows</span><br><span class=\"line\">                    exe <span class=\"string\">&quot;:setlocal makeprg=&quot;</span>.s:windows_CFlags</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    exe <span class=\"string\">&quot;:setlocal makeprg=&quot;</span>.s:linux_CFlags</span><br><span class=\"line\">                endif</span><br><span class=\"line\">                echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; compiling...&quot;</span></span><br><span class=\"line\">                silent make</span><br><span class=\"line\">            elseif <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;cpp&quot;</span> || <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;cxx&quot;</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> g:iswindows</span><br><span class=\"line\">                    exe <span class=\"string\">&quot;:setlocal makeprg=&quot;</span>.s:windows_CPPFlags</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    exe <span class=\"string\">&quot;:setlocal makeprg=&quot;</span>.s:linux_CPPFlags</span><br><span class=\"line\">                endif</span><br><span class=\"line\">                echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; compiling...&quot;</span></span><br><span class=\"line\">                silent make</span><br><span class=\"line\">            endif</span><br><span class=\"line\">            redraw!</span><br><span class=\"line\">            <span class=\"keyword\">if</span> v:shell_error != 0</span><br><span class=\"line\">                <span class=\"built_in\">let</span> s:LastShellReturn_C = v:shell_error</span><br><span class=\"line\">            endif</span><br><span class=\"line\">            <span class=\"keyword\">if</span> g:iswindows</span><br><span class=\"line\">                <span class=\"keyword\">if</span> s:LastShellReturn_C != 0</span><br><span class=\"line\">                    exe <span class=\"string\">&quot;:bo cope&quot;</span></span><br><span class=\"line\">                    echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; compilation failed&quot;</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> s:ShowWarning</span><br><span class=\"line\">                        exe <span class=\"string\">&quot;:bo cw&quot;</span></span><br><span class=\"line\">                    endif</span><br><span class=\"line\">                    echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; compilation successful&quot;</span></span><br><span class=\"line\">                endif</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> empty(v:statusmsg)</span><br><span class=\"line\">                    echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; compilation successful&quot;</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    exe <span class=\"string\">&quot;:bo cope&quot;</span></span><br><span class=\"line\">                endif</span><br><span class=\"line\">            endif</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot;&quot;</span>Obj_Name<span class=\"string\">&quot;is up to date&quot;</span></span><br><span class=\"line\">        endif</span><br><span class=\"line\">    elseif <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;java&quot;</span></span><br><span class=\"line\">        <span class=\"built_in\">let</span> class = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p:r&quot;</span>).s:Class_Extension</span><br><span class=\"line\">        <span class=\"built_in\">let</span> class_Name = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p:t:r&quot;</span>).s:Class_Extension</span><br><span class=\"line\">        <span class=\"keyword\">if</span> !filereadable(class) || (filereadable(class) &amp;&amp; (getftime(class) &lt; getftime(Sou)))</span><br><span class=\"line\">            redraw!</span><br><span class=\"line\">            exe <span class=\"string\">&quot;:setlocal makeprg=&quot;</span>.s:JavaFlags</span><br><span class=\"line\">            echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; compiling...&quot;</span></span><br><span class=\"line\">            silent make</span><br><span class=\"line\">            redraw!</span><br><span class=\"line\">            <span class=\"keyword\">if</span> v:shell_error != 0</span><br><span class=\"line\">                <span class=\"built_in\">let</span> s:LastShellReturn_C = v:shell_error</span><br><span class=\"line\">            endif</span><br><span class=\"line\">            <span class=\"keyword\">if</span> g:iswindows</span><br><span class=\"line\">                <span class=\"keyword\">if</span> s:LastShellReturn_C != 0</span><br><span class=\"line\">                    exe <span class=\"string\">&quot;:bo cope&quot;</span></span><br><span class=\"line\">                    echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; compilation failed&quot;</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> s:ShowWarning</span><br><span class=\"line\">                        exe <span class=\"string\">&quot;:bo cw&quot;</span></span><br><span class=\"line\">                    endif</span><br><span class=\"line\">                    echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; compilation successful&quot;</span></span><br><span class=\"line\">                endif</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> empty(v:statusmsg)</span><br><span class=\"line\">                    echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; compilation successful&quot;</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    exe <span class=\"string\">&quot;:bo cope&quot;</span></span><br><span class=\"line\">                endif</span><br><span class=\"line\">            endif</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot;&quot;</span>class_Name<span class=\"string\">&quot;is up to date&quot;</span></span><br><span class=\"line\">        endif</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">let</span> s:Sou_Error = 1</span><br><span class=\"line\">        echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; please choose the correct source file&quot;</span></span><br><span class=\"line\">    endif</span><br><span class=\"line\">    exe <span class=\"string\">&quot;:setlocal makeprg=make&quot;</span></span><br><span class=\"line\">endfunc</span><br><span class=\"line\"></span><br><span class=\"line\">func! Link()</span><br><span class=\"line\">    call Compile()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> s:Sou_Error || s:LastShellReturn_C != 0</span><br><span class=\"line\">        <span class=\"built_in\">return</span></span><br><span class=\"line\">    endif</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;c&quot;</span> || <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;cpp&quot;</span> || <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;cxx&quot;</span></span><br><span class=\"line\">        <span class=\"built_in\">let</span> s:LastShellReturn_L = 0</span><br><span class=\"line\">        <span class=\"built_in\">let</span> Sou = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p&quot;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">let</span> Obj = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p:r&quot;</span>).s:Obj_Extension</span><br><span class=\"line\">        <span class=\"keyword\">if</span> g:iswindows</span><br><span class=\"line\">            <span class=\"built_in\">let</span> Exe = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p:r&quot;</span>).s:Exe_Extension</span><br><span class=\"line\">            <span class=\"built_in\">let</span> Exe_Name = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p:t:r&quot;</span>).s:Exe_Extension</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"built_in\">let</span> Exe = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p:r&quot;</span>)</span><br><span class=\"line\">            <span class=\"built_in\">let</span> Exe_Name = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p:t:r&quot;</span>)</span><br><span class=\"line\">        endif</span><br><span class=\"line\">        <span class=\"built_in\">let</span> v:statusmsg = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> filereadable(Obj) &amp;&amp; (getftime(Obj) &gt;= getftime(Sou))</span><br><span class=\"line\">            redraw!</span><br><span class=\"line\">            <span class=\"keyword\">if</span> !executable(Exe) || (executable(Exe) &amp;&amp; getftime(Exe) &lt; getftime(Obj))</span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;c&quot;</span></span><br><span class=\"line\">                    setlocal makeprg=gcc\\ -o\\ %&lt;\\ %&lt;.o</span><br><span class=\"line\">                    echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; linking...&quot;</span></span><br><span class=\"line\">                    silent make</span><br><span class=\"line\">                elseif <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;cpp&quot;</span> || <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;cxx&quot;</span></span><br><span class=\"line\">                    setlocal makeprg=g++\\ -o\\ %&lt;\\ %&lt;.o</span><br><span class=\"line\">                    echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; linking...&quot;</span></span><br><span class=\"line\">                    silent make</span><br><span class=\"line\">                endif</span><br><span class=\"line\">                redraw!</span><br><span class=\"line\">                <span class=\"keyword\">if</span> v:shell_error != 0</span><br><span class=\"line\">                    <span class=\"built_in\">let</span> s:LastShellReturn_L = v:shell_error</span><br><span class=\"line\">                endif</span><br><span class=\"line\">                <span class=\"keyword\">if</span> g:iswindows</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> s:LastShellReturn_L != 0</span><br><span class=\"line\">                        exe <span class=\"string\">&quot;:bo cope&quot;</span></span><br><span class=\"line\">                        echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; linking failed&quot;</span></span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> s:ShowWarning</span><br><span class=\"line\">                            exe <span class=\"string\">&quot;:bo cw&quot;</span></span><br><span class=\"line\">                        endif</span><br><span class=\"line\">                        echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; linking successful&quot;</span></span><br><span class=\"line\">                    endif</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> empty(v:statusmsg)</span><br><span class=\"line\">                        echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; linking successful&quot;</span></span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                        exe <span class=\"string\">&quot;:bo cope&quot;</span></span><br><span class=\"line\">                    endif</span><br><span class=\"line\">                endif</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot;&quot;</span>Exe_Name<span class=\"string\">&quot;is up to date&quot;</span></span><br><span class=\"line\">            endif</span><br><span class=\"line\">        endif</span><br><span class=\"line\">        setlocal makeprg=make</span><br><span class=\"line\">    elseif <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;java&quot;</span></span><br><span class=\"line\">        <span class=\"built_in\">return</span></span><br><span class=\"line\">    endif</span><br><span class=\"line\">endfunc</span><br><span class=\"line\"></span><br><span class=\"line\">func! Run()</span><br><span class=\"line\">    <span class=\"built_in\">let</span> s:ShowWarning = 0</span><br><span class=\"line\">    call Link()</span><br><span class=\"line\">    <span class=\"built_in\">let</span> s:ShowWarning = 1</span><br><span class=\"line\">    <span class=\"keyword\">if</span> s:Sou_Error || s:LastShellReturn_C != 0 || s:LastShellReturn_L != 0</span><br><span class=\"line\">        <span class=\"built_in\">return</span></span><br><span class=\"line\">    endif</span><br><span class=\"line\">    <span class=\"built_in\">let</span> Sou = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;c&quot;</span> || <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;cpp&quot;</span> || <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;cxx&quot;</span></span><br><span class=\"line\">        <span class=\"built_in\">let</span> Obj = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p:r&quot;</span>).s:Obj_Extension</span><br><span class=\"line\">        <span class=\"keyword\">if</span> g:iswindows</span><br><span class=\"line\">            <span class=\"built_in\">let</span> Exe = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p:r&quot;</span>).s:Exe_Extension</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"built_in\">let</span> Exe = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p:r&quot;</span>)</span><br><span class=\"line\">        endif</span><br><span class=\"line\">        <span class=\"keyword\">if</span> executable(Exe) &amp;&amp; getftime(Exe) &gt;= getftime(Obj) &amp;&amp; getftime(Obj) &gt;= getftime(Sou)</span><br><span class=\"line\">            redraw!</span><br><span class=\"line\">            echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; running...&quot;</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> g:iswindows</span><br><span class=\"line\">                exe <span class=\"string\">&quot;:!%&lt;.exe&quot;</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> g:isGUI</span><br><span class=\"line\">                    exe <span class=\"string\">&quot;:!gnome-terminal -x bash -c &#x27;./%&lt;; echo; echo 请按 Enter 键继续; read&#x27;&quot;</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    exe <span class=\"string\">&quot;:!clear; ./%&lt;&quot;</span></span><br><span class=\"line\">                endif</span><br><span class=\"line\">            endif</span><br><span class=\"line\">            redraw!</span><br><span class=\"line\">            echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; running finish&quot;</span></span><br><span class=\"line\">        endif</span><br><span class=\"line\">    elseif <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;java&quot;</span></span><br><span class=\"line\">        <span class=\"built_in\">let</span> class = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p:r&quot;</span>).s:Class_Extension</span><br><span class=\"line\">        <span class=\"keyword\">if</span> getftime(class) &gt;= getftime(Sou)</span><br><span class=\"line\">            redraw!</span><br><span class=\"line\">            echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; running...&quot;</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> g:iswindows</span><br><span class=\"line\">                exe <span class=\"string\">&quot;:!java %&lt;&quot;</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> g:isGUI</span><br><span class=\"line\">                    exe <span class=\"string\">&quot;:!gnome-terminal -x bash -c &#x27;java %&lt;; echo; echo 请按 Enter 键继续; read&#x27;&quot;</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    exe <span class=\"string\">&quot;:!clear; java %&lt;&quot;</span></span><br><span class=\"line\">                endif</span><br><span class=\"line\">            endif</span><br><span class=\"line\">            redraw!</span><br><span class=\"line\">            echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; running finish&quot;</span></span><br><span class=\"line\">        endif</span><br><span class=\"line\">    endif</span><br><span class=\"line\">endfunc</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; 其它配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">set writebackup                             &quot;</span>保存文件前建立备份，保存成功后删除该备份</span><br><span class=\"line\"><span class=\"built_in\">set</span> nobackup                                <span class=\"string\">&quot;设置无备份文件</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"built_in\">set</span> noswapfile                              <span class=\"string\">&quot;设置无临时文件</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"built_in\">set</span> vb t_vb=                                <span class=\"string\">&quot;关闭提示音</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> =============================================================================</span><br><span class=\"line\"><span class=\"string\">&quot;                          &lt;&lt; 以下为常用插件配置 &gt;&gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> =============================================================================</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; a.vim 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 用于切换C/C++头文件</span><br><span class=\"line\"><span class=\"string\">&quot; :A     ---切换头文件并独占整个窗口</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> :AV    ---切换头文件并垂直分割窗口</span><br><span class=\"line\"><span class=\"string\">&quot; :AS    ---切换头文件并水平分割窗口</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; BufExplorer 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 快速轻松的在缓存中切换（相当于另一种多个文件间的切换方式）</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> &lt;Leader&gt;be 在当前窗口显示缓存列表并打开选定文件</span><br><span class=\"line\"><span class=\"string\">&quot; &lt;Leader&gt;bs 水平分割窗口显示缓存列表，并在缓存列表窗口中打开选定文件</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> &lt;Leader&gt;bv 垂直分割窗口显示缓存列表，并在缓存列表窗口中打开选定文件</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; ccvext.vim 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 用于对指定文件自动生成tags与cscope文件并连接</span><br><span class=\"line\"><span class=\"string\">&quot; 如果是Windows系统, 则生成的文件在源文件所在盘符根目录的.symbs目录下(如: X:\\.symbs\\)</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 如果是Linux系统, 则生成的文件在~/.symbs/目录下</span><br><span class=\"line\"><span class=\"string\">&quot; 具体用法可参考www.vim.org中此插件的说明</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> &lt;Leader&gt;sy 自动生成tags与cscope文件并连接</span><br><span class=\"line\"><span class=\"string\">&quot; &lt;Leader&gt;sc 连接已存在的tags与cscope文件</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; cSyntaxAfter 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 高亮括号与运算符等</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> au! BufRead,BufNewFile,BufEnter *.&#123;c,cpp,h,java,javascript&#125; call CSyntaxAfter()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; indentLine 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 用于显示对齐线，与 indent_guides 在显示方式上不同，根据自己喜好选择了</span><br><span class=\"line\"><span class=\"string\">&quot; 在终端上会有屏幕刷新的问题，这个问题能解决有更好了</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 开启/关闭对齐线</span><br><span class=\"line\">nmap &lt;leader&gt;il :IndentLinesToggle&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 设置Gvim的对齐线样式</span></span><br><span class=\"line\"><span class=\"string\">if g:isGUI</span></span><br><span class=\"line\"><span class=\"string\">    let g:indentLine_char = &quot;</span>┊<span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">    let g:indentLine_first_char = &quot;</span>┊<span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">endif</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 设置终端对齐线颜色，如果不喜欢可以将其注释掉采用默认颜色</span><br><span class=\"line\"><span class=\"built_in\">let</span> g:indentLine_color_term = 239</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 设置 GUI 对齐线颜色，如果不喜欢可以将其注释掉采用默认颜色</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"built_in\">let</span> g:indentLine_color_gui = <span class=\"string\">&#x27;#A4E57E&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; &quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; &quot;</span>  &lt; MiniBufExplorer 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; &quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; &quot;</span> 快速浏览和操作Buffer</span><br><span class=\"line\"><span class=\"string\">&quot; &quot;</span> 主要用于同时打开多个文件并相与切换</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; &quot;</span> <span class=\"built_in\">let</span> g:miniBufExplMapWindowNavArrows = 1     <span class=\"string\">&quot;用Ctrl加方向键切换到上下左右的窗口中去</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"built_in\">let</span> g:miniBufExplMapWindowNavVim = 1        <span class=\"string\">&quot;用&lt;C-k,j,h,l&gt;切换到上下左右的窗口中去</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"built_in\">let</span> g:miniBufExplMapCTabSwitchBufs = 1      <span class=\"string\">&quot;功能增强（不过好像只有在Windows中才有用）</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"string\">&quot;                                            &lt;C-Tab&gt; 向前循环切换到每个buffer上,并在但前窗口打开</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"string\">&quot;                                            &lt;C-S-Tab&gt; 向后循环切换到每个buffer上,并在当前窗口打开</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 在不使用 MiniBufExplorer 插件时也可用&lt;C-k,j,h,l&gt;切换到上下左右的窗口中去</span><br><span class=\"line\">noremap &lt;c-k&gt; &lt;c-w&gt;k</span><br><span class=\"line\">noremap &lt;c-j&gt; &lt;c-w&gt;j</span><br><span class=\"line\">noremap &lt;c-h&gt; &lt;c-w&gt;h</span><br><span class=\"line\">noremap &lt;c-l&gt; &lt;c-w&gt;l</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; neocomplcache 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 关键字补全、文件路径补全、tag补全等等，各种，非常好用，速度超快。</span><br><span class=\"line\"><span class=\"built_in\">let</span> g:neocomplcache_enable_at_startup = 1     <span class=\"string\">&quot;vim 启动时启用插件</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"built_in\">let</span> g:neocomplcache_disable_auto_complete = 1 <span class=\"string\">&quot;不自动弹出补全列表</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 在弹出补全列表后用 &lt;c-p&gt; 或 &lt;c-n&gt; 进行上下选择效果比较好</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; nerdcommenter 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 我主要用于C/C++代码注释(其它的也行)</span><br><span class=\"line\"><span class=\"string\">&quot; 以下为插件默认快捷键，其中的说明是以C/C++为例的，其它语言类似</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> &lt;Leader&gt;ci 以每行一个 /* */ 注释选中行(选中区域所在行)，再输入则取消注释</span><br><span class=\"line\"><span class=\"string\">&quot; &lt;Leader&gt;cm 以一个 /* */ 注释选中行(选中区域所在行)，再输入则称重复注释</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> &lt;Leader&gt;cc 以每行一个 /* */ 注释选中行或区域，再输入则称重复注释</span><br><span class=\"line\"><span class=\"string\">&quot; &lt;Leader&gt;cu 取消选中区域(行)的注释，选中区域(行)内至少有一个 /* */</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> &lt;Leader&gt;ca 在/*...*/与//这两种注释方式中切换（其它语言可能不一样了）</span><br><span class=\"line\"><span class=\"string\">&quot; &lt;Leader&gt;cA 行尾注释</span></span><br><span class=\"line\"><span class=\"string\">let NERDSpaceDelims = 1                     &quot;</span>在左注释符之后，右注释符之前留有空格</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; nerdtree 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 有目录村结构的文件浏览插件</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 常规模式下输入 F2 调用插件</span></span><br><span class=\"line\"><span class=\"string\">nmap &lt;F2&gt; :NERDTreeToggle&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; omnicppcomplete 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 用于C/C++代码补全，这种补全主要针对命名空间、类、结构、共同体等进行补全，详细</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 说明可以参考帮助或网络教程等</span><br><span class=\"line\"><span class=\"string\">&quot; 使用前先执行如下 ctags 命令（本配置中可以直接使用 ccvext 插件来执行以下命令）</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> ctags -R --c++-kinds=+p --fields=+iaS --extra=+q</span><br><span class=\"line\"><span class=\"string\">&quot; 我使用上面的参数生成标签后，对函数使用跳转时会出现多个选择</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 所以我就将--c++-kinds=+p参数给去掉了，如果大侠有什么其它解决方法希望不要保留呀</span><br><span class=\"line\"><span class=\"built_in\">set</span> completeopt=menu                        <span class=\"string\">&quot;关闭预览窗口</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 函数名全局搜索 F3</span><br><span class=\"line\">nmap &lt;F3&gt; &lt;ESC&gt;:CtrlSF &lt;c-r&gt;&lt;c-w&gt;&lt;CR&gt; </span><br><span class=\"line\">nmap &lt;C-F3&gt; &lt;ESC&gt;:CtrlSFOpen&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; SrcExpl 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 增强源代码浏览，其功能就像Windows中的<span class=\"string\">&quot;Source Insight&quot;</span></span><br><span class=\"line\">nmap &lt;F4&gt; :SrcExplToggle&lt;CR&gt;                <span class=\"string\">&quot;打开/闭浏览窗口</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> // Set the height of Source Explorer window</span><br><span class=\"line\"><span class=\"built_in\">let</span> g:SrcExpl_winHeight = 8</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; // Set 100 ms for refreshing the Source Explorer</span></span><br><span class=\"line\"><span class=\"string\">let g:SrcExpl_refreshTime = 100</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> // In order to Avoid conflicts, the Source Explorer should know what plugins</span><br><span class=\"line\"><span class=\"string\">&quot; // are using buffers. And you need add their bufname into the list below</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> // according to the <span class=\"built_in\">command</span> <span class=\"string\">&quot;:buffers!&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">let</span> g:SrcExpl_pluginList = [</span><br><span class=\"line\">        \\ <span class=\"string\">&quot;__Tag_List__&quot;</span>,</span><br><span class=\"line\">        \\ <span class=\"string\">&quot;_NERD_tree_&quot;</span>,</span><br><span class=\"line\">        \\ <span class=\"string\">&quot;Source_Explorer&quot;</span></span><br><span class=\"line\">    \\ ]</span><br><span class=\"line\"><span class=\"string\">&quot; // Do not let the Source Explorer update the tags file when opening          &quot;</span></span><br><span class=\"line\"><span class=\"built_in\">let</span> g:SrcExpl_isUpdateTags = 0</span><br><span class=\"line\"><span class=\"string\">&quot; // Enable/Disable the local definition searching, and note that this is not  &quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot; // guaranteed to work, the Source Explorer doesn&#x27;t check the syntax for now. &quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot; // It only searches for a match with the keyword according to command &#x27;gd&#x27;   &quot;</span></span><br><span class=\"line\"><span class=\"built_in\">let</span> g:SrcExpl_searchLocalDef = 1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 启用 // 注视风格</span></span><br><span class=\"line\"><span class=\"string\">let c_cpp_comments = 0</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; Tagbar 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 相对 TagList 能更好的支持面向对象</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 常规模式下输入 tb 调用插件，如果有打开 TagList 窗口则先将其关闭</span><br><span class=\"line\">nmap tb :TlistClose&lt;CR&gt;:TagbarToggle&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">let</span> g:tagbar_width=30                       <span class=\"string\">&quot;设置窗口宽度</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"built_in\">let</span> g:tagbar_left=1                         <span class=\"string\">&quot;在左侧窗口中显示</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; TagList 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 高效地浏览源码, 其功能就像vc中的workpace</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 那里面列出了当前文件中的所有宏,全局变量, 函数名等</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 常规模式下输入 tl 调用插件，如果有打开 Tagbar 窗口则先将其关闭</span></span><br><span class=\"line\"><span class=\"string\">nmap tl :TagbarClose&lt;CR&gt;:Tlist&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">let Tlist_Show_One_File=1                   &quot;</span>只显示当前文件的tags</span><br><span class=\"line\"><span class=\"string\">&quot; let Tlist_Enable_Fold_Column=0              &quot;</span>使taglist插件不显示左边的折叠行</span><br><span class=\"line\"><span class=\"built_in\">let</span> Tlist_Exit_OnlyWindow=1                <span class=\"string\">&quot;如果Taglist窗口是最后一个窗口则退出Vim</span></span><br><span class=\"line\"><span class=\"string\">let Tlist_File_Fold_Auto_Close=1            &quot;</span>自动折叠</span><br><span class=\"line\"><span class=\"built_in\">let</span> Tlist_WinWidth=30                       <span class=\"string\">&quot;设置窗口宽度</span></span><br><span class=\"line\"><span class=\"string\">let Tlist_Use_Right_Window=1                &quot;</span>在右侧窗口中显示</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; txtbrowser 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 用于文本文件生成标签与与语法高亮（调用TagList插件生成标签，如果可以）</span><br><span class=\"line\">au BufRead,BufNewFile *.txt setlocal ft=txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; \\ r 快速执行GO</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> au FileType go nmap &lt;leader&gt;r &lt;Plug&gt;(go-run)</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> &lt;rjohnsondev/vim-compiler-go&gt;</span><br><span class=\"line\"><span class=\"string\">&quot; 语法检查  Go 路径</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\">autocmd FileType go compiler golang</span><br><span class=\"line\"><span class=\"built_in\">let</span> g:golang_goroot = <span class=\"string\">&quot;/usr/local/go&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; compile coffee on write</span></span><br><span class=\"line\"><span class=\"string\">let coffee_compile_vert = 1</span></span><br><span class=\"line\"><span class=\"string\">au BufWritePost *.coffee silent execute &#x27;CoffeeMake! -o&#x27;.expand(&#x27;&lt;afile&gt;:p:h&#x27;).&#x27;./&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> auto compile on save</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; =============================================================================</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>                          &lt;&lt; 以下为常用工具配置 &gt;&gt;</span><br><span class=\"line\"><span class=\"string\">&quot; =============================================================================</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; cscope 工具配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 用Cscope自己的话说 - &quot;</span>你可以把它当做是超过频的ctags<span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">if has(&quot;</span>cscope<span class=\"string\">&quot;)</span></span><br><span class=\"line\"><span class=\"string\">    &quot;</span>设定可以使用 quickfix 窗口来查看 cscope 结果</span><br><span class=\"line\">    <span class=\"built_in\">set</span> cscopequickfix=s-,c-,d-,i-,t-,e-</span><br><span class=\"line\">    <span class=\"string\">&quot;使支持用 Ctrl+]  和 Ctrl+t 快捷键在代码间跳转</span></span><br><span class=\"line\"><span class=\"string\">    set cscopetag</span></span><br><span class=\"line\"><span class=\"string\">    &quot;</span>如果你想反向搜索顺序设置为1</span><br><span class=\"line\">    <span class=\"built_in\">set</span> csto=0</span><br><span class=\"line\">    <span class=\"string\">&quot;在当前目录中添加任何数据库</span></span><br><span class=\"line\"><span class=\"string\">    if filereadable(&quot;</span>cscope.out<span class=\"string\">&quot;)</span></span><br><span class=\"line\"><span class=\"string\">        cs add cscope.out</span></span><br><span class=\"line\"><span class=\"string\">    &quot;</span>否则添加数据库环境中所指出的</span><br><span class=\"line\">    elseif <span class=\"variable\">$CSCOPE_DB</span> != <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">        cs add <span class=\"variable\">$CSCOPE_DB</span></span><br><span class=\"line\">    endif</span><br><span class=\"line\">    <span class=\"built_in\">set</span> cscopeverbose</span><br><span class=\"line\">    <span class=\"string\">&quot;快捷键设置</span></span><br><span class=\"line\"><span class=\"string\">    nmap &lt;C-\\&gt;s :cs find s &lt;C-R&gt;=expand(&quot;</span>&lt;cword&gt;<span class=\"string\">&quot;)&lt;CR&gt;&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">    nmap &lt;C-\\&gt;g :cs find g &lt;C-R&gt;=expand(&quot;</span>&lt;cword&gt;<span class=\"string\">&quot;)&lt;CR&gt;&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">    nmap &lt;C-\\&gt;c :cs find c &lt;C-R&gt;=expand(&quot;</span>&lt;cword&gt;<span class=\"string\">&quot;)&lt;CR&gt;&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">    nmap &lt;C-\\&gt;t :cs find t &lt;C-R&gt;=expand(&quot;</span>&lt;cword&gt;<span class=\"string\">&quot;)&lt;CR&gt;&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">    nmap &lt;C-\\&gt;e :cs find e &lt;C-R&gt;=expand(&quot;</span>&lt;cword&gt;<span class=\"string\">&quot;)&lt;CR&gt;&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">    nmap &lt;C-\\&gt;f :cs find f &lt;C-R&gt;=expand(&quot;</span>&lt;cfile&gt;<span class=\"string\">&quot;)&lt;CR&gt;&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">    nmap &lt;C-\\&gt;i :cs find i ^&lt;C-R&gt;=expand(&quot;</span>&lt;cfile&gt;<span class=\"string\">&quot;)&lt;CR&gt;$&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">    nmap &lt;C-\\&gt;d :cs find d &lt;C-R&gt;=expand(&quot;</span>&lt;cword&gt;<span class=\"string\">&quot;)&lt;CR&gt;&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">endif</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; ctags 工具配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 对浏览代码非常的方便,可以在函数,变量之间跳转等</span></span><br><span class=\"line\"><span class=\"string\">set tags=./tags;                            &quot;</span>向上级目录递归查找tags文件（好像只有在Windows下才有用）</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; gvimfullscreen 工具配置 &gt; 请确保已安装了工具</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 用于 Windows Gvim 全屏窗口，可用 F11 切换</span><br><span class=\"line\"><span class=\"string\">&quot; 全屏后再隐藏菜单栏、工具栏、滚动条效果更好</span></span><br><span class=\"line\"><span class=\"string\">if (g:iswindows &amp;&amp; g:isGUI)</span></span><br><span class=\"line\"><span class=\"string\">    nmap &lt;F11&gt; &lt;Esc&gt;:call libcallnr(&quot;</span>gvimfullscreen.dll<span class=\"string\">&quot;, &quot;</span>ToggleFullScreen<span class=\"string\">&quot;, 0)&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">endif</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; vimtweak 工具配置 &gt; 请确保以已装了工具</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 这里只用于窗口透明与置顶</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 常规模式下 Ctrl + Up（上方向键） 增加不透明度，Ctrl + Down（下方向键） 减少不透明度，&lt;Leader&gt;t 窗口置顶与否切换</span><br><span class=\"line\"><span class=\"keyword\">if</span> (g:iswindows &amp;&amp; g:isGUI)</span><br><span class=\"line\">    <span class=\"built_in\">let</span> g:Current_Alpha = 255</span><br><span class=\"line\">    <span class=\"built_in\">let</span> g:Top_Most = 0</span><br><span class=\"line\">    func! Alpha_add()</span><br><span class=\"line\">        <span class=\"built_in\">let</span> g:Current_Alpha = g:Current_Alpha + 10</span><br><span class=\"line\">        <span class=\"keyword\">if</span> g:Current_Alpha &gt; 255</span><br><span class=\"line\">            <span class=\"built_in\">let</span> g:Current_Alpha = 255</span><br><span class=\"line\">        endif</span><br><span class=\"line\">        call libcallnr(<span class=\"string\">&quot;vimtweak.dll&quot;</span>,<span class=\"string\">&quot;SetAlpha&quot;</span>,g:Current_Alpha)</span><br><span class=\"line\">    endfunc</span><br><span class=\"line\">    func! Alpha_sub()</span><br><span class=\"line\">        <span class=\"built_in\">let</span> g:Current_Alpha = g:Current_Alpha - 10</span><br><span class=\"line\">        <span class=\"keyword\">if</span> g:Current_Alpha &lt; 155</span><br><span class=\"line\">            <span class=\"built_in\">let</span> g:Current_Alpha = 155</span><br><span class=\"line\">        endif</span><br><span class=\"line\">        call libcallnr(<span class=\"string\">&quot;vimtweak.dll&quot;</span>,<span class=\"string\">&quot;SetAlpha&quot;</span>,g:Current_Alpha)</span><br><span class=\"line\">    endfunc</span><br><span class=\"line\">    func! Top_window()</span><br><span class=\"line\">        <span class=\"keyword\">if</span>  g:Top_Most == 0</span><br><span class=\"line\">            call libcallnr(<span class=\"string\">&quot;vimtweak.dll&quot;</span>,<span class=\"string\">&quot;EnableTopMost&quot;</span>,1)</span><br><span class=\"line\">            <span class=\"built_in\">let</span> g:Top_Most = 1</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            call libcallnr(<span class=\"string\">&quot;vimtweak.dll&quot;</span>,<span class=\"string\">&quot;EnableTopMost&quot;</span>,0)</span><br><span class=\"line\">            <span class=\"built_in\">let</span> g:Top_Most = 0</span><br><span class=\"line\">        endif</span><br><span class=\"line\">    endfunc</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot;快捷键设置</span></span><br><span class=\"line\"><span class=\"string\">    nmap &lt;c-up&gt; :call Alpha_add()&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">    nmap &lt;c-down&gt; :call Alpha_sub()&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">    nmap &lt;leader&gt;t :call Top_window()&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">endif</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> =============================================================================</span><br><span class=\"line\"><span class=\"string\">&quot;                          &lt;&lt; 以下为常用自动命令配置 &gt;&gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> =============================================================================</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 自动切换目录为当前编辑文件所在目录</span></span><br><span class=\"line\"><span class=\"string\">au BufRead,BufNewFile,BufEnter * cd %:p:h</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> =============================================================================</span><br><span class=\"line\"><span class=\"string\">&quot;                     &lt;&lt; windows 下解决 Quickfix 乱码问题 &gt;&gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> =============================================================================</span><br><span class=\"line\"><span class=\"string\">&quot; windows 默认编码为 cp936，而 Gvim(Vim) 内部编码为 utf-8，所以常常输出为乱码</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 以下代码可以将编码为 cp936 的输出信息转换为 utf-8 编码，以解决输出乱码问题</span><br><span class=\"line\"><span class=\"string\">&quot; 但好像只对输出信息全部为中文才有满意的效果，如果输出信息是中英混合的，那可能</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 不成功，会造成其中一种语言乱码，输出信息全部为英文的好像不会乱码</span><br><span class=\"line\"><span class=\"string\">&quot; 如果输出信息为乱码的可以试一下下面的代码，如果不行就还是给它注释掉</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"keyword\">if</span> g:iswindows</span><br><span class=\"line\"><span class=\"string\">&quot;     function QfMakeConv()</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>         <span class=\"built_in\">let</span> qflist = getqflist()</span><br><span class=\"line\"><span class=\"string\">&quot;         for i in qflist</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>            <span class=\"built_in\">let</span> i.text = iconv(i.text, <span class=\"string\">&quot;cp936&quot;</span>, <span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\"><span class=\"string\">&quot;         endfor</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>         call setqflist(qflist)</span><br><span class=\"line\"><span class=\"string\">&quot;      endfunction</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>      au QuickfixCmdPost make call QfMakeConv()</span><br><span class=\"line\"><span class=\"string\">&quot; endif</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> =============================================================================</span><br><span class=\"line\"><span class=\"string\">&quot;                          &lt;&lt; 其它 &gt;&gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> =============================================================================</span><br><span class=\"line\"><span class=\"string\">&quot; 注：上面配置中的&quot;</span>&lt;Leader&gt;<span class=\"string\">&quot;在本软件中设置为&quot;</span>\\&quot;键（引号里的反斜杠），如&lt;Leader&gt;t</span><br><span class=\"line\"><span class=\"string\">&quot; 指在常规模式下按&quot;</span>\\&quot;键加<span class=\"string\">&quot;t&quot;</span>键，这里不是同时按，而是先按<span class=\"string\">&quot;\\&quot;键后按&quot;</span>t<span class=\"string\">&quot;键，间隔在一</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 秒内，而&lt;Leader&gt;cs是先按<span class=\"string\">&quot;\\&quot;键再按&quot;</span>c<span class=\"string\">&quot;又再按&quot;</span>s<span class=\"string\">&quot;键；如要修改&quot;</span>&lt;leader&gt;<span class=\"string\">&quot;键，可以把</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 下面的设置取消注释，并修改双引号中的键为你想要的，如修改为逗号键。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; let mapleader = &quot;</span>,<span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"string\">&quot; =============================================================================</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"string\">&quot;                          &lt;&lt; 五笔拼音输入法 &gt;&gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"string\">&quot;                           调用 C + S + 空格</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"string\">&quot; =============================================================================</span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_ims=[</span></span><br><span class=\"line\"><span class=\"string\">             \\[&#x27;wb&#x27;, &#x27;五笔&#x27;, &#x27;wubi.ywvim&#x27;],</span></span><br><span class=\"line\"><span class=\"string\">             \\[&#x27;py&#x27;, &#x27;拼音&#x27;, &#x27;pinyin.ywvim&#x27;],</span></span><br><span class=\"line\"><span class=\"string\">             \\]</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_py = &#123; &#x27;helpim&#x27;:&#x27;py&#x27;, &#x27;gb&#x27;:0   &#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_zhpunc = 1</span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_listmax = 5</span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_esc_autoff = 0</span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_autoinput = 0</span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_circlecandidates = 1</span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_helpim_on = 0</span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_matchexact = 0</span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_chinesecode = 1</span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_gb = 0</span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_preconv = &#x27;g2b&#x27;</span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_conv = &#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_lockb = 1</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>保存配置文件于 ~&#x2F;.vimrc ，进入 vim 执行 <strong>:PluginInstall</strong>，进行插件安装</p>\n</blockquote>\n<h2 id=\"部分插件说明\"><a href=\"#部分插件说明\" class=\"headerlink\" title=\"部分插件说明\"></a>部分插件说明</h2><h3 id=\"Bundle\"><a href=\"#Bundle\" class=\"headerlink\" title=\"Bundle\"></a>Bundle</h3><p>Windows 使用 Bundle 安装插件之前还需要先安装 Git for Windows 然后将 git 目录加入环境变量 ，如 C:\\Program Files (x86)\\Git\\bin 运行 vim 执行 :PluginInstall , 等待插件全部安装完成。</p>\n<h3 id=\"ctags-自动提示\"><a href=\"#ctags-自动提示\" class=\"headerlink\" title=\"ctags 自动提示\"></a>ctags 自动提示</h3><blockquote>\n<p>Ctags 需要先下载并编译 <a href=\"http://ctags.sf.net/\">http://ctags.sf.net</a> , Windows版本下载 zip 文件 并加入环境变量 C:\\Program Files (x86)\\Vim\\ctags58<br>Linux 下载源码包编译安装 或使用 apt-get 安装 </p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install ctags</span><br></pre></td></tr></table></figure>\n\n<p>Mac 下使用 brew 安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install ctags</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>由于 mac 自带一个ctags，而taglist要求的是exuberant crags，所以我们给我们安装的 tags 一个别名</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.zsh_aliases </span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>如果使用的是默认的 bash 那应该修改 ~&#x2F;.bash_aliases 或者 ~&#x2F;.profile</p>\n</blockquote>\n<p>添加行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> ctags2=<span class=\"string\">&quot;/usr/local/Cellar/ctags/5.8_1/bin/ctags&quot;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>使用 ctags 命令生成 ctags 文件</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctags -R</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>生成完 ctags 文件于本目录中 Vim 中使用</p>\n</blockquote>\n<p>C + ] 命令跳转至函数定义处</p>\n<p>C + t 返回跳转前函数</p>\n<h3 id=\"Align-自动对齐\"><a href=\"#Align-自动对齐\" class=\"headerlink\" title=\"Align 自动对齐\"></a>Align 自动对齐</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\t=  : align assignments (don<span class=\"string\">&#x27;t count logic, like == or !=) </span></span><br><span class=\"line\"><span class=\"string\">\\t,  : align on commas </span></span><br><span class=\"line\"><span class=\"string\">\\t|  : align on vertical bars (|) </span></span><br><span class=\"line\"><span class=\"string\">\\tsp : align on whitespace </span></span><br><span class=\"line\"><span class=\"string\">\\tt  : align LaTeX tabular tables</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"ACK-快速查询函数定义\"><a href=\"#ACK-快速查询函数定义\" class=\"headerlink\" title=\"ACK 快速查询函数定义\"></a>ACK 快速查询函数定义</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install ack</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>默认配置中使用快捷键 F3 触发查看</p>\n</blockquote>\n<h3 id=\"NERDTree-文件目录树查看\"><a href=\"#NERDTree-文件目录树查看\" class=\"headerlink\" title=\"NERDTree 文件目录树查看\"></a>NERDTree 文件目录树查看</h3><blockquote>\n<p>默认配置中使用快捷键 F2 切换打开&#x2F;关闭<br>NERDTree提供了丰富的键盘操作方式来浏览和打开文件，一些常用的快捷键：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过h j k l移动光标定位</span><br><span class=\"line\">o 打开关闭文件或者目录，如果是文件的话，光标出现在打开的文件中</span><br><span class=\"line\">go 效果同上，不过光标保持在文件目录里，类似预览文件内容的功能</span><br><span class=\"line\">i和s可以水平分割或纵向分割窗口打开文件，前面加g类似go的功能</span><br><span class=\"line\">t 在标签页中打开</span><br><span class=\"line\">T 在后台标签页中打开</span><br><span class=\"line\">p 到上层目录</span><br><span class=\"line\">P 到根目录</span><br><span class=\"line\">K 到同目录第一个节点</span><br><span class=\"line\">J 到同目录最后一个节点</span><br><span class=\"line\">m 显示文件系统菜单（添加、删除、移动操作）</span><br><span class=\"line\">? 帮助</span><br><span class=\"line\">q 关闭</span><br><span class=\"line\"><span class=\"string\">&quot; &lt;Leader&gt;be 在当前窗口显示缓存列表并打开选定文件</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> &lt;Leader&gt;bs 水平分割窗口显示缓存列表，并在缓存列表窗口中打开选定文件</span><br><span class=\"line\"><span class=\"string\">&quot; &lt;Leader&gt;bv 垂直分割窗口显示缓存列表，并在缓存列表窗口中打开选定文件</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&lt;Leader&gt; 指 \\ 反斜杠</span></span><br><span class=\"line\"><span class=\"string\">想了解更多操作方式，可以通过? 查看详细的帮助信息。</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"VIM-的其他命令\"><a href=\"#VIM-的其他命令\" class=\"headerlink\" title=\"VIM 的其他命令\"></a>VIM 的其他命令</h3><ul>\n<li>转到您的目录 cd xx</li>\n<li>首次启动时执行 ctags -R 自动生成 tag</li>\n<li>启动VIM  vim</li>\n<li>F2 打开左侧文件树，r 刷新当前目录 R 刷新全部目录</li>\n<li>tb 打开右侧函数列表 （或 tl）</li>\n<li>F3 打开变量&#x2F;方法说明</li>\n<li>C + ] 跳转至方法&#x2F;变量 定义处 同上一个方法 只是这个会跳转, 如果只是想瞥一下方法的功能使用 F4 即可, F3 全项目搜索该函数定义</li>\n<li>C + t 上一个方法跳过去后使用这个跳回来</li>\n<li>C + p 全项目搜索文件名称</li>\n<li>C + h &#x2F; j &#x2F;k &#x2F; l 可以在多窗口中移动 亦可用于 主窗口中跳至文件树列表或跳至 函数列表等<br>在文件树窗口中</li>\n<li>o 打开文件在主窗口 &#x2F; 折叠或展开目录</li>\n<li>t 在新 tab 中打开</li>\n<li>T 在新 tab 中打开不激活（即后台）</li>\n<li>i 水平分隔主窗口并打开该文件</li>\n<li>s 纵向分隔主窗口并打开该文件</li>\n<li>打开了多个文件后 \\be 查看在缓存中的文件 （有点像 tab 如果没有关闭的都可以切换）<br>\\cc 注释掉选择行 \\cu 反注释 \\cc 的行</li>\n<li>如果开了多个 tab （即使用 t &#x2F; T 打开了文件） gt 切换到下一个 tab  gT 切换到上一个 tab</li>\n<li>自动提示 使用 C + j &#x2F; C + k 选择列表中的内容</li>\n<li>Html 文件中 emmet 使用 c + y 后 , 逗号 来展开</li>\n<li>\\t&#x3D; 格式化选中行</li>\n<li>Esc 离得比较远的可以将 Caps Lock 键换成 Esc 在 插入 (insert) 模式下 还可以使用 C + h &#x2F; j &#x2F; k &#x2F; l 来移动 可参考 <a href=\"/2016/05/05/%E4%BA%92%E6%8D%A2-Ctrl-Caps-Lock-%E6%8C%89%E9%94%AE/\">互换-Ctrl-Caps-Lock-按键</a></li>\n<li>输入中文 C + S + SPACE 默认五笔 z 键临时拼音，用拼音的直接删除配置中的五笔即可</li>\n<li>编译相关 F9 保存、编译、打开</li>\n</ul>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>VIM 7.4 以上版本，大部分配置同时适用于 Linux &#x2F; Mac OS 终端 以及 gVim</p>\n</blockquote>\n<h2 id=\"安装插件管理器\"><a href=\"#安装插件管理器\" class=\"headerlink\" title=\"安装插件管理器\"></a>安装插件管理器</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"完整配置\"><a href=\"#完整配置\" class=\"headerlink\" title=\"完整配置\"></a>完整配置</h2><blockquote>\n<p>编辑本用户的 vim 配置文件<br>Linux &#x2F; Mac OS 一般创建文件 ~&#x2F;.vimrc<br>Windows 可在用户名文件夹下创建 .vimrc 文件 (C:\\Users\\USERNAME)</p>\n</blockquote>","more":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br><span class=\"line\">772</span><br><span class=\"line\">773</span><br><span class=\"line\">774</span><br><span class=\"line\">775</span><br><span class=\"line\">776</span><br><span class=\"line\">777</span><br><span class=\"line\">778</span><br><span class=\"line\">779</span><br><span class=\"line\">780</span><br><span class=\"line\">781</span><br><span class=\"line\">782</span><br><span class=\"line\">783</span><br><span class=\"line\">784</span><br><span class=\"line\">785</span><br><span class=\"line\">786</span><br><span class=\"line\">787</span><br><span class=\"line\">788</span><br><span class=\"line\">789</span><br><span class=\"line\">790</span><br><span class=\"line\">791</span><br><span class=\"line\">792</span><br><span class=\"line\">793</span><br><span class=\"line\">794</span><br><span class=\"line\">795</span><br><span class=\"line\">796</span><br><span class=\"line\">797</span><br><span class=\"line\">798</span><br><span class=\"line\">799</span><br><span class=\"line\">800</span><br><span class=\"line\">801</span><br><span class=\"line\">802</span><br><span class=\"line\">803</span><br><span class=\"line\">804</span><br><span class=\"line\">805</span><br><span class=\"line\">806</span><br><span class=\"line\">807</span><br><span class=\"line\">808</span><br><span class=\"line\">809</span><br><span class=\"line\">810</span><br><span class=\"line\">811</span><br><span class=\"line\">812</span><br><span class=\"line\">813</span><br><span class=\"line\">814</span><br><span class=\"line\">815</span><br><span class=\"line\">816</span><br><span class=\"line\">817</span><br><span class=\"line\">818</span><br><span class=\"line\">819</span><br><span class=\"line\">820</span><br><span class=\"line\">821</span><br><span class=\"line\">822</span><br><span class=\"line\">823</span><br><span class=\"line\">824</span><br><span class=\"line\">825</span><br><span class=\"line\">826</span><br><span class=\"line\">827</span><br><span class=\"line\">828</span><br><span class=\"line\">829</span><br><span class=\"line\">830</span><br><span class=\"line\">831</span><br><span class=\"line\">832</span><br><span class=\"line\">833</span><br><span class=\"line\">834</span><br><span class=\"line\">835</span><br><span class=\"line\">836</span><br><span class=\"line\">837</span><br><span class=\"line\">838</span><br><span class=\"line\">839</span><br><span class=\"line\">840</span><br><span class=\"line\">841</span><br><span class=\"line\">842</span><br><span class=\"line\">843</span><br><span class=\"line\">844</span><br><span class=\"line\">845</span><br><span class=\"line\">846</span><br><span class=\"line\">847</span><br><span class=\"line\">848</span><br><span class=\"line\">849</span><br><span class=\"line\">850</span><br><span class=\"line\">851</span><br><span class=\"line\">852</span><br><span class=\"line\">853</span><br><span class=\"line\">854</span><br><span class=\"line\">855</span><br><span class=\"line\">856</span><br><span class=\"line\">857</span><br><span class=\"line\">858</span><br><span class=\"line\">859</span><br><span class=\"line\">860</span><br><span class=\"line\">861</span><br><span class=\"line\">862</span><br><span class=\"line\">863</span><br><span class=\"line\">864</span><br><span class=\"line\">865</span><br><span class=\"line\">866</span><br><span class=\"line\">867</span><br><span class=\"line\">868</span><br><span class=\"line\">869</span><br><span class=\"line\">870</span><br><span class=\"line\">871</span><br><span class=\"line\">872</span><br><span class=\"line\">873</span><br><span class=\"line\">874</span><br><span class=\"line\">875</span><br><span class=\"line\">876</span><br><span class=\"line\">877</span><br><span class=\"line\">878</span><br><span class=\"line\">879</span><br><span class=\"line\">880</span><br><span class=\"line\">881</span><br><span class=\"line\">882</span><br><span class=\"line\">883</span><br><span class=\"line\">884</span><br><span class=\"line\">885</span><br><span class=\"line\">886</span><br><span class=\"line\">887</span><br><span class=\"line\">888</span><br><span class=\"line\">889</span><br><span class=\"line\">890</span><br><span class=\"line\">891</span><br><span class=\"line\">892</span><br><span class=\"line\">893</span><br><span class=\"line\">894</span><br><span class=\"line\">895</span><br><span class=\"line\">896</span><br><span class=\"line\">897</span><br><span class=\"line\">898</span><br><span class=\"line\">899</span><br><span class=\"line\">900</span><br><span class=\"line\">901</span><br><span class=\"line\">902</span><br><span class=\"line\">903</span><br><span class=\"line\">904</span><br><span class=\"line\">905</span><br><span class=\"line\">906</span><br><span class=\"line\">907</span><br><span class=\"line\">908</span><br><span class=\"line\">909</span><br><span class=\"line\">910</span><br><span class=\"line\">911</span><br><span class=\"line\">912</span><br><span class=\"line\">913</span><br><span class=\"line\">914</span><br><span class=\"line\">915</span><br><span class=\"line\">916</span><br><span class=\"line\">917</span><br><span class=\"line\">918</span><br><span class=\"line\">919</span><br><span class=\"line\">920</span><br><span class=\"line\">921</span><br><span class=\"line\">922</span><br><span class=\"line\">923</span><br><span class=\"line\">924</span><br><span class=\"line\">925</span><br><span class=\"line\">926</span><br><span class=\"line\">927</span><br><span class=\"line\">928</span><br><span class=\"line\">929</span><br><span class=\"line\">930</span><br><span class=\"line\">931</span><br><span class=\"line\">932</span><br><span class=\"line\">933</span><br><span class=\"line\">934</span><br><span class=\"line\">935</span><br><span class=\"line\">936</span><br><span class=\"line\">937</span><br><span class=\"line\">938</span><br><span class=\"line\">939</span><br><span class=\"line\">940</span><br><span class=\"line\">941</span><br><span class=\"line\">942</span><br><span class=\"line\">943</span><br><span class=\"line\">944</span><br><span class=\"line\">945</span><br><span class=\"line\">946</span><br><span class=\"line\">947</span><br><span class=\"line\">948</span><br><span class=\"line\">949</span><br><span class=\"line\">950</span><br><span class=\"line\">951</span><br><span class=\"line\">952</span><br><span class=\"line\">953</span><br><span class=\"line\">954</span><br><span class=\"line\">955</span><br><span class=\"line\">956</span><br><span class=\"line\">957</span><br><span class=\"line\">958</span><br><span class=\"line\">959</span><br><span class=\"line\">960</span><br><span class=\"line\">961</span><br><span class=\"line\">962</span><br><span class=\"line\">963</span><br><span class=\"line\">964</span><br><span class=\"line\">965</span><br><span class=\"line\">966</span><br><span class=\"line\">967</span><br><span class=\"line\">968</span><br><span class=\"line\">969</span><br><span class=\"line\">970</span><br><span class=\"line\">971</span><br><span class=\"line\">972</span><br><span class=\"line\">973</span><br><span class=\"line\">974</span><br><span class=\"line\">975</span><br><span class=\"line\">976</span><br><span class=\"line\">977</span><br><span class=\"line\">978</span><br><span class=\"line\">979</span><br><span class=\"line\">980</span><br><span class=\"line\">981</span><br><span class=\"line\">982</span><br><span class=\"line\">983</span><br><span class=\"line\">984</span><br><span class=\"line\">985</span><br><span class=\"line\">986</span><br><span class=\"line\">987</span><br><span class=\"line\">988</span><br><span class=\"line\">989</span><br><span class=\"line\">990</span><br><span class=\"line\">991</span><br><span class=\"line\">992</span><br><span class=\"line\">993</span><br><span class=\"line\">994</span><br><span class=\"line\">995</span><br><span class=\"line\">996</span><br><span class=\"line\">997</span><br><span class=\"line\">998</span><br><span class=\"line\">999</span><br><span class=\"line\">1000</span><br><span class=\"line\">1001</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot; =============================================================================</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>        &lt;&lt; 判断操作系统是 Windows 还是 Linux 和判断是终端还是 Gvim &gt;&gt;</span><br><span class=\"line\"><span class=\"string\">&quot; =============================================================================</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; 判断操作系统是否是 Windows 还是 Linux &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"built_in\">let</span> g:iswindows = 0</span><br><span class=\"line\"><span class=\"built_in\">let</span> g:islinux = 0</span><br><span class=\"line\"><span class=\"keyword\">if</span>(has(<span class=\"string\">&quot;win32&quot;</span>) || has(<span class=\"string\">&quot;win64&quot;</span>) || has(<span class=\"string\">&quot;win95&quot;</span>) || has(<span class=\"string\">&quot;win16&quot;</span>))</span><br><span class=\"line\">    <span class=\"built_in\">let</span> g:iswindows = 1</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">let</span> g:islinux = 1</span><br><span class=\"line\">endif</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; 判断是终端还是 Gvim &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">if has(&quot;</span>gui_running<span class=\"string\">&quot;)</span></span><br><span class=\"line\"><span class=\"string\">    let g:isGUI = 1</span></span><br><span class=\"line\"><span class=\"string\">else</span></span><br><span class=\"line\"><span class=\"string\">    let g:isGUI = 0</span></span><br><span class=\"line\"><span class=\"string\">endif</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> =============================================================================</span><br><span class=\"line\"><span class=\"string\">&quot;                          &lt;&lt; 以下为软件默认配置 &gt;&gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> =============================================================================</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; Windows Gvim 默认配置&gt; 做了一点修改</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">if (g:iswindows &amp;&amp; g:isGUI)</span></span><br><span class=\"line\"><span class=\"string\">    source <span class=\"variable\">$VIMRUNTIME</span>/vimrc_example.vim</span></span><br><span class=\"line\"><span class=\"string\">    source <span class=\"variable\">$VIMRUNTIME</span>/mswin.vim</span></span><br><span class=\"line\"><span class=\"string\">    behave mswin</span></span><br><span class=\"line\"><span class=\"string\">    set diffexpr=MyDiff()</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    function MyDiff()</span></span><br><span class=\"line\"><span class=\"string\">        let opt = &#x27;-a --binary &#x27;</span></span><br><span class=\"line\"><span class=\"string\">        if &amp;diffopt =~ &#x27;icase&#x27; | let opt = opt . &#x27;-i &#x27; | endif</span></span><br><span class=\"line\"><span class=\"string\">        if &amp;diffopt =~ &#x27;iwhite&#x27; | let opt = opt . &#x27;-b &#x27; | endif</span></span><br><span class=\"line\"><span class=\"string\">        let arg1 = v:fname_in</span></span><br><span class=\"line\"><span class=\"string\">        if arg1 =~ &#x27; &#x27; | let arg1 = &#x27;&quot;</span><span class=\"string\">&#x27; . arg1 . &#x27;</span><span class=\"string\">&quot;&#x27; | endif</span></span><br><span class=\"line\"><span class=\"string\">        let arg2 = v:fname_new</span></span><br><span class=\"line\"><span class=\"string\">        if arg2 =~ &#x27; &#x27; | let arg2 = &#x27;&quot;</span><span class=\"string\">&#x27; . arg2 . &#x27;</span><span class=\"string\">&quot;&#x27; | endif</span></span><br><span class=\"line\"><span class=\"string\">        let arg3 = v:fname_out</span></span><br><span class=\"line\"><span class=\"string\">        if arg3 =~ &#x27; &#x27; | let arg3 = &#x27;&quot;</span><span class=\"string\">&#x27; . arg3 . &#x27;</span><span class=\"string\">&quot;&#x27; | endif</span></span><br><span class=\"line\"><span class=\"string\">        let eq = &#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        if <span class=\"variable\">$VIMRUNTIME</span> =~ &#x27; &#x27;</span></span><br><span class=\"line\"><span class=\"string\">            if &amp;sh =~ &#x27;\\&lt;cmd&#x27;</span></span><br><span class=\"line\"><span class=\"string\">                let cmd = &#x27;&quot;</span><span class=\"string\">&quot;&#x27; . <span class=\"variable\">$VIMRUNTIME</span> . &#x27;\\diff&quot;</span><span class=\"string\">&#x27;</span></span><br><span class=\"line\"><span class=\"string\">                let eq = &#x27;</span><span class=\"string\">&quot;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">            else</span></span><br><span class=\"line\"><span class=\"string\">                let cmd = substitute(<span class=\"variable\">$VIMRUNTIME</span>, &#x27; &#x27;, &#x27;&quot;</span> <span class=\"string\">&#x27;, &#x27;</span><span class=\"string\">&#x27;) . &#x27;</span>\\diff<span class=\"string\">&quot;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">            endif</span></span><br><span class=\"line\"><span class=\"string\">        else</span></span><br><span class=\"line\"><span class=\"string\">            let cmd = <span class=\"variable\">$VIMRUNTIME</span> . &#x27;\\diff&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        endif</span></span><br><span class=\"line\"><span class=\"string\">        silent execute &#x27;!&#x27; . cmd . &#x27; &#x27; . opt . arg1 . &#x27; &#x27; . arg2 . &#x27; &gt; &#x27; . arg3 . eq</span></span><br><span class=\"line\"><span class=\"string\">    endfunction</span></span><br><span class=\"line\"><span class=\"string\">endif</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; Linux Gvim/Vim 默认配置&gt; 做了一点修改</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"keyword\">if</span> g:islinux</span><br><span class=\"line\">    <span class=\"built_in\">set</span> hlsearch        <span class=\"string\">&quot;高亮搜索</span></span><br><span class=\"line\"><span class=\"string\">    set incsearch       &quot;</span>在输入要搜索的文字时，实时匹配</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot; Uncomment the following to have Vim jump to the last position when</span></span><br><span class=\"line\"><span class=\"string\">    &quot;</span> reopening a file</span><br><span class=\"line\">    <span class=\"keyword\">if</span> has(<span class=\"string\">&quot;autocmd&quot;</span>)</span><br><span class=\"line\">        au BufReadPost * <span class=\"keyword\">if</span> line(<span class=\"string\">&quot;&#x27;\\&quot;&quot;</span>) &gt; 1 &amp;&amp; line(<span class=\"string\">&quot;&#x27;\\&quot;&quot;</span>) &lt;= line(<span class=\"string\">&quot;$&quot;</span>) | exe <span class=\"string\">&quot;normal! g&#x27;\\&quot;&quot;</span> | endif</span><br><span class=\"line\">    endif</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> g:isGUI</span><br><span class=\"line\">        <span class=\"string\">&quot; Source a global configuration file if available</span></span><br><span class=\"line\"><span class=\"string\">        if filereadable(&quot;</span>/etc/vim/gvimrc.local<span class=\"string\">&quot;)</span></span><br><span class=\"line\"><span class=\"string\">            source /etc/vim/gvimrc.local</span></span><br><span class=\"line\"><span class=\"string\">        endif</span></span><br><span class=\"line\"><span class=\"string\">    else</span></span><br><span class=\"line\"><span class=\"string\">        &quot;</span> This line should not be removed as it ensures that various options are</span><br><span class=\"line\">        <span class=\"string\">&quot; properly set to work with the Vim-related packages available in Debian.</span></span><br><span class=\"line\"><span class=\"string\">        runtime! debian.vim</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &quot;</span> Vim5 and later versions support syntax highlighting. Uncommenting the next</span><br><span class=\"line\">        <span class=\"string\">&quot; line enables syntax highlighting by default.</span></span><br><span class=\"line\"><span class=\"string\">        if has(&quot;</span>syntax<span class=\"string\">&quot;)</span></span><br><span class=\"line\"><span class=\"string\">            syntax on</span></span><br><span class=\"line\"><span class=\"string\">        endif</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &quot;</span> <span class=\"built_in\">set</span> mouse=a                    <span class=\"string\">&quot; 在任何模式下启用鼠标</span></span><br><span class=\"line\"><span class=\"string\">        set t_Co=256                   &quot;</span> 在终端启用256色</span><br><span class=\"line\">        <span class=\"built_in\">set</span> backspace=2                <span class=\"string\">&quot; 设置退格键可用</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &quot;</span> Source a global configuration file <span class=\"keyword\">if</span> available</span><br><span class=\"line\">        <span class=\"keyword\">if</span> filereadable(<span class=\"string\">&quot;/etc/vim/vimrc.local&quot;</span>)</span><br><span class=\"line\">            <span class=\"built_in\">source</span> /etc/vim/vimrc.local</span><br><span class=\"line\">        endif</span><br><span class=\"line\">    endif</span><br><span class=\"line\">endif</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; =============================================================================</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>                          &lt;&lt; 以下为用户自定义配置 &gt;&gt;</span><br><span class=\"line\"><span class=\"string\">&quot; =============================================================================</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; Vundle 插件管理工具配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 用于更方便的管理vim插件，具体用法参考 :h vundle 帮助</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> Vundle工具安装方法为在终端输入如下命令</span><br><span class=\"line\"><span class=\"string\">&quot; git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 如果想在 windows 安装就必需先安装 <span class=\"string\">&quot;git for window&quot;</span>，可查阅网上资料</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">set</span> nocompatible                                      <span class=\"string\">&quot;禁用 Vi 兼容模式</span></span><br><span class=\"line\"><span class=\"string\">filetype off                                          &quot;</span>禁用文件类型侦测</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> g:islinux</span><br><span class=\"line\">    <span class=\"built_in\">set</span> rtp+=~/.vim/bundle/vundle/</span><br><span class=\"line\">    call vundle<span class=\"comment\">#rc()</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">set</span> rtp+=<span class=\"variable\">$VIM</span>/vimfiles/bundle/vundle/</span><br><span class=\"line\">    call vundle<span class=\"comment\">#rc(&#x27;$VIM/vimfiles/bundle/&#x27;)</span></span><br><span class=\"line\">endif</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 使用Vundle来管理插件，这个必须要有。</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;gmarik/vundle&#x27;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 以下为要安装或更新的插件，不同仓库都有（具体书写规范请参考帮助）</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; a.vim 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> :AS    ---切换头文件并水平分割窗口</span><br><span class=\"line\"><span class=\"string\">&quot; Bundle &#x27;a.vim&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; Align 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 一个对齐的插件，用来——排版与对齐代码，功能强大，不过用到的机会不多</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;Align&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; tab 键自动补全 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; Bundle &#x27;SuperTab&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; auto-pairs 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 用于括号与引号自动补全，不过会与函数原型提示插件echofunc冲突</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;jiangmiao/auto-pairs&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; BufExplorer 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 快速轻松的在缓存中切换（相当于另一种多个文件间的切换方式）</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;bufexplorer.zip&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; ccvext.vim 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 用于对指定文件自动生成tags与cscope文件并连接</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> Bundle <span class=\"string\">&#x27;ccvext.vim&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; cSyntaxAfter 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 高亮括号与运算符等</span><br><span class=\"line\">Bundle <span class=\"string\">&#x27;cSyntaxAfter&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; ctrlp.vim 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 一个全路径模糊文件，缓冲区，最近最多使用，... 检索插件；详细帮助见 :h ctrlp</span><br><span class=\"line\"><span class=\"string\">&quot; 常规模式下输入：Ctrl + p 调用插件</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;ctrlpvim/ctrlp.vim&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; emmet-vim（前身为Zen coding） 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; HTML/CSS代码快速编写神器，详细帮助见 :h emmet.txt</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;mattn/emmet-vim&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; indentLine 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 用于显示对齐线，与 indent_guides 在显示方式上不同，根据自己喜好选择了</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 在终端上会有屏幕刷新的问题，这个问题能解决有更好了</span><br><span class=\"line\">Bundle <span class=\"string\">&#x27;Yggdroot/indentLine&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; vim-javacompleteex（也就是 javacomplete 增强版）插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> java 补全插件</span><br><span class=\"line\"><span class=\"string\">&quot; Bundle &#x27;vim-javacompleteex&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; Mark--Karkat（也就是 Mark） 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 给不同的单词高亮，表明不同的变量时很有用，详细帮助见 :h mark.txt</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;Mark--Karkat&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; neocomplcache 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 关键字补全、文件路径补全、tag补全等等，各种，非常好用，速度超快。</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;Shougo/neocomplcache.vim&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; nerdcommenter 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 我主要用于C/C++代码注释(其它的也行)</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 以下为插件默认快捷键，其中的说明是以C/C++为例的，其它语言类似</span><br><span class=\"line\">Bundle <span class=\"string\">&#x27;scrooloose/nerdcommenter&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; nerdtree 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 有目录村结构的文件浏览插件</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 常规模式下输入 F2 调用插件</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;scrooloose/nerdtree&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; omnicppcomplete 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 用于C/C++代码补全，这种补全主要针对命名空间、类、结构、共同体等进行补全，详细</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 说明可以参考帮助或网络教程等</span><br><span class=\"line\"><span class=\"string\">&quot; 使用前先执行如下 ctags 命令（本配置中可以直接使用 ccvext 插件来执行以下命令）</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> ctags -R --c++-kinds=+p --fields=+iaS --extra=+q</span><br><span class=\"line\"><span class=\"string\">&quot; 我使用上面的参数生成标签后，对函数使用跳转时会出现多个选择</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> Bundle <span class=\"string\">&#x27;OmniCppComplete&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; powerline 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 状态栏插件，更好的状态栏效果</span><br><span class=\"line\">Bundle <span class=\"string\">&#x27;Lokaltog/vim-powerline&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; repeat 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 主要用<span class=\"string\">&quot;.&quot;</span>命令来重复上次插件使用的命令</span><br><span class=\"line\">Bundle <span class=\"string\">&#x27;repeat.vim&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; snipMate 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 用于各种代码补全，这种补全是一种对代码中的词与代码块的缩写补全，详细用法可以参</span><br><span class=\"line\"><span class=\"string\">&quot; 考使用说明或网络教程等。不过有时候也会与 supertab 插件在补全时产生冲突，如果大</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 侠有什么其它解决方法希望不要保留呀</span><br><span class=\"line\">Bundle <span class=\"string\">&#x27;msanders/snipmate.vim&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; SrcExpl 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 增强源代码浏览，其功能就像Windows中的<span class=\"string\">&quot;Source Insight&quot;</span></span><br><span class=\"line\">Bundle <span class=\"string\">&#x27;wesleyche/SrcExpl&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; std_c 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> Bundle <span class=\"string\">&#x27;std_c.zip&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; surround 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 快速给单词/句子两边增加符号（包括html标签），缺点是不能用<span class=\"string\">&quot;.&quot;</span>来重复命令</span><br><span class=\"line\"><span class=\"string\">&quot; 不过 repeat 插件可以解决这个问题，详细帮助见 :h surround.txt</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;tpope/vim-surround&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; Syntastic 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 用于保存文件时查检语法</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;scrooloose/syntastic&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; Tagbar 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 相对 TagList 能更好的支持面向对象</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 常规模式下输入 tb 调用插件，如果有打开 TagList 窗口则先将其关闭</span><br><span class=\"line\">Bundle <span class=\"string\">&#x27;majutsushi/tagbar&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; TagList 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 高效地浏览源码, 其功能就像vc中的workpace</span><br><span class=\"line\"><span class=\"string\">&quot; 那里面列出了当前文件中的所有宏,全局变量, 函数名等</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 常规模式下输入 tl 调用插件，如果有打开 Tagbar 窗口则先将其关闭</span><br><span class=\"line\">Bundle <span class=\"string\">&#x27;taglist.vim&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; txtbrowser 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 用于文本文件生成标签与与语法高亮（调用TagList插件生成标签，如果可以）</span><br><span class=\"line\">Bundle <span class=\"string\">&#x27;TxtBrowser&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; ZoomWin 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 用于分割窗口的最大化与还原</span><br><span class=\"line\"><span class=\"string\">&quot; 常规模式下按快捷键 &lt;c-w&gt;o 在最大化与还原间切换</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;ZoomWin&#x27;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> Go 语法高亮 https://github.com/fatih/vim-go </span><br><span class=\"line\">Bundle <span class=\"string\">&#x27;fatih/vim-go&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; Go 语法检查</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;rjohnsondev/vim-compiler-go&#x27;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> PHP DOC MAC ONLY</span><br><span class=\"line\">Bundle <span class=\"string\">&#x27;rizzatti/dash.vim&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 全文搜索（项目） 函数名</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 需要先安装 ack </span><br><span class=\"line\"><span class=\"string\">&quot; yum install ack</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;mileszs/ack.vim&#x27;</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;dyng/ctrlsf.vim&#x27;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 全局搜索 leader - t 开启</span><br><span class=\"line\">Bundle <span class=\"string\">&#x27;wincent/command-t&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; coffee-script compile</span></span><br><span class=\"line\"><span class=\"string\">Bundle &#x27;kchmck/vim-coffee-script&#x27;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; 编码配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 注：使用utf-8格式后，软件与程序源码、文件路径不能有中文，否则报错</span></span><br><span class=\"line\"><span class=\"string\">set encoding=utf-8                                    &quot;</span>设置gvim内部编码，默认不更改</span><br><span class=\"line\"><span class=\"built_in\">set</span> fileencoding=utf-8                                <span class=\"string\">&quot;设置当前文件编码，可以更改，如：gbk（同cp936）</span></span><br><span class=\"line\"><span class=\"string\">set fileencodings=ucs-bom,utf-8,gbk,cp936,latin-1     &quot;</span>设置支持打开的文件的编码</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 文件格式，默认 ffs=dos,unix</span></span><br><span class=\"line\"><span class=\"string\">set fileformat=unix                                   &quot;</span>设置新（当前）文件的&lt;EOL&gt;格式，可以更改，如：dos（windows系统常用）</span><br><span class=\"line\"><span class=\"built_in\">set</span> fileformats=unix,dos,mac                          <span class=\"string\">&quot;给出文件的&lt;EOL&gt;格式类型</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">if (g:iswindows &amp;&amp; g:isGUI)</span></span><br><span class=\"line\"><span class=\"string\">    &quot;</span>解决菜单乱码</span><br><span class=\"line\">    <span class=\"built_in\">source</span> <span class=\"variable\">$VIMRUNTIME</span>/delmenu.vim</span><br><span class=\"line\">    <span class=\"built_in\">source</span> <span class=\"variable\">$VIMRUNTIME</span>/menu.vim</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot;解决consle输出乱码</span></span><br><span class=\"line\"><span class=\"string\">    language messages zh_CN.utf-8</span></span><br><span class=\"line\"><span class=\"string\">endif</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; 编写文件时的配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\">filetype on                                           <span class=\"string\">&quot;启用文件类型侦测</span></span><br><span class=\"line\"><span class=\"string\">filetype plugin on                                    &quot;</span>针对不同的文件类型加载对应的插件</span><br><span class=\"line\">filetype plugin indent on                             <span class=\"string\">&quot;启用缩进</span></span><br><span class=\"line\"><span class=\"string\">set smartindent                                       &quot;</span>启用智能对齐方式</span><br><span class=\"line\"><span class=\"built_in\">set</span> expandtab                                         <span class=\"string\">&quot;将Tab键转换为空格</span></span><br><span class=\"line\"><span class=\"string\">set tabstop=4                                         &quot;</span>设置Tab键的宽度，可以更改，如：宽度为2</span><br><span class=\"line\"><span class=\"built_in\">set</span> shiftwidth=4                                      <span class=\"string\">&quot;换行时自动缩进宽度，可更改（宽度同tabstop）</span></span><br><span class=\"line\"><span class=\"string\">set smarttab                                          &quot;</span>指定按一次backspace就删除shiftwidth宽度</span><br><span class=\"line\"><span class=\"string\">&quot; set foldenable                                        &quot;</span>启用折叠</span><br><span class=\"line\"><span class=\"string\">&quot; set foldmethod=indent                                 &quot;</span>indent 折叠方式</span><br><span class=\"line\"><span class=\"string\">&quot; set foldmethod=marker                                &quot;</span>marker 折叠方式</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 常规模式下用空格键来开关光标行所在折叠（注：zR 展开所有折叠，zM 关闭所有折叠）</span></span><br><span class=\"line\"><span class=\"string\">nnoremap &lt;space&gt; @=((foldclosed(line(&#x27;.&#x27;)) &lt; 0) ? &#x27;zc&#x27; : &#x27;zo&#x27;)&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 当文件在外部被修改，自动更新该文件</span><br><span class=\"line\"><span class=\"built_in\">set</span> autoread</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 常规模式下输入 cS 清除行尾空格</span></span><br><span class=\"line\"><span class=\"string\">nmap cS :%s/\\s\\+$//g&lt;CR&gt;:noh&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 常规模式下输入 cM 清除行尾 ^M 符号</span><br><span class=\"line\">nmap cM :%s/\\r$//g&lt;CR&gt;:noh&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">set</span> ignorecase                                        <span class=\"string\">&quot;搜索模式里忽略大小写</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"built_in\">set</span> smartcase                                         <span class=\"string\">&quot;如果搜索模式包含大写字符，不使用 &#x27;ignorecase&#x27; 选项，只有在输入搜索模式并且打开 &#x27;ignorecase&#x27; 选项时才会使用</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"built_in\">set</span> noincsearch                                       <span class=\"string\">&quot;在输入要搜索的文字时，取消实时匹配</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> Ctrl + K 插入模式下光标向上移动</span><br><span class=\"line\">imap &lt;c-k&gt; &lt;Up&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; Ctrl + J 插入模式下光标向下移动</span></span><br><span class=\"line\"><span class=\"string\">imap &lt;c-j&gt; &lt;Down&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> Ctrl + H 插入模式下光标向左移动</span><br><span class=\"line\">imap &lt;c-h&gt; &lt;Left&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; Ctrl + L 插入模式下光标向右移动</span></span><br><span class=\"line\"><span class=\"string\">imap &lt;c-l&gt; &lt;Right&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 启用每行超过80列的字符提示（字体变蓝并加下划线），不启用就注释掉</span><br><span class=\"line\"><span class=\"string\">&quot; au BufWinEnter * let w:m2=matchadd(&#x27;Underlined&#x27;, &#x27;\\%&gt;&#x27; . 80 . &#x27;v.\\+&#x27;, -1)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; 界面配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"built_in\">set</span> number                                            <span class=\"string\">&quot;显示行号</span></span><br><span class=\"line\"><span class=\"string\">set laststatus=2                                      &quot;</span>启用状态栏信息</span><br><span class=\"line\"><span class=\"built_in\">set</span> cmdheight=2                                       <span class=\"string\">&quot;设置命令行的高度为2，默认为1</span></span><br><span class=\"line\"><span class=\"string\">set cursorline                                        &quot;</span>突出显示当前行</span><br><span class=\"line\"><span class=\"string\">&quot; set guifont=YaHei_Consolas_Hybrid:h10                 &quot;</span>设置字体:字号（字体名称空格用下划线代替）</span><br><span class=\"line\"><span class=\"built_in\">set</span> guifont=courier_new:h9                            <span class=\"string\">&quot;设置字体:字号（字体名称空格用下划线代替）</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"built_in\">set</span> nowrap                                            <span class=\"string\">&quot;设置不自动换行</span></span><br><span class=\"line\"><span class=\"string\">set shortmess=atI                                     &quot;</span>去掉欢迎界面</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 设置 gVim 窗口初始位置及大小</span></span><br><span class=\"line\"><span class=\"string\">if g:isGUI</span></span><br><span class=\"line\"><span class=\"string\">    set guifont=courier_new:h16                           &quot;</span>设置字体:字号（字体名称空格用下划线代替）</span><br><span class=\"line\">    <span class=\"string\">&quot; au GUIEnter * simalt ~x                           &quot;</span>窗口启动时自动最大化</span><br><span class=\"line\">    winpos 100 10                                     <span class=\"string\">&quot;指定窗口出现的位置，坐标原点在屏幕左上角</span></span><br><span class=\"line\"><span class=\"string\">    set lines=50 columns=180                          &quot;</span>指定窗口大小，lines为高度，columns为宽度</span><br><span class=\"line\">endif</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 设置代码配色方案</span></span><br><span class=\"line\"><span class=\"string\">if g:isGUI</span></span><br><span class=\"line\"><span class=\"string\">    colorscheme molokai               &quot;</span>Gvim配色方案</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    colorscheme molokai               <span class=\"string\">&quot;终端配色方案</span></span><br><span class=\"line\"><span class=\"string\">endif</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 显示/隐藏菜单栏、工具栏、滚动条，可用 Ctrl + F11 切换</span><br><span class=\"line\"><span class=\"keyword\">if</span> g:isGUI</span><br><span class=\"line\">    <span class=\"built_in\">set</span> guioptions-=m</span><br><span class=\"line\">    <span class=\"built_in\">set</span> guioptions-=T</span><br><span class=\"line\">    <span class=\"built_in\">set</span> guioptions-=r</span><br><span class=\"line\">    <span class=\"built_in\">set</span> guioptions-=L</span><br><span class=\"line\">    nmap &lt;silent&gt; &lt;c-F11&gt; :<span class=\"keyword\">if</span> &amp;guioptions =~<span class=\"comment\"># &#x27;m&#x27; &lt;Bar&gt;</span></span><br><span class=\"line\">        \\<span class=\"built_in\">set</span> guioptions-=m &lt;Bar&gt;</span><br><span class=\"line\">        \\<span class=\"built_in\">set</span> guioptions-=T &lt;Bar&gt;</span><br><span class=\"line\">        \\<span class=\"built_in\">set</span> guioptions-=r &lt;Bar&gt;</span><br><span class=\"line\">        \\<span class=\"built_in\">set</span> guioptions-=L &lt;Bar&gt;</span><br><span class=\"line\">    \\<span class=\"keyword\">else</span> &lt;Bar&gt;</span><br><span class=\"line\">        \\<span class=\"built_in\">set</span> guioptions+=m &lt;Bar&gt;</span><br><span class=\"line\">        \\<span class=\"built_in\">set</span> guioptions+=T &lt;Bar&gt;</span><br><span class=\"line\">        \\<span class=\"built_in\">set</span> guioptions+=r &lt;Bar&gt;</span><br><span class=\"line\">        \\<span class=\"built_in\">set</span> guioptions+=L &lt;Bar&gt;</span><br><span class=\"line\">    \\endif&lt;CR&gt;</span><br><span class=\"line\">endif</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; 编译、连接、运行配置 (目前只配置了C、C++、Java语言)&gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> F9 一键保存、编译、连接存并运行</span><br><span class=\"line\">nmap &lt;F9&gt; :call Run()&lt;CR&gt;</span><br><span class=\"line\">imap &lt;F9&gt; &lt;ESC&gt;:call Run()&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; Ctrl + F9 一键保存并编译</span></span><br><span class=\"line\"><span class=\"string\">nmap &lt;c-F9&gt; :call Compile()&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">imap &lt;c-F9&gt; &lt;ESC&gt;:call Compile()&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> Ctrl + F10 一键保存并连接</span><br><span class=\"line\">nmap &lt;c-F10&gt; :call Link()&lt;CR&gt;</span><br><span class=\"line\">imap &lt;c-F10&gt; &lt;ESC&gt;:call Link()&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">let</span> s:LastShellReturn_C = 0</span><br><span class=\"line\"><span class=\"built_in\">let</span> s:LastShellReturn_L = 0</span><br><span class=\"line\"><span class=\"built_in\">let</span> s:ShowWarning = 1</span><br><span class=\"line\"><span class=\"built_in\">let</span> s:Obj_Extension = <span class=\"string\">&#x27;.o&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">let</span> s:Exe_Extension = <span class=\"string\">&#x27;.exe&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">let</span> s:Class_Extension = <span class=\"string\">&#x27;.class&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">let</span> s:Sou_Error = 0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">let</span> s:windows_CFlags = <span class=\"string\">&#x27;gcc\\ -fexec-charset=gbk\\ -Wall\\ -g\\ -O0\\ -c\\ %\\ -o\\ %&lt;.o&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">let</span> s:linux_CFlags = <span class=\"string\">&#x27;gcc\\ -Wall\\ -g\\ -O0\\ -c\\ %\\ -o\\ %&lt;.o&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">let</span> s:windows_CPPFlags = <span class=\"string\">&#x27;g++\\ -fexec-charset=gbk\\ -Wall\\ -g\\ -O0\\ -c\\ %\\ -o\\ %&lt;.o&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">let</span> s:linux_CPPFlags = <span class=\"string\">&#x27;g++\\ -Wall\\ -g\\ -O0\\ -c\\ %\\ -o\\ %&lt;.o&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">let</span> s:JavaFlags = <span class=\"string\">&#x27;javac\\ %&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">func! Compile()</span><br><span class=\"line\">    exe <span class=\"string\">&quot;:ccl&quot;</span></span><br><span class=\"line\">    exe <span class=\"string\">&quot;:update&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">let</span> s:Sou_Error = 0</span><br><span class=\"line\">    <span class=\"built_in\">let</span> s:LastShellReturn_C = 0</span><br><span class=\"line\">    <span class=\"built_in\">let</span> Sou = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">let</span> v:statusmsg = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;c&quot;</span> || <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;cpp&quot;</span> || <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;cxx&quot;</span></span><br><span class=\"line\">        <span class=\"built_in\">let</span> Obj = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p:r&quot;</span>).s:Obj_Extension</span><br><span class=\"line\">        <span class=\"built_in\">let</span> Obj_Name = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p:t:r&quot;</span>).s:Obj_Extension</span><br><span class=\"line\">        <span class=\"keyword\">if</span> !filereadable(Obj) || (filereadable(Obj) &amp;&amp; (getftime(Obj) &lt; getftime(Sou)))</span><br><span class=\"line\">            redraw!</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;c&quot;</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> g:iswindows</span><br><span class=\"line\">                    exe <span class=\"string\">&quot;:setlocal makeprg=&quot;</span>.s:windows_CFlags</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    exe <span class=\"string\">&quot;:setlocal makeprg=&quot;</span>.s:linux_CFlags</span><br><span class=\"line\">                endif</span><br><span class=\"line\">                echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; compiling...&quot;</span></span><br><span class=\"line\">                silent make</span><br><span class=\"line\">            elseif <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;cpp&quot;</span> || <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;cxx&quot;</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> g:iswindows</span><br><span class=\"line\">                    exe <span class=\"string\">&quot;:setlocal makeprg=&quot;</span>.s:windows_CPPFlags</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    exe <span class=\"string\">&quot;:setlocal makeprg=&quot;</span>.s:linux_CPPFlags</span><br><span class=\"line\">                endif</span><br><span class=\"line\">                echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; compiling...&quot;</span></span><br><span class=\"line\">                silent make</span><br><span class=\"line\">            endif</span><br><span class=\"line\">            redraw!</span><br><span class=\"line\">            <span class=\"keyword\">if</span> v:shell_error != 0</span><br><span class=\"line\">                <span class=\"built_in\">let</span> s:LastShellReturn_C = v:shell_error</span><br><span class=\"line\">            endif</span><br><span class=\"line\">            <span class=\"keyword\">if</span> g:iswindows</span><br><span class=\"line\">                <span class=\"keyword\">if</span> s:LastShellReturn_C != 0</span><br><span class=\"line\">                    exe <span class=\"string\">&quot;:bo cope&quot;</span></span><br><span class=\"line\">                    echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; compilation failed&quot;</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> s:ShowWarning</span><br><span class=\"line\">                        exe <span class=\"string\">&quot;:bo cw&quot;</span></span><br><span class=\"line\">                    endif</span><br><span class=\"line\">                    echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; compilation successful&quot;</span></span><br><span class=\"line\">                endif</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> empty(v:statusmsg)</span><br><span class=\"line\">                    echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; compilation successful&quot;</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    exe <span class=\"string\">&quot;:bo cope&quot;</span></span><br><span class=\"line\">                endif</span><br><span class=\"line\">            endif</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot;&quot;</span>Obj_Name<span class=\"string\">&quot;is up to date&quot;</span></span><br><span class=\"line\">        endif</span><br><span class=\"line\">    elseif <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;java&quot;</span></span><br><span class=\"line\">        <span class=\"built_in\">let</span> class = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p:r&quot;</span>).s:Class_Extension</span><br><span class=\"line\">        <span class=\"built_in\">let</span> class_Name = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p:t:r&quot;</span>).s:Class_Extension</span><br><span class=\"line\">        <span class=\"keyword\">if</span> !filereadable(class) || (filereadable(class) &amp;&amp; (getftime(class) &lt; getftime(Sou)))</span><br><span class=\"line\">            redraw!</span><br><span class=\"line\">            exe <span class=\"string\">&quot;:setlocal makeprg=&quot;</span>.s:JavaFlags</span><br><span class=\"line\">            echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; compiling...&quot;</span></span><br><span class=\"line\">            silent make</span><br><span class=\"line\">            redraw!</span><br><span class=\"line\">            <span class=\"keyword\">if</span> v:shell_error != 0</span><br><span class=\"line\">                <span class=\"built_in\">let</span> s:LastShellReturn_C = v:shell_error</span><br><span class=\"line\">            endif</span><br><span class=\"line\">            <span class=\"keyword\">if</span> g:iswindows</span><br><span class=\"line\">                <span class=\"keyword\">if</span> s:LastShellReturn_C != 0</span><br><span class=\"line\">                    exe <span class=\"string\">&quot;:bo cope&quot;</span></span><br><span class=\"line\">                    echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; compilation failed&quot;</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> s:ShowWarning</span><br><span class=\"line\">                        exe <span class=\"string\">&quot;:bo cw&quot;</span></span><br><span class=\"line\">                    endif</span><br><span class=\"line\">                    echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; compilation successful&quot;</span></span><br><span class=\"line\">                endif</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> empty(v:statusmsg)</span><br><span class=\"line\">                    echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; compilation successful&quot;</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    exe <span class=\"string\">&quot;:bo cope&quot;</span></span><br><span class=\"line\">                endif</span><br><span class=\"line\">            endif</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot;&quot;</span>class_Name<span class=\"string\">&quot;is up to date&quot;</span></span><br><span class=\"line\">        endif</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">let</span> s:Sou_Error = 1</span><br><span class=\"line\">        echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; please choose the correct source file&quot;</span></span><br><span class=\"line\">    endif</span><br><span class=\"line\">    exe <span class=\"string\">&quot;:setlocal makeprg=make&quot;</span></span><br><span class=\"line\">endfunc</span><br><span class=\"line\"></span><br><span class=\"line\">func! Link()</span><br><span class=\"line\">    call Compile()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> s:Sou_Error || s:LastShellReturn_C != 0</span><br><span class=\"line\">        <span class=\"built_in\">return</span></span><br><span class=\"line\">    endif</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;c&quot;</span> || <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;cpp&quot;</span> || <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;cxx&quot;</span></span><br><span class=\"line\">        <span class=\"built_in\">let</span> s:LastShellReturn_L = 0</span><br><span class=\"line\">        <span class=\"built_in\">let</span> Sou = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p&quot;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">let</span> Obj = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p:r&quot;</span>).s:Obj_Extension</span><br><span class=\"line\">        <span class=\"keyword\">if</span> g:iswindows</span><br><span class=\"line\">            <span class=\"built_in\">let</span> Exe = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p:r&quot;</span>).s:Exe_Extension</span><br><span class=\"line\">            <span class=\"built_in\">let</span> Exe_Name = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p:t:r&quot;</span>).s:Exe_Extension</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"built_in\">let</span> Exe = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p:r&quot;</span>)</span><br><span class=\"line\">            <span class=\"built_in\">let</span> Exe_Name = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p:t:r&quot;</span>)</span><br><span class=\"line\">        endif</span><br><span class=\"line\">        <span class=\"built_in\">let</span> v:statusmsg = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> filereadable(Obj) &amp;&amp; (getftime(Obj) &gt;= getftime(Sou))</span><br><span class=\"line\">            redraw!</span><br><span class=\"line\">            <span class=\"keyword\">if</span> !executable(Exe) || (executable(Exe) &amp;&amp; getftime(Exe) &lt; getftime(Obj))</span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;c&quot;</span></span><br><span class=\"line\">                    setlocal makeprg=gcc\\ -o\\ %&lt;\\ %&lt;.o</span><br><span class=\"line\">                    echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; linking...&quot;</span></span><br><span class=\"line\">                    silent make</span><br><span class=\"line\">                elseif <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;cpp&quot;</span> || <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;cxx&quot;</span></span><br><span class=\"line\">                    setlocal makeprg=g++\\ -o\\ %&lt;\\ %&lt;.o</span><br><span class=\"line\">                    echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; linking...&quot;</span></span><br><span class=\"line\">                    silent make</span><br><span class=\"line\">                endif</span><br><span class=\"line\">                redraw!</span><br><span class=\"line\">                <span class=\"keyword\">if</span> v:shell_error != 0</span><br><span class=\"line\">                    <span class=\"built_in\">let</span> s:LastShellReturn_L = v:shell_error</span><br><span class=\"line\">                endif</span><br><span class=\"line\">                <span class=\"keyword\">if</span> g:iswindows</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> s:LastShellReturn_L != 0</span><br><span class=\"line\">                        exe <span class=\"string\">&quot;:bo cope&quot;</span></span><br><span class=\"line\">                        echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; linking failed&quot;</span></span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> s:ShowWarning</span><br><span class=\"line\">                            exe <span class=\"string\">&quot;:bo cw&quot;</span></span><br><span class=\"line\">                        endif</span><br><span class=\"line\">                        echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; linking successful&quot;</span></span><br><span class=\"line\">                    endif</span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> empty(v:statusmsg)</span><br><span class=\"line\">                        echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; linking successful&quot;</span></span><br><span class=\"line\">                    <span class=\"keyword\">else</span></span><br><span class=\"line\">                        exe <span class=\"string\">&quot;:bo cope&quot;</span></span><br><span class=\"line\">                    endif</span><br><span class=\"line\">                endif</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot;&quot;</span>Exe_Name<span class=\"string\">&quot;is up to date&quot;</span></span><br><span class=\"line\">            endif</span><br><span class=\"line\">        endif</span><br><span class=\"line\">        setlocal makeprg=make</span><br><span class=\"line\">    elseif <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;java&quot;</span></span><br><span class=\"line\">        <span class=\"built_in\">return</span></span><br><span class=\"line\">    endif</span><br><span class=\"line\">endfunc</span><br><span class=\"line\"></span><br><span class=\"line\">func! Run()</span><br><span class=\"line\">    <span class=\"built_in\">let</span> s:ShowWarning = 0</span><br><span class=\"line\">    call Link()</span><br><span class=\"line\">    <span class=\"built_in\">let</span> s:ShowWarning = 1</span><br><span class=\"line\">    <span class=\"keyword\">if</span> s:Sou_Error || s:LastShellReturn_C != 0 || s:LastShellReturn_L != 0</span><br><span class=\"line\">        <span class=\"built_in\">return</span></span><br><span class=\"line\">    endif</span><br><span class=\"line\">    <span class=\"built_in\">let</span> Sou = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;c&quot;</span> || <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;cpp&quot;</span> || <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;cxx&quot;</span></span><br><span class=\"line\">        <span class=\"built_in\">let</span> Obj = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p:r&quot;</span>).s:Obj_Extension</span><br><span class=\"line\">        <span class=\"keyword\">if</span> g:iswindows</span><br><span class=\"line\">            <span class=\"built_in\">let</span> Exe = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p:r&quot;</span>).s:Exe_Extension</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"built_in\">let</span> Exe = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p:r&quot;</span>)</span><br><span class=\"line\">        endif</span><br><span class=\"line\">        <span class=\"keyword\">if</span> executable(Exe) &amp;&amp; getftime(Exe) &gt;= getftime(Obj) &amp;&amp; getftime(Obj) &gt;= getftime(Sou)</span><br><span class=\"line\">            redraw!</span><br><span class=\"line\">            echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; running...&quot;</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> g:iswindows</span><br><span class=\"line\">                exe <span class=\"string\">&quot;:!%&lt;.exe&quot;</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> g:isGUI</span><br><span class=\"line\">                    exe <span class=\"string\">&quot;:!gnome-terminal -x bash -c &#x27;./%&lt;; echo; echo 请按 Enter 键继续; read&#x27;&quot;</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    exe <span class=\"string\">&quot;:!clear; ./%&lt;&quot;</span></span><br><span class=\"line\">                endif</span><br><span class=\"line\">            endif</span><br><span class=\"line\">            redraw!</span><br><span class=\"line\">            echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; running finish&quot;</span></span><br><span class=\"line\">        endif</span><br><span class=\"line\">    elseif <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:e&quot;</span>) == <span class=\"string\">&quot;java&quot;</span></span><br><span class=\"line\">        <span class=\"built_in\">let</span> class = <span class=\"built_in\">expand</span>(<span class=\"string\">&quot;%:p:r&quot;</span>).s:Class_Extension</span><br><span class=\"line\">        <span class=\"keyword\">if</span> getftime(class) &gt;= getftime(Sou)</span><br><span class=\"line\">            redraw!</span><br><span class=\"line\">            echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; running...&quot;</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> g:iswindows</span><br><span class=\"line\">                exe <span class=\"string\">&quot;:!java %&lt;&quot;</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> g:isGUI</span><br><span class=\"line\">                    exe <span class=\"string\">&quot;:!gnome-terminal -x bash -c &#x27;java %&lt;; echo; echo 请按 Enter 键继续; read&#x27;&quot;</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span></span><br><span class=\"line\">                    exe <span class=\"string\">&quot;:!clear; java %&lt;&quot;</span></span><br><span class=\"line\">                endif</span><br><span class=\"line\">            endif</span><br><span class=\"line\">            redraw!</span><br><span class=\"line\">            echohl WarningMsg | <span class=\"built_in\">echo</span> <span class=\"string\">&quot; running finish&quot;</span></span><br><span class=\"line\">        endif</span><br><span class=\"line\">    endif</span><br><span class=\"line\">endfunc</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; 其它配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">set writebackup                             &quot;</span>保存文件前建立备份，保存成功后删除该备份</span><br><span class=\"line\"><span class=\"built_in\">set</span> nobackup                                <span class=\"string\">&quot;设置无备份文件</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"built_in\">set</span> noswapfile                              <span class=\"string\">&quot;设置无临时文件</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"built_in\">set</span> vb t_vb=                                <span class=\"string\">&quot;关闭提示音</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> =============================================================================</span><br><span class=\"line\"><span class=\"string\">&quot;                          &lt;&lt; 以下为常用插件配置 &gt;&gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> =============================================================================</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; a.vim 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 用于切换C/C++头文件</span><br><span class=\"line\"><span class=\"string\">&quot; :A     ---切换头文件并独占整个窗口</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> :AV    ---切换头文件并垂直分割窗口</span><br><span class=\"line\"><span class=\"string\">&quot; :AS    ---切换头文件并水平分割窗口</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; BufExplorer 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 快速轻松的在缓存中切换（相当于另一种多个文件间的切换方式）</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> &lt;Leader&gt;be 在当前窗口显示缓存列表并打开选定文件</span><br><span class=\"line\"><span class=\"string\">&quot; &lt;Leader&gt;bs 水平分割窗口显示缓存列表，并在缓存列表窗口中打开选定文件</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> &lt;Leader&gt;bv 垂直分割窗口显示缓存列表，并在缓存列表窗口中打开选定文件</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; ccvext.vim 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 用于对指定文件自动生成tags与cscope文件并连接</span><br><span class=\"line\"><span class=\"string\">&quot; 如果是Windows系统, 则生成的文件在源文件所在盘符根目录的.symbs目录下(如: X:\\.symbs\\)</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 如果是Linux系统, 则生成的文件在~/.symbs/目录下</span><br><span class=\"line\"><span class=\"string\">&quot; 具体用法可参考www.vim.org中此插件的说明</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> &lt;Leader&gt;sy 自动生成tags与cscope文件并连接</span><br><span class=\"line\"><span class=\"string\">&quot; &lt;Leader&gt;sc 连接已存在的tags与cscope文件</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; cSyntaxAfter 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 高亮括号与运算符等</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> au! BufRead,BufNewFile,BufEnter *.&#123;c,cpp,h,java,javascript&#125; call CSyntaxAfter()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; indentLine 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 用于显示对齐线，与 indent_guides 在显示方式上不同，根据自己喜好选择了</span><br><span class=\"line\"><span class=\"string\">&quot; 在终端上会有屏幕刷新的问题，这个问题能解决有更好了</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 开启/关闭对齐线</span><br><span class=\"line\">nmap &lt;leader&gt;il :IndentLinesToggle&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 设置Gvim的对齐线样式</span></span><br><span class=\"line\"><span class=\"string\">if g:isGUI</span></span><br><span class=\"line\"><span class=\"string\">    let g:indentLine_char = &quot;</span>┊<span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">    let g:indentLine_first_char = &quot;</span>┊<span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">endif</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 设置终端对齐线颜色，如果不喜欢可以将其注释掉采用默认颜色</span><br><span class=\"line\"><span class=\"built_in\">let</span> g:indentLine_color_term = 239</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 设置 GUI 对齐线颜色，如果不喜欢可以将其注释掉采用默认颜色</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"built_in\">let</span> g:indentLine_color_gui = <span class=\"string\">&#x27;#A4E57E&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; &quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; &quot;</span>  &lt; MiniBufExplorer 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; &quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; &quot;</span> 快速浏览和操作Buffer</span><br><span class=\"line\"><span class=\"string\">&quot; &quot;</span> 主要用于同时打开多个文件并相与切换</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; &quot;</span> <span class=\"built_in\">let</span> g:miniBufExplMapWindowNavArrows = 1     <span class=\"string\">&quot;用Ctrl加方向键切换到上下左右的窗口中去</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"built_in\">let</span> g:miniBufExplMapWindowNavVim = 1        <span class=\"string\">&quot;用&lt;C-k,j,h,l&gt;切换到上下左右的窗口中去</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"built_in\">let</span> g:miniBufExplMapCTabSwitchBufs = 1      <span class=\"string\">&quot;功能增强（不过好像只有在Windows中才有用）</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"string\">&quot;                                            &lt;C-Tab&gt; 向前循环切换到每个buffer上,并在但前窗口打开</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"string\">&quot;                                            &lt;C-S-Tab&gt; 向后循环切换到每个buffer上,并在当前窗口打开</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 在不使用 MiniBufExplorer 插件时也可用&lt;C-k,j,h,l&gt;切换到上下左右的窗口中去</span><br><span class=\"line\">noremap &lt;c-k&gt; &lt;c-w&gt;k</span><br><span class=\"line\">noremap &lt;c-j&gt; &lt;c-w&gt;j</span><br><span class=\"line\">noremap &lt;c-h&gt; &lt;c-w&gt;h</span><br><span class=\"line\">noremap &lt;c-l&gt; &lt;c-w&gt;l</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; neocomplcache 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 关键字补全、文件路径补全、tag补全等等，各种，非常好用，速度超快。</span><br><span class=\"line\"><span class=\"built_in\">let</span> g:neocomplcache_enable_at_startup = 1     <span class=\"string\">&quot;vim 启动时启用插件</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"built_in\">let</span> g:neocomplcache_disable_auto_complete = 1 <span class=\"string\">&quot;不自动弹出补全列表</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 在弹出补全列表后用 &lt;c-p&gt; 或 &lt;c-n&gt; 进行上下选择效果比较好</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; nerdcommenter 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 我主要用于C/C++代码注释(其它的也行)</span><br><span class=\"line\"><span class=\"string\">&quot; 以下为插件默认快捷键，其中的说明是以C/C++为例的，其它语言类似</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> &lt;Leader&gt;ci 以每行一个 /* */ 注释选中行(选中区域所在行)，再输入则取消注释</span><br><span class=\"line\"><span class=\"string\">&quot; &lt;Leader&gt;cm 以一个 /* */ 注释选中行(选中区域所在行)，再输入则称重复注释</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> &lt;Leader&gt;cc 以每行一个 /* */ 注释选中行或区域，再输入则称重复注释</span><br><span class=\"line\"><span class=\"string\">&quot; &lt;Leader&gt;cu 取消选中区域(行)的注释，选中区域(行)内至少有一个 /* */</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> &lt;Leader&gt;ca 在/*...*/与//这两种注释方式中切换（其它语言可能不一样了）</span><br><span class=\"line\"><span class=\"string\">&quot; &lt;Leader&gt;cA 行尾注释</span></span><br><span class=\"line\"><span class=\"string\">let NERDSpaceDelims = 1                     &quot;</span>在左注释符之后，右注释符之前留有空格</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; nerdtree 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 有目录村结构的文件浏览插件</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 常规模式下输入 F2 调用插件</span></span><br><span class=\"line\"><span class=\"string\">nmap &lt;F2&gt; :NERDTreeToggle&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; omnicppcomplete 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 用于C/C++代码补全，这种补全主要针对命名空间、类、结构、共同体等进行补全，详细</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 说明可以参考帮助或网络教程等</span><br><span class=\"line\"><span class=\"string\">&quot; 使用前先执行如下 ctags 命令（本配置中可以直接使用 ccvext 插件来执行以下命令）</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> ctags -R --c++-kinds=+p --fields=+iaS --extra=+q</span><br><span class=\"line\"><span class=\"string\">&quot; 我使用上面的参数生成标签后，对函数使用跳转时会出现多个选择</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 所以我就将--c++-kinds=+p参数给去掉了，如果大侠有什么其它解决方法希望不要保留呀</span><br><span class=\"line\"><span class=\"built_in\">set</span> completeopt=menu                        <span class=\"string\">&quot;关闭预览窗口</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 函数名全局搜索 F3</span><br><span class=\"line\">nmap &lt;F3&gt; &lt;ESC&gt;:CtrlSF &lt;c-r&gt;&lt;c-w&gt;&lt;CR&gt; </span><br><span class=\"line\">nmap &lt;C-F3&gt; &lt;ESC&gt;:CtrlSFOpen&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; SrcExpl 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 增强源代码浏览，其功能就像Windows中的<span class=\"string\">&quot;Source Insight&quot;</span></span><br><span class=\"line\">nmap &lt;F4&gt; :SrcExplToggle&lt;CR&gt;                <span class=\"string\">&quot;打开/闭浏览窗口</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> // Set the height of Source Explorer window</span><br><span class=\"line\"><span class=\"built_in\">let</span> g:SrcExpl_winHeight = 8</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; // Set 100 ms for refreshing the Source Explorer</span></span><br><span class=\"line\"><span class=\"string\">let g:SrcExpl_refreshTime = 100</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> // In order to Avoid conflicts, the Source Explorer should know what plugins</span><br><span class=\"line\"><span class=\"string\">&quot; // are using buffers. And you need add their bufname into the list below</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> // according to the <span class=\"built_in\">command</span> <span class=\"string\">&quot;:buffers!&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">let</span> g:SrcExpl_pluginList = [</span><br><span class=\"line\">        \\ <span class=\"string\">&quot;__Tag_List__&quot;</span>,</span><br><span class=\"line\">        \\ <span class=\"string\">&quot;_NERD_tree_&quot;</span>,</span><br><span class=\"line\">        \\ <span class=\"string\">&quot;Source_Explorer&quot;</span></span><br><span class=\"line\">    \\ ]</span><br><span class=\"line\"><span class=\"string\">&quot; // Do not let the Source Explorer update the tags file when opening          &quot;</span></span><br><span class=\"line\"><span class=\"built_in\">let</span> g:SrcExpl_isUpdateTags = 0</span><br><span class=\"line\"><span class=\"string\">&quot; // Enable/Disable the local definition searching, and note that this is not  &quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot; // guaranteed to work, the Source Explorer doesn&#x27;t check the syntax for now. &quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot; // It only searches for a match with the keyword according to command &#x27;gd&#x27;   &quot;</span></span><br><span class=\"line\"><span class=\"built_in\">let</span> g:SrcExpl_searchLocalDef = 1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 启用 // 注视风格</span></span><br><span class=\"line\"><span class=\"string\">let c_cpp_comments = 0</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; Tagbar 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 相对 TagList 能更好的支持面向对象</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 常规模式下输入 tb 调用插件，如果有打开 TagList 窗口则先将其关闭</span><br><span class=\"line\">nmap tb :TlistClose&lt;CR&gt;:TagbarToggle&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">let</span> g:tagbar_width=30                       <span class=\"string\">&quot;设置窗口宽度</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"built_in\">let</span> g:tagbar_left=1                         <span class=\"string\">&quot;在左侧窗口中显示</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; TagList 插件配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 高效地浏览源码, 其功能就像vc中的workpace</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 那里面列出了当前文件中的所有宏,全局变量, 函数名等</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 常规模式下输入 tl 调用插件，如果有打开 Tagbar 窗口则先将其关闭</span></span><br><span class=\"line\"><span class=\"string\">nmap tl :TagbarClose&lt;CR&gt;:Tlist&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">let Tlist_Show_One_File=1                   &quot;</span>只显示当前文件的tags</span><br><span class=\"line\"><span class=\"string\">&quot; let Tlist_Enable_Fold_Column=0              &quot;</span>使taglist插件不显示左边的折叠行</span><br><span class=\"line\"><span class=\"built_in\">let</span> Tlist_Exit_OnlyWindow=1                <span class=\"string\">&quot;如果Taglist窗口是最后一个窗口则退出Vim</span></span><br><span class=\"line\"><span class=\"string\">let Tlist_File_Fold_Auto_Close=1            &quot;</span>自动折叠</span><br><span class=\"line\"><span class=\"built_in\">let</span> Tlist_WinWidth=30                       <span class=\"string\">&quot;设置窗口宽度</span></span><br><span class=\"line\"><span class=\"string\">let Tlist_Use_Right_Window=1                &quot;</span>在右侧窗口中显示</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; txtbrowser 插件配置 &gt;</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 用于文本文件生成标签与与语法高亮（调用TagList插件生成标签，如果可以）</span><br><span class=\"line\">au BufRead,BufNewFile *.txt setlocal ft=txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; \\ r 快速执行GO</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> au FileType go nmap &lt;leader&gt;r &lt;Plug&gt;(go-run)</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> &lt;rjohnsondev/vim-compiler-go&gt;</span><br><span class=\"line\"><span class=\"string\">&quot; 语法检查  Go 路径</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\">autocmd FileType go compiler golang</span><br><span class=\"line\"><span class=\"built_in\">let</span> g:golang_goroot = <span class=\"string\">&quot;/usr/local/go&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; compile coffee on write</span></span><br><span class=\"line\"><span class=\"string\">let coffee_compile_vert = 1</span></span><br><span class=\"line\"><span class=\"string\">au BufWritePost *.coffee silent execute &#x27;CoffeeMake! -o&#x27;.expand(&#x27;&lt;afile&gt;:p:h&#x27;).&#x27;./&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> auto compile on save</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; =============================================================================</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>                          &lt;&lt; 以下为常用工具配置 &gt;&gt;</span><br><span class=\"line\"><span class=\"string\">&quot; =============================================================================</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; cscope 工具配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 用Cscope自己的话说 - &quot;</span>你可以把它当做是超过频的ctags<span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">if has(&quot;</span>cscope<span class=\"string\">&quot;)</span></span><br><span class=\"line\"><span class=\"string\">    &quot;</span>设定可以使用 quickfix 窗口来查看 cscope 结果</span><br><span class=\"line\">    <span class=\"built_in\">set</span> cscopequickfix=s-,c-,d-,i-,t-,e-</span><br><span class=\"line\">    <span class=\"string\">&quot;使支持用 Ctrl+]  和 Ctrl+t 快捷键在代码间跳转</span></span><br><span class=\"line\"><span class=\"string\">    set cscopetag</span></span><br><span class=\"line\"><span class=\"string\">    &quot;</span>如果你想反向搜索顺序设置为1</span><br><span class=\"line\">    <span class=\"built_in\">set</span> csto=0</span><br><span class=\"line\">    <span class=\"string\">&quot;在当前目录中添加任何数据库</span></span><br><span class=\"line\"><span class=\"string\">    if filereadable(&quot;</span>cscope.out<span class=\"string\">&quot;)</span></span><br><span class=\"line\"><span class=\"string\">        cs add cscope.out</span></span><br><span class=\"line\"><span class=\"string\">    &quot;</span>否则添加数据库环境中所指出的</span><br><span class=\"line\">    elseif <span class=\"variable\">$CSCOPE_DB</span> != <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">        cs add <span class=\"variable\">$CSCOPE_DB</span></span><br><span class=\"line\">    endif</span><br><span class=\"line\">    <span class=\"built_in\">set</span> cscopeverbose</span><br><span class=\"line\">    <span class=\"string\">&quot;快捷键设置</span></span><br><span class=\"line\"><span class=\"string\">    nmap &lt;C-\\&gt;s :cs find s &lt;C-R&gt;=expand(&quot;</span>&lt;cword&gt;<span class=\"string\">&quot;)&lt;CR&gt;&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">    nmap &lt;C-\\&gt;g :cs find g &lt;C-R&gt;=expand(&quot;</span>&lt;cword&gt;<span class=\"string\">&quot;)&lt;CR&gt;&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">    nmap &lt;C-\\&gt;c :cs find c &lt;C-R&gt;=expand(&quot;</span>&lt;cword&gt;<span class=\"string\">&quot;)&lt;CR&gt;&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">    nmap &lt;C-\\&gt;t :cs find t &lt;C-R&gt;=expand(&quot;</span>&lt;cword&gt;<span class=\"string\">&quot;)&lt;CR&gt;&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">    nmap &lt;C-\\&gt;e :cs find e &lt;C-R&gt;=expand(&quot;</span>&lt;cword&gt;<span class=\"string\">&quot;)&lt;CR&gt;&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">    nmap &lt;C-\\&gt;f :cs find f &lt;C-R&gt;=expand(&quot;</span>&lt;cfile&gt;<span class=\"string\">&quot;)&lt;CR&gt;&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">    nmap &lt;C-\\&gt;i :cs find i ^&lt;C-R&gt;=expand(&quot;</span>&lt;cfile&gt;<span class=\"string\">&quot;)&lt;CR&gt;$&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">    nmap &lt;C-\\&gt;d :cs find d &lt;C-R&gt;=expand(&quot;</span>&lt;cword&gt;<span class=\"string\">&quot;)&lt;CR&gt;&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">endif</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; ctags 工具配置 &gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 对浏览代码非常的方便,可以在函数,变量之间跳转等</span></span><br><span class=\"line\"><span class=\"string\">set tags=./tags;                            &quot;</span>向上级目录递归查找tags文件（好像只有在Windows下才有用）</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>  &lt; gvimfullscreen 工具配置 &gt; 请确保已安装了工具</span><br><span class=\"line\"><span class=\"string\">&quot; -----------------------------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 用于 Windows Gvim 全屏窗口，可用 F11 切换</span><br><span class=\"line\"><span class=\"string\">&quot; 全屏后再隐藏菜单栏、工具栏、滚动条效果更好</span></span><br><span class=\"line\"><span class=\"string\">if (g:iswindows &amp;&amp; g:isGUI)</span></span><br><span class=\"line\"><span class=\"string\">    nmap &lt;F11&gt; &lt;Esc&gt;:call libcallnr(&quot;</span>gvimfullscreen.dll<span class=\"string\">&quot;, &quot;</span>ToggleFullScreen<span class=\"string\">&quot;, 0)&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">endif</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot;  &lt; vimtweak 工具配置 &gt; 请确保以已装了工具</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> -----------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"string\">&quot; 这里只用于窗口透明与置顶</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 常规模式下 Ctrl + Up（上方向键） 增加不透明度，Ctrl + Down（下方向键） 减少不透明度，&lt;Leader&gt;t 窗口置顶与否切换</span><br><span class=\"line\"><span class=\"keyword\">if</span> (g:iswindows &amp;&amp; g:isGUI)</span><br><span class=\"line\">    <span class=\"built_in\">let</span> g:Current_Alpha = 255</span><br><span class=\"line\">    <span class=\"built_in\">let</span> g:Top_Most = 0</span><br><span class=\"line\">    func! Alpha_add()</span><br><span class=\"line\">        <span class=\"built_in\">let</span> g:Current_Alpha = g:Current_Alpha + 10</span><br><span class=\"line\">        <span class=\"keyword\">if</span> g:Current_Alpha &gt; 255</span><br><span class=\"line\">            <span class=\"built_in\">let</span> g:Current_Alpha = 255</span><br><span class=\"line\">        endif</span><br><span class=\"line\">        call libcallnr(<span class=\"string\">&quot;vimtweak.dll&quot;</span>,<span class=\"string\">&quot;SetAlpha&quot;</span>,g:Current_Alpha)</span><br><span class=\"line\">    endfunc</span><br><span class=\"line\">    func! Alpha_sub()</span><br><span class=\"line\">        <span class=\"built_in\">let</span> g:Current_Alpha = g:Current_Alpha - 10</span><br><span class=\"line\">        <span class=\"keyword\">if</span> g:Current_Alpha &lt; 155</span><br><span class=\"line\">            <span class=\"built_in\">let</span> g:Current_Alpha = 155</span><br><span class=\"line\">        endif</span><br><span class=\"line\">        call libcallnr(<span class=\"string\">&quot;vimtweak.dll&quot;</span>,<span class=\"string\">&quot;SetAlpha&quot;</span>,g:Current_Alpha)</span><br><span class=\"line\">    endfunc</span><br><span class=\"line\">    func! Top_window()</span><br><span class=\"line\">        <span class=\"keyword\">if</span>  g:Top_Most == 0</span><br><span class=\"line\">            call libcallnr(<span class=\"string\">&quot;vimtweak.dll&quot;</span>,<span class=\"string\">&quot;EnableTopMost&quot;</span>,1)</span><br><span class=\"line\">            <span class=\"built_in\">let</span> g:Top_Most = 1</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            call libcallnr(<span class=\"string\">&quot;vimtweak.dll&quot;</span>,<span class=\"string\">&quot;EnableTopMost&quot;</span>,0)</span><br><span class=\"line\">            <span class=\"built_in\">let</span> g:Top_Most = 0</span><br><span class=\"line\">        endif</span><br><span class=\"line\">    endfunc</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot;快捷键设置</span></span><br><span class=\"line\"><span class=\"string\">    nmap &lt;c-up&gt; :call Alpha_add()&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">    nmap &lt;c-down&gt; :call Alpha_sub()&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">    nmap &lt;leader&gt;t :call Top_window()&lt;CR&gt;</span></span><br><span class=\"line\"><span class=\"string\">endif</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> =============================================================================</span><br><span class=\"line\"><span class=\"string\">&quot;                          &lt;&lt; 以下为常用自动命令配置 &gt;&gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> =============================================================================</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; 自动切换目录为当前编辑文件所在目录</span></span><br><span class=\"line\"><span class=\"string\">au BufRead,BufNewFile,BufEnter * cd %:p:h</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> =============================================================================</span><br><span class=\"line\"><span class=\"string\">&quot;                     &lt;&lt; windows 下解决 Quickfix 乱码问题 &gt;&gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> =============================================================================</span><br><span class=\"line\"><span class=\"string\">&quot; windows 默认编码为 cp936，而 Gvim(Vim) 内部编码为 utf-8，所以常常输出为乱码</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 以下代码可以将编码为 cp936 的输出信息转换为 utf-8 编码，以解决输出乱码问题</span><br><span class=\"line\"><span class=\"string\">&quot; 但好像只对输出信息全部为中文才有满意的效果，如果输出信息是中英混合的，那可能</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 不成功，会造成其中一种语言乱码，输出信息全部为英文的好像不会乱码</span><br><span class=\"line\"><span class=\"string\">&quot; 如果输出信息为乱码的可以试一下下面的代码，如果不行就还是给它注释掉</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"keyword\">if</span> g:iswindows</span><br><span class=\"line\"><span class=\"string\">&quot;     function QfMakeConv()</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>         <span class=\"built_in\">let</span> qflist = getqflist()</span><br><span class=\"line\"><span class=\"string\">&quot;         for i in qflist</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>            <span class=\"built_in\">let</span> i.text = iconv(i.text, <span class=\"string\">&quot;cp936&quot;</span>, <span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\"><span class=\"string\">&quot;         endfor</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>         call setqflist(qflist)</span><br><span class=\"line\"><span class=\"string\">&quot;      endfunction</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span>      au QuickfixCmdPost make call QfMakeConv()</span><br><span class=\"line\"><span class=\"string\">&quot; endif</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> =============================================================================</span><br><span class=\"line\"><span class=\"string\">&quot;                          &lt;&lt; 其它 &gt;&gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> =============================================================================</span><br><span class=\"line\"><span class=\"string\">&quot; 注：上面配置中的&quot;</span>&lt;Leader&gt;<span class=\"string\">&quot;在本软件中设置为&quot;</span>\\&quot;键（引号里的反斜杠），如&lt;Leader&gt;t</span><br><span class=\"line\"><span class=\"string\">&quot; 指在常规模式下按&quot;</span>\\&quot;键加<span class=\"string\">&quot;t&quot;</span>键，这里不是同时按，而是先按<span class=\"string\">&quot;\\&quot;键后按&quot;</span>t<span class=\"string\">&quot;键，间隔在一</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 秒内，而&lt;Leader&gt;cs是先按<span class=\"string\">&quot;\\&quot;键再按&quot;</span>c<span class=\"string\">&quot;又再按&quot;</span>s<span class=\"string\">&quot;键；如要修改&quot;</span>&lt;leader&gt;<span class=\"string\">&quot;键，可以把</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> 下面的设置取消注释，并修改双引号中的键为你想要的，如修改为逗号键。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot; let mapleader = &quot;</span>,<span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"string\">&quot; =============================================================================</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"string\">&quot;                          &lt;&lt; 五笔拼音输入法 &gt;&gt;</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"string\">&quot;                           调用 C + S + 空格</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> <span class=\"string\">&quot; =============================================================================</span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_ims=[</span></span><br><span class=\"line\"><span class=\"string\">             \\[&#x27;wb&#x27;, &#x27;五笔&#x27;, &#x27;wubi.ywvim&#x27;],</span></span><br><span class=\"line\"><span class=\"string\">             \\[&#x27;py&#x27;, &#x27;拼音&#x27;, &#x27;pinyin.ywvim&#x27;],</span></span><br><span class=\"line\"><span class=\"string\">             \\]</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_py = &#123; &#x27;helpim&#x27;:&#x27;py&#x27;, &#x27;gb&#x27;:0   &#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_zhpunc = 1</span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_listmax = 5</span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_esc_autoff = 0</span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_autoinput = 0</span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_circlecandidates = 1</span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_helpim_on = 0</span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_matchexact = 0</span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_chinesecode = 1</span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_gb = 0</span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_preconv = &#x27;g2b&#x27;</span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_conv = &#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">let g:ywvim_lockb = 1</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>保存配置文件于 ~&#x2F;.vimrc ，进入 vim 执行 <strong>:PluginInstall</strong>，进行插件安装</p>\n</blockquote>\n<h2 id=\"部分插件说明\"><a href=\"#部分插件说明\" class=\"headerlink\" title=\"部分插件说明\"></a>部分插件说明</h2><h3 id=\"Bundle\"><a href=\"#Bundle\" class=\"headerlink\" title=\"Bundle\"></a>Bundle</h3><p>Windows 使用 Bundle 安装插件之前还需要先安装 Git for Windows 然后将 git 目录加入环境变量 ，如 C:\\Program Files (x86)\\Git\\bin 运行 vim 执行 :PluginInstall , 等待插件全部安装完成。</p>\n<h3 id=\"ctags-自动提示\"><a href=\"#ctags-自动提示\" class=\"headerlink\" title=\"ctags 自动提示\"></a>ctags 自动提示</h3><blockquote>\n<p>Ctags 需要先下载并编译 <a href=\"http://ctags.sf.net/\">http://ctags.sf.net</a> , Windows版本下载 zip 文件 并加入环境变量 C:\\Program Files (x86)\\Vim\\ctags58<br>Linux 下载源码包编译安装 或使用 apt-get 安装 </p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install ctags</span><br></pre></td></tr></table></figure>\n\n<p>Mac 下使用 brew 安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install ctags</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>由于 mac 自带一个ctags，而taglist要求的是exuberant crags，所以我们给我们安装的 tags 一个别名</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.zsh_aliases </span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>如果使用的是默认的 bash 那应该修改 ~&#x2F;.bash_aliases 或者 ~&#x2F;.profile</p>\n</blockquote>\n<p>添加行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> ctags2=<span class=\"string\">&quot;/usr/local/Cellar/ctags/5.8_1/bin/ctags&quot;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>使用 ctags 命令生成 ctags 文件</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ctags -R</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>生成完 ctags 文件于本目录中 Vim 中使用</p>\n</blockquote>\n<p>C + ] 命令跳转至函数定义处</p>\n<p>C + t 返回跳转前函数</p>\n<h3 id=\"Align-自动对齐\"><a href=\"#Align-自动对齐\" class=\"headerlink\" title=\"Align 自动对齐\"></a>Align 自动对齐</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\t=  : align assignments (don<span class=\"string\">&#x27;t count logic, like == or !=) </span></span><br><span class=\"line\"><span class=\"string\">\\t,  : align on commas </span></span><br><span class=\"line\"><span class=\"string\">\\t|  : align on vertical bars (|) </span></span><br><span class=\"line\"><span class=\"string\">\\tsp : align on whitespace </span></span><br><span class=\"line\"><span class=\"string\">\\tt  : align LaTeX tabular tables</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"ACK-快速查询函数定义\"><a href=\"#ACK-快速查询函数定义\" class=\"headerlink\" title=\"ACK 快速查询函数定义\"></a>ACK 快速查询函数定义</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install ack</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>默认配置中使用快捷键 F3 触发查看</p>\n</blockquote>\n<h3 id=\"NERDTree-文件目录树查看\"><a href=\"#NERDTree-文件目录树查看\" class=\"headerlink\" title=\"NERDTree 文件目录树查看\"></a>NERDTree 文件目录树查看</h3><blockquote>\n<p>默认配置中使用快捷键 F2 切换打开&#x2F;关闭<br>NERDTree提供了丰富的键盘操作方式来浏览和打开文件，一些常用的快捷键：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过h j k l移动光标定位</span><br><span class=\"line\">o 打开关闭文件或者目录，如果是文件的话，光标出现在打开的文件中</span><br><span class=\"line\">go 效果同上，不过光标保持在文件目录里，类似预览文件内容的功能</span><br><span class=\"line\">i和s可以水平分割或纵向分割窗口打开文件，前面加g类似go的功能</span><br><span class=\"line\">t 在标签页中打开</span><br><span class=\"line\">T 在后台标签页中打开</span><br><span class=\"line\">p 到上层目录</span><br><span class=\"line\">P 到根目录</span><br><span class=\"line\">K 到同目录第一个节点</span><br><span class=\"line\">J 到同目录最后一个节点</span><br><span class=\"line\">m 显示文件系统菜单（添加、删除、移动操作）</span><br><span class=\"line\">? 帮助</span><br><span class=\"line\">q 关闭</span><br><span class=\"line\"><span class=\"string\">&quot; &lt;Leader&gt;be 在当前窗口显示缓存列表并打开选定文件</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> &lt;Leader&gt;bs 水平分割窗口显示缓存列表，并在缓存列表窗口中打开选定文件</span><br><span class=\"line\"><span class=\"string\">&quot; &lt;Leader&gt;bv 垂直分割窗口显示缓存列表，并在缓存列表窗口中打开选定文件</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&lt;Leader&gt; 指 \\ 反斜杠</span></span><br><span class=\"line\"><span class=\"string\">想了解更多操作方式，可以通过? 查看详细的帮助信息。</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"VIM-的其他命令\"><a href=\"#VIM-的其他命令\" class=\"headerlink\" title=\"VIM 的其他命令\"></a>VIM 的其他命令</h3><ul>\n<li>转到您的目录 cd xx</li>\n<li>首次启动时执行 ctags -R 自动生成 tag</li>\n<li>启动VIM  vim</li>\n<li>F2 打开左侧文件树，r 刷新当前目录 R 刷新全部目录</li>\n<li>tb 打开右侧函数列表 （或 tl）</li>\n<li>F3 打开变量&#x2F;方法说明</li>\n<li>C + ] 跳转至方法&#x2F;变量 定义处 同上一个方法 只是这个会跳转, 如果只是想瞥一下方法的功能使用 F4 即可, F3 全项目搜索该函数定义</li>\n<li>C + t 上一个方法跳过去后使用这个跳回来</li>\n<li>C + p 全项目搜索文件名称</li>\n<li>C + h &#x2F; j &#x2F;k &#x2F; l 可以在多窗口中移动 亦可用于 主窗口中跳至文件树列表或跳至 函数列表等<br>在文件树窗口中</li>\n<li>o 打开文件在主窗口 &#x2F; 折叠或展开目录</li>\n<li>t 在新 tab 中打开</li>\n<li>T 在新 tab 中打开不激活（即后台）</li>\n<li>i 水平分隔主窗口并打开该文件</li>\n<li>s 纵向分隔主窗口并打开该文件</li>\n<li>打开了多个文件后 \\be 查看在缓存中的文件 （有点像 tab 如果没有关闭的都可以切换）<br>\\cc 注释掉选择行 \\cu 反注释 \\cc 的行</li>\n<li>如果开了多个 tab （即使用 t &#x2F; T 打开了文件） gt 切换到下一个 tab  gT 切换到上一个 tab</li>\n<li>自动提示 使用 C + j &#x2F; C + k 选择列表中的内容</li>\n<li>Html 文件中 emmet 使用 c + y 后 , 逗号 来展开</li>\n<li>\\t&#x3D; 格式化选中行</li>\n<li>Esc 离得比较远的可以将 Caps Lock 键换成 Esc 在 插入 (insert) 模式下 还可以使用 C + h &#x2F; j &#x2F; k &#x2F; l 来移动 可参考 <a href=\"/2016/05/05/%E4%BA%92%E6%8D%A2-Ctrl-Caps-Lock-%E6%8C%89%E9%94%AE/\">互换-Ctrl-Caps-Lock-按键</a></li>\n<li>输入中文 C + S + SPACE 默认五笔 z 键临时拼音，用拼音的直接删除配置中的五笔即可</li>\n<li>编译相关 F9 保存、编译、打开</li>\n</ul>"},{"title":"Mysql 群集配置","date":"2016-10-11T02:52:54.000Z","_content":"\n>Mysql 配置读写分离, 降低读服务器压力\n\n\n## 主 Mysql 配置\n\n### 编辑主 Mysql 服务器的MySQL配置文件my.cnf\n> 一般位置（/etc/my.cnf / /usr/local/Cellar/mysql/5.6.25/my.cnf）\n> 在[mysqld]下面添加以下参数：\n<!-- more -->\n\n``` conf\nlog-bin=mysql-bin #开启MYSQL二进制日志\nserver-id=1 #服务器ID不能重复\nbinlog-do-db=brpg #需要做主从备份的数据库名字\nexpire-logs-days = 7 #只保留7天的二进制日志，以防磁盘被日志占满\n```\n\n### 在 A 服务器添加一个用于主从复制的帐号\n>登陆mysql命令行，执行\n\n``` bash\nGRANT REPLICATION SLAVE ON *.* TO '帐号'@'从服务器IP' IDENTIFIED BY '密码';\n```\n\n### 在主MySQL服务器上执行命令，把数据库设置成只读状态\n\n``` bash\nFLUSH TABLES WITH READ LOCK;\n```\n\n### 导出数据文件\n\n``` bash\nmysqldump -uroot -p brpg > brpg.sql\n```\n\n### 回到 Mysql，解封数据库只读状态\n\n``` bash\nUNLOCK TABLES;\n```\n\n### 重新启动 Mysql 让主 Mysql 配置生效\n\n``` bash\nservice mysqld restart\n```\n\n### 记下file及position的值\n\n``` bash\nshow master status;\n```\n\n## 从 Mysql 配置\n\n### 编辑从 Mysql 服务器的MySQL配置文件my.cnf\n``` conf\nserver-id=2 #服务器ID不能重复\nreplicate-do-db=brpg #需要做复制的数据库名\n#replicate-ignore-table=brpg.xx #需要自动跳过的表\nslave-skip-errors = 1032,1062,126,1114,1146,1048,1396 #自动跳过的错误代码，以防复制出错被中断\n```\n\n>Mysql 5.5 或更高版本不支持 master- 相关配置\n\n### 将主库上备份的数据库恢复到从库\n\n### 重启从库MYSQL\n\n### 登录从库的MySQL命令行\n\n```bash\nchange master to master_host='192.168.0.2', master_user='mysqlrun', master_password='123', master_log_file='file的值', master_log_pos=position的值;\n```\n\n> 设置成主库的连接信息，file及position的值是之前记录下来，position的值没有单引号，其他的值要单引号\n\n### 启动从库连接\n```bash\nstart slave; \n```\n\n### 查看从库状态\n\n```bash\nshow slave status\\G; #查看连接情况，是不是两个YES，两个YES为成功\n```\n\n```bash\nSlave_IO_Running: Yes\nSlave_SQL_Running: Yes\n```\n\n### 如果从服务器启动出现报错\n>Slave_IO_Running: Connect\n\n\n>>需要先检查主 Mysql 的账号密码是否正确\n>>主从的 my.cnf bind_ip 一栏设置的 ips 是否正确\n>>主服务器与从服务器的防火墙 是否已经允许 3306 进出 (telnet ip:3306)\n\n#### iptables 设置\n``` bash\nservice iptables stop\niptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 3306 -j ACCEPT\nservice iptables save\nservice iptables start\n```\n\n### ufw 设置\n```bash\nufw allow 3306/tcp # 允许 3306 端口通过\n \n# 其他设置\nufw disable # 禁用\nufw enable # 启动\n# 查看状态\nufw status numbered\n \n:# ufw status numbered\n[ 1] 3306/tcp                   ALLOW IN    Anywhere\n[ 2] 3306/tcp (v6)              ALLOW IN    Anywhere (v6)\n \n# 根据序号删除\nufw delete 1\nufw delete 2\n```\n\n> bash Slave_IO_Running: No\n> Last_IO_Error: Fatal error: The slave I/O thread stops because master and slave have equal MySQL server UUIDs; these UUIDs must be d\n\n>> 那可能是因为2台服务器是复制过去的，登录任意一台服务器，重新生成 Mysql 的 auto.cnf\n\n```bash\nmv /usr/local/mysql/var/auto.cnf /usr/local/mysql/var/auto.bak.cnf #重命名该名称\n```\n\n```bash\nservice mysql restart # 重新启动 mysql ，Mysql 会重新生成 auto.cnf\n```","source":"_posts/Mysql-群集配置.md","raw":"---\ntitle: Mysql 群集配置\ndate: 2016-10-11 10:52:54\ntags: \n- dev\n- mysql \n- 数据库\n---\n\n>Mysql 配置读写分离, 降低读服务器压力\n\n\n## 主 Mysql 配置\n\n### 编辑主 Mysql 服务器的MySQL配置文件my.cnf\n> 一般位置（/etc/my.cnf / /usr/local/Cellar/mysql/5.6.25/my.cnf）\n> 在[mysqld]下面添加以下参数：\n<!-- more -->\n\n``` conf\nlog-bin=mysql-bin #开启MYSQL二进制日志\nserver-id=1 #服务器ID不能重复\nbinlog-do-db=brpg #需要做主从备份的数据库名字\nexpire-logs-days = 7 #只保留7天的二进制日志，以防磁盘被日志占满\n```\n\n### 在 A 服务器添加一个用于主从复制的帐号\n>登陆mysql命令行，执行\n\n``` bash\nGRANT REPLICATION SLAVE ON *.* TO '帐号'@'从服务器IP' IDENTIFIED BY '密码';\n```\n\n### 在主MySQL服务器上执行命令，把数据库设置成只读状态\n\n``` bash\nFLUSH TABLES WITH READ LOCK;\n```\n\n### 导出数据文件\n\n``` bash\nmysqldump -uroot -p brpg > brpg.sql\n```\n\n### 回到 Mysql，解封数据库只读状态\n\n``` bash\nUNLOCK TABLES;\n```\n\n### 重新启动 Mysql 让主 Mysql 配置生效\n\n``` bash\nservice mysqld restart\n```\n\n### 记下file及position的值\n\n``` bash\nshow master status;\n```\n\n## 从 Mysql 配置\n\n### 编辑从 Mysql 服务器的MySQL配置文件my.cnf\n``` conf\nserver-id=2 #服务器ID不能重复\nreplicate-do-db=brpg #需要做复制的数据库名\n#replicate-ignore-table=brpg.xx #需要自动跳过的表\nslave-skip-errors = 1032,1062,126,1114,1146,1048,1396 #自动跳过的错误代码，以防复制出错被中断\n```\n\n>Mysql 5.5 或更高版本不支持 master- 相关配置\n\n### 将主库上备份的数据库恢复到从库\n\n### 重启从库MYSQL\n\n### 登录从库的MySQL命令行\n\n```bash\nchange master to master_host='192.168.0.2', master_user='mysqlrun', master_password='123', master_log_file='file的值', master_log_pos=position的值;\n```\n\n> 设置成主库的连接信息，file及position的值是之前记录下来，position的值没有单引号，其他的值要单引号\n\n### 启动从库连接\n```bash\nstart slave; \n```\n\n### 查看从库状态\n\n```bash\nshow slave status\\G; #查看连接情况，是不是两个YES，两个YES为成功\n```\n\n```bash\nSlave_IO_Running: Yes\nSlave_SQL_Running: Yes\n```\n\n### 如果从服务器启动出现报错\n>Slave_IO_Running: Connect\n\n\n>>需要先检查主 Mysql 的账号密码是否正确\n>>主从的 my.cnf bind_ip 一栏设置的 ips 是否正确\n>>主服务器与从服务器的防火墙 是否已经允许 3306 进出 (telnet ip:3306)\n\n#### iptables 设置\n``` bash\nservice iptables stop\niptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 3306 -j ACCEPT\nservice iptables save\nservice iptables start\n```\n\n### ufw 设置\n```bash\nufw allow 3306/tcp # 允许 3306 端口通过\n \n# 其他设置\nufw disable # 禁用\nufw enable # 启动\n# 查看状态\nufw status numbered\n \n:# ufw status numbered\n[ 1] 3306/tcp                   ALLOW IN    Anywhere\n[ 2] 3306/tcp (v6)              ALLOW IN    Anywhere (v6)\n \n# 根据序号删除\nufw delete 1\nufw delete 2\n```\n\n> bash Slave_IO_Running: No\n> Last_IO_Error: Fatal error: The slave I/O thread stops because master and slave have equal MySQL server UUIDs; these UUIDs must be d\n\n>> 那可能是因为2台服务器是复制过去的，登录任意一台服务器，重新生成 Mysql 的 auto.cnf\n\n```bash\nmv /usr/local/mysql/var/auto.cnf /usr/local/mysql/var/auto.bak.cnf #重命名该名称\n```\n\n```bash\nservice mysql restart # 重新启动 mysql ，Mysql 会重新生成 auto.cnf\n```","slug":"Mysql-群集配置","published":1,"updated":"2023-03-06T13:38:31.392Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq33000ffb8h9fhp9abp","content":"<blockquote>\n<p>Mysql 配置读写分离, 降低读服务器压力</p>\n</blockquote>\n<h2 id=\"主-Mysql-配置\"><a href=\"#主-Mysql-配置\" class=\"headerlink\" title=\"主 Mysql 配置\"></a>主 Mysql 配置</h2><h3 id=\"编辑主-Mysql-服务器的MySQL配置文件my-cnf\"><a href=\"#编辑主-Mysql-服务器的MySQL配置文件my-cnf\" class=\"headerlink\" title=\"编辑主 Mysql 服务器的MySQL配置文件my.cnf\"></a>编辑主 Mysql 服务器的MySQL配置文件my.cnf</h3><blockquote>\n<p>一般位置（&#x2F;etc&#x2F;my.cnf &#x2F; &#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;mysql&#x2F;5.6.25&#x2F;my.cnf）<br>在[mysqld]下面添加以下参数：</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">log-bin=mysql-bin #开启MYSQL二进制日志</span><br><span class=\"line\">server-id=1 #服务器ID不能重复</span><br><span class=\"line\">binlog-do-db=brpg #需要做主从备份的数据库名字</span><br><span class=\"line\">expire-logs-days = 7 #只保留7天的二进制日志，以防磁盘被日志占满</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在-A-服务器添加一个用于主从复制的帐号\"><a href=\"#在-A-服务器添加一个用于主从复制的帐号\" class=\"headerlink\" title=\"在 A 服务器添加一个用于主从复制的帐号\"></a>在 A 服务器添加一个用于主从复制的帐号</h3><blockquote>\n<p>登陆mysql命令行，执行</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GRANT REPLICATION SLAVE ON *.* TO <span class=\"string\">&#x27;帐号&#x27;</span>@<span class=\"string\">&#x27;从服务器IP&#x27;</span> IDENTIFIED BY <span class=\"string\">&#x27;密码&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在主MySQL服务器上执行命令，把数据库设置成只读状态\"><a href=\"#在主MySQL服务器上执行命令，把数据库设置成只读状态\" class=\"headerlink\" title=\"在主MySQL服务器上执行命令，把数据库设置成只读状态\"></a>在主MySQL服务器上执行命令，把数据库设置成只读状态</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FLUSH TABLES WITH READ LOCK;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"导出数据文件\"><a href=\"#导出数据文件\" class=\"headerlink\" title=\"导出数据文件\"></a>导出数据文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqldump -uroot -p brpg &gt; brpg.sql</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"回到-Mysql，解封数据库只读状态\"><a href=\"#回到-Mysql，解封数据库只读状态\" class=\"headerlink\" title=\"回到 Mysql，解封数据库只读状态\"></a>回到 Mysql，解封数据库只读状态</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UNLOCK TABLES;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"重新启动-Mysql-让主-Mysql-配置生效\"><a href=\"#重新启动-Mysql-让主-Mysql-配置生效\" class=\"headerlink\" title=\"重新启动 Mysql 让主 Mysql 配置生效\"></a>重新启动 Mysql 让主 Mysql 配置生效</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service mysqld restart</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"记下file及position的值\"><a href=\"#记下file及position的值\" class=\"headerlink\" title=\"记下file及position的值\"></a>记下file及position的值</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show master status;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"从-Mysql-配置\"><a href=\"#从-Mysql-配置\" class=\"headerlink\" title=\"从 Mysql 配置\"></a>从 Mysql 配置</h2><h3 id=\"编辑从-Mysql-服务器的MySQL配置文件my-cnf\"><a href=\"#编辑从-Mysql-服务器的MySQL配置文件my-cnf\" class=\"headerlink\" title=\"编辑从 Mysql 服务器的MySQL配置文件my.cnf\"></a>编辑从 Mysql 服务器的MySQL配置文件my.cnf</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server-id=2 #服务器ID不能重复</span><br><span class=\"line\">replicate-do-db=brpg #需要做复制的数据库名</span><br><span class=\"line\">#replicate-ignore-table=brpg.xx #需要自动跳过的表</span><br><span class=\"line\">slave-skip-errors = 1032,1062,126,1114,1146,1048,1396 #自动跳过的错误代码，以防复制出错被中断</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>Mysql 5.5 或更高版本不支持 master- 相关配置</p>\n</blockquote>\n<h3 id=\"将主库上备份的数据库恢复到从库\"><a href=\"#将主库上备份的数据库恢复到从库\" class=\"headerlink\" title=\"将主库上备份的数据库恢复到从库\"></a>将主库上备份的数据库恢复到从库</h3><h3 id=\"重启从库MYSQL\"><a href=\"#重启从库MYSQL\" class=\"headerlink\" title=\"重启从库MYSQL\"></a>重启从库MYSQL</h3><h3 id=\"登录从库的MySQL命令行\"><a href=\"#登录从库的MySQL命令行\" class=\"headerlink\" title=\"登录从库的MySQL命令行\"></a>登录从库的MySQL命令行</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">change master to master_host=<span class=\"string\">&#x27;192.168.0.2&#x27;</span>, master_user=<span class=\"string\">&#x27;mysqlrun&#x27;</span>, master_password=<span class=\"string\">&#x27;123&#x27;</span>, master_log_file=<span class=\"string\">&#x27;file的值&#x27;</span>, master_log_pos=position的值;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>设置成主库的连接信息，file及position的值是之前记录下来，position的值没有单引号，其他的值要单引号</p>\n</blockquote>\n<h3 id=\"启动从库连接\"><a href=\"#启动从库连接\" class=\"headerlink\" title=\"启动从库连接\"></a>启动从库连接</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">start slave; </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查看从库状态\"><a href=\"#查看从库状态\" class=\"headerlink\" title=\"查看从库状态\"></a>查看从库状态</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show slave status\\G; <span class=\"comment\">#查看连接情况，是不是两个YES，两个YES为成功</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Slave_IO_Running: Yes</span><br><span class=\"line\">Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"如果从服务器启动出现报错\"><a href=\"#如果从服务器启动出现报错\" class=\"headerlink\" title=\"如果从服务器启动出现报错\"></a>如果从服务器启动出现报错</h3><blockquote>\n<p>Slave_IO_Running: Connect</p>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>需要先检查主 Mysql 的账号密码是否正确<br>主从的 my.cnf bind_ip 一栏设置的 ips 是否正确<br>主服务器与从服务器的防火墙 是否已经允许 3306 进出 (telnet ip:3306)</p>\n</blockquote>\n</blockquote>\n<h4 id=\"iptables-设置\"><a href=\"#iptables-设置\" class=\"headerlink\" title=\"iptables 设置\"></a>iptables 设置</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service iptables stop</span><br><span class=\"line\">iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 3306 -j ACCEPT</span><br><span class=\"line\">service iptables save</span><br><span class=\"line\">service iptables start</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"ufw-设置\"><a href=\"#ufw-设置\" class=\"headerlink\" title=\"ufw 设置\"></a>ufw 设置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ufw allow 3306/tcp <span class=\"comment\"># 允许 3306 端口通过</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 其他设置</span></span><br><span class=\"line\">ufw <span class=\"built_in\">disable</span> <span class=\"comment\"># 禁用</span></span><br><span class=\"line\">ufw <span class=\"built_in\">enable</span> <span class=\"comment\"># 启动</span></span><br><span class=\"line\"><span class=\"comment\"># 查看状态</span></span><br><span class=\"line\">ufw status numbered</span><br><span class=\"line\"> </span><br><span class=\"line\">:<span class=\"comment\"># ufw status numbered</span></span><br><span class=\"line\">[ 1] 3306/tcp                   ALLOW IN    Anywhere</span><br><span class=\"line\">[ 2] 3306/tcp (v6)              ALLOW IN    Anywhere (v6)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 根据序号删除</span></span><br><span class=\"line\">ufw delete 1</span><br><span class=\"line\">ufw delete 2</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>bash Slave_IO_Running: No<br>Last_IO_Error: Fatal error: The slave I&#x2F;O thread stops because master and slave have equal MySQL server UUIDs; these UUIDs must be d</p>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>那可能是因为2台服务器是复制过去的，登录任意一台服务器，重新生成 Mysql 的 auto.cnf</p>\n</blockquote>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mv</span> /usr/local/mysql/var/auto.cnf /usr/local/mysql/var/auto.bak.cnf <span class=\"comment\">#重命名该名称</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service mysql restart <span class=\"comment\"># 重新启动 mysql ，Mysql 会重新生成 auto.cnf</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<blockquote>\n<p>Mysql 配置读写分离, 降低读服务器压力</p>\n</blockquote>\n<h2 id=\"主-Mysql-配置\"><a href=\"#主-Mysql-配置\" class=\"headerlink\" title=\"主 Mysql 配置\"></a>主 Mysql 配置</h2><h3 id=\"编辑主-Mysql-服务器的MySQL配置文件my-cnf\"><a href=\"#编辑主-Mysql-服务器的MySQL配置文件my-cnf\" class=\"headerlink\" title=\"编辑主 Mysql 服务器的MySQL配置文件my.cnf\"></a>编辑主 Mysql 服务器的MySQL配置文件my.cnf</h3><blockquote>\n<p>一般位置（&#x2F;etc&#x2F;my.cnf &#x2F; &#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;mysql&#x2F;5.6.25&#x2F;my.cnf）<br>在[mysqld]下面添加以下参数：</p>\n</blockquote>","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">log-bin=mysql-bin #开启MYSQL二进制日志</span><br><span class=\"line\">server-id=1 #服务器ID不能重复</span><br><span class=\"line\">binlog-do-db=brpg #需要做主从备份的数据库名字</span><br><span class=\"line\">expire-logs-days = 7 #只保留7天的二进制日志，以防磁盘被日志占满</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在-A-服务器添加一个用于主从复制的帐号\"><a href=\"#在-A-服务器添加一个用于主从复制的帐号\" class=\"headerlink\" title=\"在 A 服务器添加一个用于主从复制的帐号\"></a>在 A 服务器添加一个用于主从复制的帐号</h3><blockquote>\n<p>登陆mysql命令行，执行</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GRANT REPLICATION SLAVE ON *.* TO <span class=\"string\">&#x27;帐号&#x27;</span>@<span class=\"string\">&#x27;从服务器IP&#x27;</span> IDENTIFIED BY <span class=\"string\">&#x27;密码&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在主MySQL服务器上执行命令，把数据库设置成只读状态\"><a href=\"#在主MySQL服务器上执行命令，把数据库设置成只读状态\" class=\"headerlink\" title=\"在主MySQL服务器上执行命令，把数据库设置成只读状态\"></a>在主MySQL服务器上执行命令，把数据库设置成只读状态</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FLUSH TABLES WITH READ LOCK;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"导出数据文件\"><a href=\"#导出数据文件\" class=\"headerlink\" title=\"导出数据文件\"></a>导出数据文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqldump -uroot -p brpg &gt; brpg.sql</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"回到-Mysql，解封数据库只读状态\"><a href=\"#回到-Mysql，解封数据库只读状态\" class=\"headerlink\" title=\"回到 Mysql，解封数据库只读状态\"></a>回到 Mysql，解封数据库只读状态</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UNLOCK TABLES;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"重新启动-Mysql-让主-Mysql-配置生效\"><a href=\"#重新启动-Mysql-让主-Mysql-配置生效\" class=\"headerlink\" title=\"重新启动 Mysql 让主 Mysql 配置生效\"></a>重新启动 Mysql 让主 Mysql 配置生效</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service mysqld restart</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"记下file及position的值\"><a href=\"#记下file及position的值\" class=\"headerlink\" title=\"记下file及position的值\"></a>记下file及position的值</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show master status;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"从-Mysql-配置\"><a href=\"#从-Mysql-配置\" class=\"headerlink\" title=\"从 Mysql 配置\"></a>从 Mysql 配置</h2><h3 id=\"编辑从-Mysql-服务器的MySQL配置文件my-cnf\"><a href=\"#编辑从-Mysql-服务器的MySQL配置文件my-cnf\" class=\"headerlink\" title=\"编辑从 Mysql 服务器的MySQL配置文件my.cnf\"></a>编辑从 Mysql 服务器的MySQL配置文件my.cnf</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server-id=2 #服务器ID不能重复</span><br><span class=\"line\">replicate-do-db=brpg #需要做复制的数据库名</span><br><span class=\"line\">#replicate-ignore-table=brpg.xx #需要自动跳过的表</span><br><span class=\"line\">slave-skip-errors = 1032,1062,126,1114,1146,1048,1396 #自动跳过的错误代码，以防复制出错被中断</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>Mysql 5.5 或更高版本不支持 master- 相关配置</p>\n</blockquote>\n<h3 id=\"将主库上备份的数据库恢复到从库\"><a href=\"#将主库上备份的数据库恢复到从库\" class=\"headerlink\" title=\"将主库上备份的数据库恢复到从库\"></a>将主库上备份的数据库恢复到从库</h3><h3 id=\"重启从库MYSQL\"><a href=\"#重启从库MYSQL\" class=\"headerlink\" title=\"重启从库MYSQL\"></a>重启从库MYSQL</h3><h3 id=\"登录从库的MySQL命令行\"><a href=\"#登录从库的MySQL命令行\" class=\"headerlink\" title=\"登录从库的MySQL命令行\"></a>登录从库的MySQL命令行</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">change master to master_host=<span class=\"string\">&#x27;192.168.0.2&#x27;</span>, master_user=<span class=\"string\">&#x27;mysqlrun&#x27;</span>, master_password=<span class=\"string\">&#x27;123&#x27;</span>, master_log_file=<span class=\"string\">&#x27;file的值&#x27;</span>, master_log_pos=position的值;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>设置成主库的连接信息，file及position的值是之前记录下来，position的值没有单引号，其他的值要单引号</p>\n</blockquote>\n<h3 id=\"启动从库连接\"><a href=\"#启动从库连接\" class=\"headerlink\" title=\"启动从库连接\"></a>启动从库连接</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">start slave; </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查看从库状态\"><a href=\"#查看从库状态\" class=\"headerlink\" title=\"查看从库状态\"></a>查看从库状态</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show slave status\\G; <span class=\"comment\">#查看连接情况，是不是两个YES，两个YES为成功</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Slave_IO_Running: Yes</span><br><span class=\"line\">Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"如果从服务器启动出现报错\"><a href=\"#如果从服务器启动出现报错\" class=\"headerlink\" title=\"如果从服务器启动出现报错\"></a>如果从服务器启动出现报错</h3><blockquote>\n<p>Slave_IO_Running: Connect</p>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>需要先检查主 Mysql 的账号密码是否正确<br>主从的 my.cnf bind_ip 一栏设置的 ips 是否正确<br>主服务器与从服务器的防火墙 是否已经允许 3306 进出 (telnet ip:3306)</p>\n</blockquote>\n</blockquote>\n<h4 id=\"iptables-设置\"><a href=\"#iptables-设置\" class=\"headerlink\" title=\"iptables 设置\"></a>iptables 设置</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service iptables stop</span><br><span class=\"line\">iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 3306 -j ACCEPT</span><br><span class=\"line\">service iptables save</span><br><span class=\"line\">service iptables start</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"ufw-设置\"><a href=\"#ufw-设置\" class=\"headerlink\" title=\"ufw 设置\"></a>ufw 设置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ufw allow 3306/tcp <span class=\"comment\"># 允许 3306 端口通过</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 其他设置</span></span><br><span class=\"line\">ufw <span class=\"built_in\">disable</span> <span class=\"comment\"># 禁用</span></span><br><span class=\"line\">ufw <span class=\"built_in\">enable</span> <span class=\"comment\"># 启动</span></span><br><span class=\"line\"><span class=\"comment\"># 查看状态</span></span><br><span class=\"line\">ufw status numbered</span><br><span class=\"line\"> </span><br><span class=\"line\">:<span class=\"comment\"># ufw status numbered</span></span><br><span class=\"line\">[ 1] 3306/tcp                   ALLOW IN    Anywhere</span><br><span class=\"line\">[ 2] 3306/tcp (v6)              ALLOW IN    Anywhere (v6)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 根据序号删除</span></span><br><span class=\"line\">ufw delete 1</span><br><span class=\"line\">ufw delete 2</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>bash Slave_IO_Running: No<br>Last_IO_Error: Fatal error: The slave I&#x2F;O thread stops because master and slave have equal MySQL server UUIDs; these UUIDs must be d</p>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>那可能是因为2台服务器是复制过去的，登录任意一台服务器，重新生成 Mysql 的 auto.cnf</p>\n</blockquote>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mv</span> /usr/local/mysql/var/auto.cnf /usr/local/mysql/var/auto.bak.cnf <span class=\"comment\">#重命名该名称</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service mysql restart <span class=\"comment\"># 重新启动 mysql ，Mysql 会重新生成 auto.cnf</span></span><br></pre></td></tr></table></figure>"},{"title":"不锈钢盆","date":"2023-02-12T16:00:00.000Z","_content":"\n![不锈钢盆](9A98C593-1A4D-4F5C-B795-20BD5078DAA7.JPG)","source":"_posts/不锈钢盆.md","raw":"---\ntitle: 不锈钢盆\ndate: 2023-02-13\ntags:\n- 画\n- 素描\n---\n\n![不锈钢盆](9A98C593-1A4D-4F5C-B795-20BD5078DAA7.JPG)","slug":"不锈钢盆","published":1,"updated":"2023-03-06T13:38:31.394Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq34000hfb8hentaevcj","content":"<p><img src=\"/%E4%B8%8D%E9%94%88%E9%92%A2%E7%9B%86-2023-02-13/9A98C593-1A4D-4F5C-B795-20BD5078DAA7.JPG\" alt=\"不锈钢盆\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/%E4%B8%8D%E9%94%88%E9%92%A2%E7%9B%86-2023-02-13/9A98C593-1A4D-4F5C-B795-20BD5078DAA7.JPG\" alt=\"不锈钢盆\"></p>\n"},{"title":"互换 Ctrl / Caps_Lock 按键","date":"2016-05-05T12:36:40.000Z","_content":"\n> 交换 Caps_Lock 与 Ctrl 键，与 Unix 键位统一方便快捷键使用\n\n## Mac OS\n\n打开系统编好设置 选择 \"键盘\" 菜单，在 \"键盘\" 选项卡右下角打开 \"修饰键...\" 选单\n\n大写锁定键 -> 选择 Control\nControl键 -> 选择 大写锁定键\n\n选择 \"好\" 即可完成设置\n\n> 新版系统中 轻触大写锁定键 的功能为 切换中英文输入法，若要打开大写锁定需要长按大写锁定键（即修改后的 Control 键位）\n\n## Ubuntu / Debian\n\n<!-- more -->\n新增或修改 ~/.Xmodmap 文件\n\n```bash\nsudo vim ~/.Xmodmap\n```\n\n添加内容\n\n```bash\nremove control = Control_L\nremove lock = Caps_Lock\nkeysym Caps_Lock = Control_L\nkeysym Control_L = Caps_Lock\nadd control = Control_L\nadd lock = Caps_Lock\n```\n\n添加至 .profile 开机自启动\n\n```bash\nsudo vim ~/.profile\n```\n\n添加启动项目延时启动\n```bash\nsleep 4 && xmodmap ~/.Xmodmap &\n```\n\n>重新启动后生效\n\n## Windows 10 & 11\n\n>[Windows PowerToys](https://github.com/microsoft/PowerToys/releases/)","source":"_posts/互换-Ctrl-Caps-Lock-按键.md","raw":"---\ntitle: 互换 Ctrl / Caps_Lock 按键\ndate: 2016-05-05 20:36:40\ntags:\n- 系统\n---\n\n> 交换 Caps_Lock 与 Ctrl 键，与 Unix 键位统一方便快捷键使用\n\n## Mac OS\n\n打开系统编好设置 选择 \"键盘\" 菜单，在 \"键盘\" 选项卡右下角打开 \"修饰键...\" 选单\n\n大写锁定键 -> 选择 Control\nControl键 -> 选择 大写锁定键\n\n选择 \"好\" 即可完成设置\n\n> 新版系统中 轻触大写锁定键 的功能为 切换中英文输入法，若要打开大写锁定需要长按大写锁定键（即修改后的 Control 键位）\n\n## Ubuntu / Debian\n\n<!-- more -->\n新增或修改 ~/.Xmodmap 文件\n\n```bash\nsudo vim ~/.Xmodmap\n```\n\n添加内容\n\n```bash\nremove control = Control_L\nremove lock = Caps_Lock\nkeysym Caps_Lock = Control_L\nkeysym Control_L = Caps_Lock\nadd control = Control_L\nadd lock = Caps_Lock\n```\n\n添加至 .profile 开机自启动\n\n```bash\nsudo vim ~/.profile\n```\n\n添加启动项目延时启动\n```bash\nsleep 4 && xmodmap ~/.Xmodmap &\n```\n\n>重新启动后生效\n\n## Windows 10 & 11\n\n>[Windows PowerToys](https://github.com/microsoft/PowerToys/releases/)","slug":"互换-Ctrl-Caps-Lock-按键","published":1,"updated":"2023-03-06T13:38:31.397Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq34000ifb8h8cpv4fe7","content":"<blockquote>\n<p>交换 Caps_Lock 与 Ctrl 键，与 Unix 键位统一方便快捷键使用</p>\n</blockquote>\n<h2 id=\"Mac-OS\"><a href=\"#Mac-OS\" class=\"headerlink\" title=\"Mac OS\"></a>Mac OS</h2><p>打开系统编好设置 选择 “键盘” 菜单，在 “键盘” 选项卡右下角打开 “修饰键…” 选单</p>\n<p>大写锁定键 -&gt; 选择 Control<br>Control键 -&gt; 选择 大写锁定键</p>\n<p>选择 “好” 即可完成设置</p>\n<blockquote>\n<p>新版系统中 轻触大写锁定键 的功能为 切换中英文输入法，若要打开大写锁定需要长按大写锁定键（即修改后的 Control 键位）</p>\n</blockquote>\n<h2 id=\"Ubuntu-x2F-Debian\"><a href=\"#Ubuntu-x2F-Debian\" class=\"headerlink\" title=\"Ubuntu &#x2F; Debian\"></a>Ubuntu &#x2F; Debian</h2><span id=\"more\"></span>\n<p>新增或修改 ~&#x2F;.Xmodmap 文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim ~/.Xmodmap</span><br></pre></td></tr></table></figure>\n\n<p>添加内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">remove control = Control_L</span><br><span class=\"line\">remove lock = Caps_Lock</span><br><span class=\"line\">keysym Caps_Lock = Control_L</span><br><span class=\"line\">keysym Control_L = Caps_Lock</span><br><span class=\"line\">add control = Control_L</span><br><span class=\"line\">add lock = Caps_Lock</span><br></pre></td></tr></table></figure>\n\n<p>添加至 .profile 开机自启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim ~/.profile</span><br></pre></td></tr></table></figure>\n\n<p>添加启动项目延时启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sleep</span> 4 &amp;&amp; xmodmap ~/.Xmodmap &amp;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>重新启动后生效</p>\n</blockquote>\n<h2 id=\"Windows-10-amp-11\"><a href=\"#Windows-10-amp-11\" class=\"headerlink\" title=\"Windows 10 &amp; 11\"></a>Windows 10 &amp; 11</h2><blockquote>\n<p><a href=\"https://github.com/microsoft/PowerToys/releases/\">Windows PowerToys</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>交换 Caps_Lock 与 Ctrl 键，与 Unix 键位统一方便快捷键使用</p>\n</blockquote>\n<h2 id=\"Mac-OS\"><a href=\"#Mac-OS\" class=\"headerlink\" title=\"Mac OS\"></a>Mac OS</h2><p>打开系统编好设置 选择 “键盘” 菜单，在 “键盘” 选项卡右下角打开 “修饰键…” 选单</p>\n<p>大写锁定键 -&gt; 选择 Control<br>Control键 -&gt; 选择 大写锁定键</p>\n<p>选择 “好” 即可完成设置</p>\n<blockquote>\n<p>新版系统中 轻触大写锁定键 的功能为 切换中英文输入法，若要打开大写锁定需要长按大写锁定键（即修改后的 Control 键位）</p>\n</blockquote>\n<h2 id=\"Ubuntu-x2F-Debian\"><a href=\"#Ubuntu-x2F-Debian\" class=\"headerlink\" title=\"Ubuntu &#x2F; Debian\"></a>Ubuntu &#x2F; Debian</h2>","more":"<p>新增或修改 ~&#x2F;.Xmodmap 文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim ~/.Xmodmap</span><br></pre></td></tr></table></figure>\n\n<p>添加内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">remove control = Control_L</span><br><span class=\"line\">remove lock = Caps_Lock</span><br><span class=\"line\">keysym Caps_Lock = Control_L</span><br><span class=\"line\">keysym Control_L = Caps_Lock</span><br><span class=\"line\">add control = Control_L</span><br><span class=\"line\">add lock = Caps_Lock</span><br></pre></td></tr></table></figure>\n\n<p>添加至 .profile 开机自启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim ~/.profile</span><br></pre></td></tr></table></figure>\n\n<p>添加启动项目延时启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sleep</span> 4 &amp;&amp; xmodmap ~/.Xmodmap &amp;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>重新启动后生效</p>\n</blockquote>\n<h2 id=\"Windows-10-amp-11\"><a href=\"#Windows-10-amp-11\" class=\"headerlink\" title=\"Windows 10 &amp; 11\"></a>Windows 10 &amp; 11</h2><blockquote>\n<p><a href=\"https://github.com/microsoft/PowerToys/releases/\">Windows PowerToys</a></p>\n</blockquote>"},{"title":"可乐","date":"2023-02-23T16:00:00.000Z","_content":"\n![可乐](7A86E4C7-2AF1-483B-B2D4-6AE302F0D7C0.JPG)","source":"_posts/可乐.md","raw":"---\ntitle: 可乐\ndate: 2023-02-24\ntags:\n- 画\n- 静物\n- 素描\n---\n\n![可乐](7A86E4C7-2AF1-483B-B2D4-6AE302F0D7C0.JPG)","slug":"可乐","published":1,"updated":"2023-03-06T13:38:31.397Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq34000jfb8h03n42zc2","content":"<p><img src=\"/%E5%8F%AF%E4%B9%90-2023-02-24/7A86E4C7-2AF1-483B-B2D4-6AE302F0D7C0.JPG\" alt=\"可乐\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/%E5%8F%AF%E4%B9%90-2023-02-24/7A86E4C7-2AF1-483B-B2D4-6AE302F0D7C0.JPG\" alt=\"可乐\"></p>\n"},{"title":"VIM 配色方案 Molokai","date":"2015-07-09T14:01:17.000Z","_content":"\n修改 VIM 配置文件来支持本本色方案\n\n```bash\nsudo vim ~/.vimrc\n```\n\n添加以下配置\n\n<!-- more -->\n```bash\nsyntax enable\n\nsyntax on\n\nset nu\n\nset t_Co=256\n\nset background=dark\n\ncolorscheme molokai\n```\n\n下载配色方案 https://github.com/tomasr/molokai/blob/master/colors/molokai.vim\n","source":"_posts/VIM-配色方案-Molokai.md","raw":"---\ntitle: VIM 配色方案 Molokai\ndate: 2015-07-09 22:01:17\ntags: \n- dev\n- vim\n---\n\n修改 VIM 配置文件来支持本本色方案\n\n```bash\nsudo vim ~/.vimrc\n```\n\n添加以下配置\n\n<!-- more -->\n```bash\nsyntax enable\n\nsyntax on\n\nset nu\n\nset t_Co=256\n\nset background=dark\n\ncolorscheme molokai\n```\n\n下载配色方案 https://github.com/tomasr/molokai/blob/master/colors/molokai.vim\n","slug":"VIM-配色方案-Molokai","published":1,"updated":"2023-03-06T13:38:31.392Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq35000mfb8h7y8q9bm2","content":"<p>修改 VIM 配置文件来支持本本色方案</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim ~/.vimrc</span><br></pre></td></tr></table></figure>\n\n<p>添加以下配置</p>\n<span id=\"more\"></span>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">syntax <span class=\"built_in\">enable</span></span><br><span class=\"line\"></span><br><span class=\"line\">syntax on</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">set</span> nu</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">set</span> t_Co=256</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">set</span> background=dark</span><br><span class=\"line\"></span><br><span class=\"line\">colorscheme molokai</span><br></pre></td></tr></table></figure>\n\n<p>下载配色方案 <a href=\"https://github.com/tomasr/molokai/blob/master/colors/molokai.vim\">https://github.com/tomasr/molokai/blob/master/colors/molokai.vim</a></p>\n","site":{"data":{}},"excerpt":"<p>修改 VIM 配置文件来支持本本色方案</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim ~/.vimrc</span><br></pre></td></tr></table></figure>\n\n<p>添加以下配置</p>","more":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">syntax <span class=\"built_in\">enable</span></span><br><span class=\"line\"></span><br><span class=\"line\">syntax on</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">set</span> nu</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">set</span> t_Co=256</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">set</span> background=dark</span><br><span class=\"line\"></span><br><span class=\"line\">colorscheme molokai</span><br></pre></td></tr></table></figure>\n\n<p>下载配色方案 <a href=\"https://github.com/tomasr/molokai/blob/master/colors/molokai.vim\">https://github.com/tomasr/molokai/blob/master/colors/molokai.vim</a></p>"},{"title":"咖啡-耳机-钢笔","date":"2023-03-01T16:00:00.000Z","_content":"\n![咖啡-耳机-钢笔](IMG_5035.JPG)","source":"_posts/咖啡-耳机-钢笔.md","raw":"---\ntitle: 咖啡-耳机-钢笔\ndate: 2023-03-02\ntags:\n- 画\n- 静物\n- 素描\n---\n\n![咖啡-耳机-钢笔](IMG_5035.JPG)","slug":"咖啡-耳机-钢笔","published":1,"updated":"2023-03-06T13:38:31.407Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq35000ofb8h4nmt9kip","content":"<p><img src=\"/%E5%92%96%E5%95%A1-%E8%80%B3%E6%9C%BA-%E9%92%A2%E7%AC%94-2023-03-02/IMG_5035.JPG\" alt=\"咖啡-耳机-钢笔\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/%E5%92%96%E5%95%A1-%E8%80%B3%E6%9C%BA-%E9%92%A2%E7%AC%94-2023-03-02/IMG_5035.JPG\" alt=\"咖啡-耳机-钢笔\"></p>\n"},{"title":"嘴","date":"2023-03-03T16:00:00.000Z","_content":"\n![嘴](IMG_5077.JPG)","source":"_posts/嘴.md","raw":"---\ntitle: 嘴\ndate: 2023-03-04\ntags:\n- 画\n- 石膏\n- 素描\n---\n\n![嘴](IMG_5077.JPG)","slug":"嘴","published":1,"updated":"2023-03-06T13:38:31.413Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq35000rfb8h225yeqg0","content":"<p><img src=\"/%E5%98%B4-2023-03-04/IMG_5077.JPG\" alt=\"嘴\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/%E5%98%B4-2023-03-04/IMG_5077.JPG\" alt=\"嘴\"></p>\n"},{"title":"圆柱","date":"2023-01-03T16:00:00.000Z","_content":"\n![圆柱](B35F6C8C-9AF2-40A1-AB4F-75335B34E25F.JPG)","source":"_posts/圆柱.md","raw":"---\ntitle: 圆柱\ndate: 2023-01-04\ntags:\n- 画\n- 素描\n---\n\n![圆柱](B35F6C8C-9AF2-40A1-AB4F-75335B34E25F.JPG)","slug":"圆柱","published":1,"updated":"2023-03-06T13:38:31.416Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq36000tfb8h7qlvae3j","content":"<p><img src=\"/%E5%9C%86%E6%9F%B1-2023-01-04/B35F6C8C-9AF2-40A1-AB4F-75335B34E25F.JPG\" alt=\"圆柱\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/%E5%9C%86%E6%9F%B1-2023-01-04/B35F6C8C-9AF2-40A1-AB4F-75335B34E25F.JPG\" alt=\"圆柱\"></p>\n"},{"title":"多面体","date":"2023-01-31T16:00:00.000Z","_content":"\n![多面体](422EF0A0-0480-4700-BD6B-707FF4F94B4F.JPG)","source":"_posts/多面体.md","raw":"---\ntitle: 多面体\ndate: 2023-02-01\ntags:\n- 画\n- 素描\n---\n\n![多面体](422EF0A0-0480-4700-BD6B-707FF4F94B4F.JPG)","slug":"多面体","published":1,"updated":"2023-03-06T13:38:31.421Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq36000wfb8hdayxa5no","content":"<p><img src=\"/%E5%A4%9A%E9%9D%A2%E4%BD%93-2023-02-01/422EF0A0-0480-4700-BD6B-707FF4F94B4F.JPG\" alt=\"多面体\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/%E5%A4%9A%E9%9D%A2%E4%BD%93-2023-02-01/422EF0A0-0480-4700-BD6B-707FF4F94B4F.JPG\" alt=\"多面体\"></p>\n"},{"title":"周末","date":"2023-02-06T16:00:00.000Z","_content":"\n![1](IMG_4941.JPG)\n\n\n![1](IMG_4946.JPG)\n\n\n![1](IMG_4949.JPG)","source":"_posts/周末.md","raw":"---\ntitle: 周末\ndate: 2023-02-07\ntags:\n- 画\n---\n\n![1](IMG_4941.JPG)\n\n\n![1](IMG_4946.JPG)\n\n\n![1](IMG_4949.JPG)","slug":"周末","published":1,"updated":"2023-03-06T13:38:31.400Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq36000yfb8hfy2yci4z","content":"<p><img src=\"/%E5%91%A8%E6%9C%AB-2023-02-07/IMG_4941.JPG\" alt=\"1\"></p>\n<p><img src=\"/%E5%91%A8%E6%9C%AB-2023-02-07/IMG_4946.JPG\" alt=\"1\"></p>\n<p><img src=\"/%E5%91%A8%E6%9C%AB-2023-02-07/IMG_4949.JPG\" alt=\"1\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/%E5%91%A8%E6%9C%AB-2023-02-07/IMG_4941.JPG\" alt=\"1\"></p>\n<p><img src=\"/%E5%91%A8%E6%9C%AB-2023-02-07/IMG_4946.JPG\" alt=\"1\"></p>\n<p><img src=\"/%E5%91%A8%E6%9C%AB-2023-02-07/IMG_4949.JPG\" alt=\"1\"></p>\n"},{"title":"木棍","date":"2023-01-02T16:00:00.000Z","_content":"\n![木棍](619021B2-416D-4928-9D5E-4380837DD0B8.JPG)","source":"_posts/木棍.md","raw":"---\ntitle: 木棍\ndate: 2023-01-03\ntags:\n- 画\n- 素描\n---\n\n![木棍](619021B2-416D-4928-9D5E-4380837DD0B8.JPG)","slug":"木棍","published":1,"updated":"2023-03-06T13:38:31.429Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq370011fb8h3g0d19it","content":"<p><img src=\"/%E6%9C%A8%E6%A3%8D-2023-01-03/619021B2-416D-4928-9D5E-4380837DD0B8.JPG\" alt=\"木棍\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/%E6%9C%A8%E6%A3%8D-2023-01-03/619021B2-416D-4928-9D5E-4380837DD0B8.JPG\" alt=\"木棍\"></p>\n"},{"title":"三棱锥","date":"2022-12-31T16:00:00.000Z","_content":"\n![三棱锥](IMG_4515.JPG)","source":"_posts/三棱锥.md","raw":"---\ntitle: 三棱锥\ndate: 2023-01-01\ntags: \n- 画\n- 素描\n---\n\n![三棱锥](IMG_4515.JPG)","slug":"三棱锥","published":1,"updated":"2023-03-06T13:38:31.392Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq370013fb8h0dvb8xzq","content":"<p><img src=\"/%E4%B8%89%E6%A3%B1%E9%94%A5-2023-01-01/IMG_4515.JPG\" alt=\"三棱锥\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/%E4%B8%89%E6%A3%B1%E9%94%A5-2023-01-01/IMG_4515.JPG\" alt=\"三棱锥\"></p>\n"},{"title":"大海与船","date":"2023-02-19T16:00:00.000Z","_content":"\n![大海与船](IMG_5057.JPG)","source":"_posts/大海与船.md","raw":"---\ntitle: 大海与船\ndate: 2023-02-20\ntags:\n- 画\n- 油画\n---\n\n![大海与船](IMG_5057.JPG)","slug":"大海与船","published":1,"updated":"2023-03-06T13:38:31.423Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq370015fb8h6wjfdrm2","content":"<p><img src=\"/%E5%A4%A7%E6%B5%B7%E4%B8%8E%E8%88%B9-2023-02-20/IMG_5057.JPG\" alt=\"大海与船\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/%E5%A4%A7%E6%B5%B7%E4%B8%8E%E8%88%B9-2023-02-20/IMG_5057.JPG\" alt=\"大海与船\"></p>\n"},{"title":"灯泡","date":"2023-02-09T16:00:00.000Z","_content":"\n![灯泡](IMG_4928.JPG)","source":"_posts/灯泡.md","raw":"---\ntitle: 灯泡\ndate: 2023-02-10\ntags:\n- 画\n- 素描\n---\n\n![灯泡](IMG_4928.JPG)","slug":"灯泡","published":1,"updated":"2023-03-06T13:38:31.434Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq370018fb8h52nq1xvr","content":"<p><img src=\"/%E7%81%AF%E6%B3%A1-2023-02-10/IMG_4928.JPG\" alt=\"灯泡\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/%E7%81%AF%E6%B3%A1-2023-02-10/IMG_4928.JPG\" alt=\"灯泡\"></p>\n"},{"title":"夕阳","date":"2023-02-10T16:00:00.000Z","_content":"\n![夕阳](77532093-6E9E-4D3E-82C4-94E42C559901.JPG)","source":"_posts/夕阳.md","raw":"---\ntitle: 夕阳\ndate: 2023-02-11\ntags:\n- 画\n- 油画\n---\n\n![夕阳](77532093-6E9E-4D3E-82C4-94E42C559901.JPG)","slug":"夕阳","published":1,"updated":"2023-03-06T13:38:31.418Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq38001afb8hgc1thdmv","content":"<p><img src=\"/%E5%A4%95%E9%98%B3-2023-02-11/77532093-6E9E-4D3E-82C4-94E42C559901.JPG\" alt=\"夕阳\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/%E5%A4%95%E9%98%B3-2023-02-11/77532093-6E9E-4D3E-82C4-94E42C559901.JPG\" alt=\"夕阳\"></p>\n"},{"title":"球","date":"2023-01-01T16:00:00.000Z","_content":"\n![球](IMG_4602.JPG)","source":"_posts/球.md","raw":"---\ntitle: 球\ndate: 2023-01-02\ntags:\n- 画\n- 素描\n---\n\n![球](IMG_4602.JPG)","slug":"球","published":1,"updated":"2023-03-06T13:38:31.436Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq38001dfb8h0rod7fpw","content":"<p><img src=\"/%E7%90%83-2023-01-02/IMG_4602.JPG\" alt=\"球\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/%E7%90%83-2023-01-02/IMG_4602.JPG\" alt=\"球\"></p>\n"},{"title":"梨-纸-牛奶","date":"2023-02-28T16:00:00.000Z","_content":"\n![梨-纸-牛奶](EA363681-6736-4613-8434-9A044D0FEE99.JPG)","source":"_posts/梨-纸-牛奶.md","raw":"---\ntitle: 梨-纸-牛奶\ndate: 2023-03-01\ntags:\n- 画\n- 静物\n- 素描\n---\n\n![梨-纸-牛奶](EA363681-6736-4613-8434-9A044D0FEE99.JPG)","slug":"梨-纸-牛奶","published":1,"updated":"2023-03-06T13:38:31.432Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq38001ffb8h1jgsb1nn","content":"<p><img src=\"/%E6%A2%A8-%E7%BA%B8-%E7%89%9B%E5%A5%B6-2023-03-01/EA363681-6736-4613-8434-9A044D0FEE99.JPG\" alt=\"梨-纸-牛奶\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/%E6%A2%A8-%E7%BA%B8-%E7%89%9B%E5%A5%B6-2023-03-01/EA363681-6736-4613-8434-9A044D0FEE99.JPG\" alt=\"梨-纸-牛奶\"></p>\n"},{"title":"眼","date":"2023-03-04T16:00:00.000Z","_content":"\n![眼](IMG_5067.JPG)","source":"_posts/眼.md","raw":"---\ntitle: 眼\ndate: 2023-03-05\ntags:\n- 画\n- 石膏\n- 素描\n---\n\n![眼](IMG_5067.JPG)","slug":"眼","published":1,"updated":"2023-03-06T13:38:31.439Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq38001ifb8h52c536ts","content":"<p><img src=\"/%E7%9C%BC-2023-03-05/IMG_5067.JPG\" alt=\"眼\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/%E7%9C%BC-2023-03-05/IMG_5067.JPG\" alt=\"眼\"></p>\n"},{"title":"耳","date":"2023-03-06T12:34:23.000Z","_content":"\n![耳](IMG_5076.JPG)","source":"_posts/耳.md","raw":"---\ntitle: 耳\ndate: 2023-03-06 20:34:23\ntags:\n- 画\n- 石膏\n- 素描\n---\n\n![耳](IMG_5076.JPG)","slug":"耳","published":1,"updated":"2023-03-06T13:38:31.444Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq39001kfb8hbrdjbcvj","content":"<p><img src=\"/%E8%80%B3-2023-03-06/IMG_5076.JPG\" alt=\"耳\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/%E8%80%B3-2023-03-06/IMG_5076.JPG\" alt=\"耳\"></p>\n"},{"title":"贯穿体+圆锥","date":"2023-02-06T12:02:43.000Z","_content":"\n![贯穿体+圆锥](DF823592-2224-4702-AFCA-A3269B7BA43F.JPG)","source":"_posts/贯穿体-圆锥.md","raw":"---\ntitle: 贯穿体+圆锥\ndate: 2023-02-06 20:02:43\ntags:\n- 画\n- 素描\n---\n\n![贯穿体+圆锥](DF823592-2224-4702-AFCA-A3269B7BA43F.JPG)","slug":"贯穿体-圆锥","published":1,"updated":"2023-03-06T13:38:31.451Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq39001nfb8h3sr50bv8","content":"<p><img src=\"/%E8%B4%AF%E7%A9%BF%E4%BD%93-%E5%9C%86%E9%94%A5-2023-02-06/DF823592-2224-4702-AFCA-A3269B7BA43F.JPG\" alt=\"贯穿体+圆锥\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/%E8%B4%AF%E7%A9%BF%E4%BD%93-%E5%9C%86%E9%94%A5-2023-02-06/DF823592-2224-4702-AFCA-A3269B7BA43F.JPG\" alt=\"贯穿体+圆锥\"></p>\n"},{"title":"苹果","date":"2023-02-02T16:00:00.000Z","_content":"\n![苹果](IMG_4752.JPG)","source":"_posts/苹果.md","raw":"---\ntitle: 苹果\ndate: 2023-02-03\ntags:\n- 画\n- 素描\n---\n\n![苹果](IMG_4752.JPG)","slug":"苹果","published":1,"updated":"2023-03-06T13:38:31.449Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq39001pfb8hehie8wjx","content":"<p><img src=\"/%E8%8B%B9%E6%9E%9C-2023-02-03/IMG_4752.JPG\" alt=\"苹果\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/%E8%8B%B9%E6%9E%9C-2023-02-03/IMG_4752.JPG\" alt=\"苹果\"></p>\n"},{"title":"贯穿体3","date":"2023-01-09T16:00:00.000Z","_content":"\n![贯穿体](C04F771E-BFF9-4FCE-97B4-0239AD527C02.JPG)","source":"_posts/贯穿体3.md","raw":"---\ntitle: 贯穿体3\ndate: 2023-01-10\ntags:\n- 画\n- 素描\n---\n\n![贯穿体](C04F771E-BFF9-4FCE-97B4-0239AD527C02.JPG)","slug":"贯穿体3","published":1,"updated":"2023-03-06T13:38:31.459Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq39001sfb8hdf4h9jiu","content":"<p><img src=\"/%E8%B4%AF%E7%A9%BF%E4%BD%933-2023-01-10/C04F771E-BFF9-4FCE-97B4-0239AD527C02.JPG\" alt=\"贯穿体\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/%E8%B4%AF%E7%A9%BF%E4%BD%933-2023-01-10/C04F771E-BFF9-4FCE-97B4-0239AD527C02.JPG\" alt=\"贯穿体\"></p>\n"},{"title":"贯穿体2","date":"2023-01-07T16:00:00.000Z","_content":"\n![贯穿体](201CB542-9CB7-4EE2-B542-E69A9516409C.JPG)","source":"_posts/贯穿体2.md","raw":"---\ntitle: 贯穿体2\ndate: 2023-01-08\ntags:\n- 画\n- 素描\n---\n\n![贯穿体](201CB542-9CB7-4EE2-B542-E69A9516409C.JPG)","slug":"贯穿体2","published":1,"updated":"2023-03-06T13:38:31.456Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq3a001ufb8haeej03dd","content":"<p><img src=\"/%E8%B4%AF%E7%A9%BF%E4%BD%932-2023-01-08/201CB542-9CB7-4EE2-B542-E69A9516409C.JPG\" alt=\"贯穿体\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/%E8%B4%AF%E7%A9%BF%E4%BD%932-2023-01-08/201CB542-9CB7-4EE2-B542-E69A9516409C.JPG\" alt=\"贯穿体\"></p>\n"},{"title":"贯穿体","date":"2023-01-05T16:00:00.000Z","_content":"\n![贯穿体](60152184-EE8E-49C5-B646-5B94BFDC5C7B.JPG)","source":"_posts/贯穿体.md","raw":"---\ntitle: 贯穿体\ndate: 2023-01-06\ntags:\n- 画\n- 素描\n---\n\n![贯穿体](60152184-EE8E-49C5-B646-5B94BFDC5C7B.JPG)","slug":"贯穿体","published":1,"updated":"2023-03-06T13:38:31.453Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq3a001xfb8h70tw7hv1","content":"<p><img src=\"/%E8%B4%AF%E7%A9%BF%E4%BD%93-2023-01-06/60152184-EE8E-49C5-B646-5B94BFDC5C7B.JPG\" alt=\"贯穿体\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/%E8%B4%AF%E7%A9%BF%E4%BD%93-2023-01-06/60152184-EE8E-49C5-B646-5B94BFDC5C7B.JPG\" alt=\"贯穿体\"></p>\n"},{"title":"香蕉","date":"2023-02-04T16:00:00.000Z","_content":"\n![香蕉](E891B52F-9F31-41A2-8675-20B01A581755.JPG)","source":"_posts/香蕉.md","raw":"---\ntitle: 香蕉\ndate: 2023-02-05\ntags:\n- 画\n- 静物\n- 素描\n---\n\n![香蕉](E891B52F-9F31-41A2-8675-20B01A581755.JPG)","slug":"香蕉","published":1,"updated":"2023-03-06T13:38:31.463Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq3a001zfb8hf7feafai","content":"<p><img src=\"/%E9%A6%99%E8%95%89-2023-02-05/E891B52F-9F31-41A2-8675-20B01A581755.JPG\" alt=\"香蕉\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/%E9%A6%99%E8%95%89-2023-02-05/E891B52F-9F31-41A2-8675-20B01A581755.JPG\" alt=\"香蕉\"></p>\n"},{"title":"鼻","date":"2023-03-02T16:00:00.000Z","_content":"\n![鼻](IMG_5058.JPG)","source":"_posts/鼻.md","raw":"---\ntitle: 鼻\ndate: 2023-03-03\ntags:\n- 画\n- 素描\n---\n\n![鼻](IMG_5058.JPG)","slug":"鼻","published":1,"updated":"2023-03-06T13:38:31.467Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq3a0022fb8h4hz2042m","content":"<p><img src=\"/%E9%BC%BB-2023-03-03/IMG_5058.JPG\" alt=\"鼻\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/%E9%BC%BB-2023-03-03/IMG_5058.JPG\" alt=\"鼻\"></p>\n"},{"title":"陶罐","date":"2023-02-20T16:00:00.000Z","_content":"\n![陶罐](D1881FE2-FD18-4630-A9C5-997BD28ED27E.JPG)","source":"_posts/陶罐.md","raw":"---\ntitle: 陶罐\ndate: 2023-02-21\ntags:\n- 画\n- 静物\n- 素描\n---\n\n![陶罐](D1881FE2-FD18-4630-A9C5-997BD28ED27E.JPG)","slug":"陶罐","published":1,"updated":"2023-03-06T13:38:31.461Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq3b0024fb8h22ztespv","content":"<p><img src=\"/%E9%99%B6%E7%BD%90-2023-02-21/D1881FE2-FD18-4630-A9C5-997BD28ED27E.JPG\" alt=\"陶罐\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/%E9%99%B6%E7%BD%90-2023-02-21/D1881FE2-FD18-4630-A9C5-997BD28ED27E.JPG\" alt=\"陶罐\"></p>\n"},{"title":"鸟","date":"2023-02-21T16:00:00.000Z","_content":"\n![鸟](151C7835-CF5E-42FA-858D-5E23926BA4A0.JPG)","source":"_posts/鸟.md","raw":"---\ntitle: 鸟\ndate: 2023-02-22\ntags:\n- 画\n- 素描\n---\n\n![鸟](151C7835-CF5E-42FA-858D-5E23926BA4A0.JPG)","slug":"鸟","published":1,"updated":"2023-03-06T13:38:31.464Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq3b0027fb8h2pfc3yxk","content":"<p><img src=\"/%E9%B8%9F-2023-02-22/151C7835-CF5E-42FA-858D-5E23926BA4A0.JPG\" alt=\"鸟\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/%E9%B8%9F-2023-02-22/151C7835-CF5E-42FA-858D-5E23926BA4A0.JPG\" alt=\"鸟\"></p>\n"},{"title":"眼睛","date":"2023-02-11T16:00:00.000Z","_content":"\n![眼睛](167301D8-7E55-44E2-A35D-17B4337260C6.JPG)","source":"_posts/眼睛.md","raw":"---\ntitle: 眼睛\ndate: 2023-02-12\ntags:\n- 画\n- 石膏\n- 素描\n---\n\n![眼睛](167301D8-7E55-44E2-A35D-17B4337260C6.JPG)","slug":"眼睛","published":1,"updated":"2023-03-06T13:38:31.441Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq3b0029fb8hca5sgafb","content":"<p><img src=\"/%E7%9C%BC%E7%9D%9B-2023-02-12/167301D8-7E55-44E2-A35D-17B4337260C6.JPG\" alt=\"眼睛\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/%E7%9C%BC%E7%9D%9B-2023-02-12/167301D8-7E55-44E2-A35D-17B4337260C6.JPG\" alt=\"眼睛\"></p>\n"},{"title":"配置 Git 服务","date":"2015-12-31T08:41:55.000Z","_content":"\n>配置 Git 服务，创建 Git 仓库\n\n## 客户端密钥\n\n>每个需要使用 Git 的客户端都需要生成一份密钥, 首先去 ~/.ssh 查看自己是否已经有密钥\n\n```bash\n$ cd ~/.ssh/\n$ ls\nauthorized_keys   id_dsa       known_hosts\nconfig            id_dsa.pub\n```\n>默认命名为 id_dsa / id_rsa 个人文件夹目录 ~/.ssh/\n\n>其中一个带有 .pub 扩展名， .pub 文件是你的公钥，另一个则是私钥。 如果找不到这样的文件（或者根本没有 .ssh 目录），你可以通过运行 ssh-keygen 程序来创建它们。\n\n\n### 生成密钥\n\n<!-- more -->\n```bash\n$ ssh-keygen\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/root/.ssh/id_rsa):  //你可以选择保存文件的位置或者直接回车使用默认位置\nCreated directory '/root/.ssh'.\nEnter passphrase (empty for no passphrase):  // 如果不想使用时输入密码 直接按回车\nEnter same passphrase again: \nYour identification has been saved in /root/.ssh/id_rsa.\nYour public key has been saved in /root/.ssh/id_rsa.pub.\nThe key fingerprint is:\n08:5e:fe:16:c8:e9:4f:65:4d:dd:2d:01:a1:1f:7b:f9\n```\n\n>生成了客户端自己的一对密钥于 ~/.ssh/id_rsa\n\n## 服务端设置\n\n### 添加新用户\n\n>添加为了 git 的用户来仅创建或修改 Git 仓库相关的内容，禁止该用户登录和其他操作\n\n#### 首先登录 root 用户，创建该用户\n```bash\nsudo adduser git\n```\n\n#### 切换至 git 用户\n```bash\nsu git\n```\n\n#### 创建 authorized_keys 并加入需要使用 Git 仓库客户端的 公钥\n```bash\ncd \nmkdir .ssh && chmod 700 .ssh\ntouch .ssh/authorized_keys && chmod 600 .ssh/authorized_keys\n```\n\n>将我们信任的开发者密钥(即第一步客户端生成的密钥)加入 authorized_keys 中，多个用户可多次添加至 authorized_keys 文件中\n```bash\ncat /tmp/zacklee.pub >> ~/.ssh/authorized_keys\n```\n\n#### 保证 git 用户安全 (仅可使用 Git 服务)\n\n>切换回 root 用户，为 git 用户创建密码并禁止 git 用户的活动范围\n\n```bash\nsu root\n```\n\n> 为 git 用户创建密码 (客户端使用 Git 服务时需要使用该密码，或将其他客户端公钥加入服务端实现免密码)\n\n```bash\npasswd git\n```\n\n>为了保证 git 用户安全（仅使用 git 服务）借助一个名为 git-shell 的受限 shell 工具，你可以方便地将用户 git 的活动限制在与 Git 相关的范围内。\n\n首先查看 是否有 git-shell，若没有则继续添加\n```bash\n$ cat /etc/shells\n/bin/sh\n/bin/bash\n/sbin/nologin\n/bin/zsh\n```\n\n查询 git-shell 所在目录\n```bash\n$ which git-shell\n/usr/bin/git-shell\n\n\n```\n添加 git-shell 目录行余文件尾\n```bash\nsudo vim /etc/shells\n```\n\n>加入 git-shell 所在目录 /usr/bin/git-shell 至 /etc/shells 文件尾\n\n修改用户的 shell\n\n```bash\nsudo chsh git /usr/bin/git-shell # git-shell 路径\n```\n\n>这样，git 用户就只能利用 SSH 连接对 Git 仓库进行推送和拉取操作，而不能登录机器并取得普通 shell。 如果试图登录，你会发现尝试被拒绝。\n\n\n### 创建新仓库\n\n>使用 root (或非 git 用户) 登录并创建新仓库，这里我们将所有 Git 仓库放置于 /opt/git/ 文件夹下，创建名为 project.git 的 Git 仓库并初始化一个空仓库\n\n```bash\n$ cd /opt/git\n$ mkdir project.git\n$ cd project.git\ngit init --bare\nInitialized empty Git repository in /opt/git/project.git/\n```\n\n>为 git 用户创建修改本仓库的相关权限\n\n```bash\nsudo chown -R git:git /opt/git/project.git\n```\n\n## 客户端初始化 Git 仓库\n\n>所有信任的客户端都应先将公钥添加至服务端，即使我们已经为 Git 服务单独创建名为 git 的用户，我们也应该保证尽量不暴露 git 用户的密码\n\n>创建项目文件夹 myproject，初始化并提交至 project.git \n```bash\ncd myproject\ngit init\ngit add .\ngit commit -m 'initial commit'\ngit remote add origin git@服务端地址:/opt/git/project.git\ngit push origin master #推送代码至 master\n```\n\n## Clone 并参与项目\n\n>其他客户端参与项目，Clone project.git 并提交新代码\n\n```bash\ngit clone git@服务端地址:/opt/git/project.git\ncd project\ncat \"readme\" > README\ngit add README\ngit commit -m 'fix for the README file'\ngit push origin master\n```","source":"_posts/配置-Git-服务.md","raw":"---\ntitle: 配置 Git 服务\ndate: 2015-12-31 16:41:55\ntags: \n- git\n---\n\n>配置 Git 服务，创建 Git 仓库\n\n## 客户端密钥\n\n>每个需要使用 Git 的客户端都需要生成一份密钥, 首先去 ~/.ssh 查看自己是否已经有密钥\n\n```bash\n$ cd ~/.ssh/\n$ ls\nauthorized_keys   id_dsa       known_hosts\nconfig            id_dsa.pub\n```\n>默认命名为 id_dsa / id_rsa 个人文件夹目录 ~/.ssh/\n\n>其中一个带有 .pub 扩展名， .pub 文件是你的公钥，另一个则是私钥。 如果找不到这样的文件（或者根本没有 .ssh 目录），你可以通过运行 ssh-keygen 程序来创建它们。\n\n\n### 生成密钥\n\n<!-- more -->\n```bash\n$ ssh-keygen\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/root/.ssh/id_rsa):  //你可以选择保存文件的位置或者直接回车使用默认位置\nCreated directory '/root/.ssh'.\nEnter passphrase (empty for no passphrase):  // 如果不想使用时输入密码 直接按回车\nEnter same passphrase again: \nYour identification has been saved in /root/.ssh/id_rsa.\nYour public key has been saved in /root/.ssh/id_rsa.pub.\nThe key fingerprint is:\n08:5e:fe:16:c8:e9:4f:65:4d:dd:2d:01:a1:1f:7b:f9\n```\n\n>生成了客户端自己的一对密钥于 ~/.ssh/id_rsa\n\n## 服务端设置\n\n### 添加新用户\n\n>添加为了 git 的用户来仅创建或修改 Git 仓库相关的内容，禁止该用户登录和其他操作\n\n#### 首先登录 root 用户，创建该用户\n```bash\nsudo adduser git\n```\n\n#### 切换至 git 用户\n```bash\nsu git\n```\n\n#### 创建 authorized_keys 并加入需要使用 Git 仓库客户端的 公钥\n```bash\ncd \nmkdir .ssh && chmod 700 .ssh\ntouch .ssh/authorized_keys && chmod 600 .ssh/authorized_keys\n```\n\n>将我们信任的开发者密钥(即第一步客户端生成的密钥)加入 authorized_keys 中，多个用户可多次添加至 authorized_keys 文件中\n```bash\ncat /tmp/zacklee.pub >> ~/.ssh/authorized_keys\n```\n\n#### 保证 git 用户安全 (仅可使用 Git 服务)\n\n>切换回 root 用户，为 git 用户创建密码并禁止 git 用户的活动范围\n\n```bash\nsu root\n```\n\n> 为 git 用户创建密码 (客户端使用 Git 服务时需要使用该密码，或将其他客户端公钥加入服务端实现免密码)\n\n```bash\npasswd git\n```\n\n>为了保证 git 用户安全（仅使用 git 服务）借助一个名为 git-shell 的受限 shell 工具，你可以方便地将用户 git 的活动限制在与 Git 相关的范围内。\n\n首先查看 是否有 git-shell，若没有则继续添加\n```bash\n$ cat /etc/shells\n/bin/sh\n/bin/bash\n/sbin/nologin\n/bin/zsh\n```\n\n查询 git-shell 所在目录\n```bash\n$ which git-shell\n/usr/bin/git-shell\n\n\n```\n添加 git-shell 目录行余文件尾\n```bash\nsudo vim /etc/shells\n```\n\n>加入 git-shell 所在目录 /usr/bin/git-shell 至 /etc/shells 文件尾\n\n修改用户的 shell\n\n```bash\nsudo chsh git /usr/bin/git-shell # git-shell 路径\n```\n\n>这样，git 用户就只能利用 SSH 连接对 Git 仓库进行推送和拉取操作，而不能登录机器并取得普通 shell。 如果试图登录，你会发现尝试被拒绝。\n\n\n### 创建新仓库\n\n>使用 root (或非 git 用户) 登录并创建新仓库，这里我们将所有 Git 仓库放置于 /opt/git/ 文件夹下，创建名为 project.git 的 Git 仓库并初始化一个空仓库\n\n```bash\n$ cd /opt/git\n$ mkdir project.git\n$ cd project.git\ngit init --bare\nInitialized empty Git repository in /opt/git/project.git/\n```\n\n>为 git 用户创建修改本仓库的相关权限\n\n```bash\nsudo chown -R git:git /opt/git/project.git\n```\n\n## 客户端初始化 Git 仓库\n\n>所有信任的客户端都应先将公钥添加至服务端，即使我们已经为 Git 服务单独创建名为 git 的用户，我们也应该保证尽量不暴露 git 用户的密码\n\n>创建项目文件夹 myproject，初始化并提交至 project.git \n```bash\ncd myproject\ngit init\ngit add .\ngit commit -m 'initial commit'\ngit remote add origin git@服务端地址:/opt/git/project.git\ngit push origin master #推送代码至 master\n```\n\n## Clone 并参与项目\n\n>其他客户端参与项目，Clone project.git 并提交新代码\n\n```bash\ngit clone git@服务端地址:/opt/git/project.git\ncd project\ncat \"readme\" > README\ngit add README\ngit commit -m 'fix for the README file'\ngit push origin master\n```","slug":"配置-Git-服务","published":1,"updated":"2023-03-06T13:38:31.461Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clewvkq3d003mfb8hhxlmegl1","content":"<blockquote>\n<p>配置 Git 服务，创建 Git 仓库</p>\n</blockquote>\n<h2 id=\"客户端密钥\"><a href=\"#客户端密钥\" class=\"headerlink\" title=\"客户端密钥\"></a>客户端密钥</h2><blockquote>\n<p>每个需要使用 Git 的客户端都需要生成一份密钥, 首先去 ~&#x2F;.ssh 查看自己是否已经有密钥</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/.ssh/</span><br><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br><span class=\"line\">authorized_keys   id_dsa       known_hosts</span><br><span class=\"line\">config            id_dsa.pub</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>默认命名为 id_dsa &#x2F; id_rsa 个人文件夹目录 ~&#x2F;.ssh&#x2F;</p>\n</blockquote>\n<blockquote>\n<p>其中一个带有 .pub 扩展名， .pub 文件是你的公钥，另一个则是私钥。 如果找不到这样的文件（或者根本没有 .ssh 目录），你可以通过运行 ssh-keygen 程序来创建它们。</p>\n</blockquote>\n<h3 id=\"生成密钥\"><a href=\"#生成密钥\" class=\"headerlink\" title=\"生成密钥\"></a>生成密钥</h3><span id=\"more\"></span>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen</span><br><span class=\"line\">Generating public/private rsa key pair.</span><br><span class=\"line\">Enter file <span class=\"keyword\">in</span> <span class=\"built_in\">which</span> to save the key (/root/.ssh/id_rsa):  //你可以选择保存文件的位置或者直接回车使用默认位置</span><br><span class=\"line\">Created directory <span class=\"string\">&#x27;/root/.ssh&#x27;</span>.</span><br><span class=\"line\">Enter passphrase (empty <span class=\"keyword\">for</span> no passphrase):  // 如果不想使用时输入密码 直接按回车</span><br><span class=\"line\">Enter same passphrase again: </span><br><span class=\"line\">Your identification has been saved <span class=\"keyword\">in</span> /root/.ssh/id_rsa.</span><br><span class=\"line\">Your public key has been saved <span class=\"keyword\">in</span> /root/.ssh/id_rsa.pub.</span><br><span class=\"line\">The key fingerprint is:</span><br><span class=\"line\">08:5e:fe:16:c8:e9:4f:65:4d:<span class=\"built_in\">dd</span>:2d:01:a1:1f:7b:f9</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>生成了客户端自己的一对密钥于 ~&#x2F;.ssh&#x2F;id_rsa</p>\n</blockquote>\n<h2 id=\"服务端设置\"><a href=\"#服务端设置\" class=\"headerlink\" title=\"服务端设置\"></a>服务端设置</h2><h3 id=\"添加新用户\"><a href=\"#添加新用户\" class=\"headerlink\" title=\"添加新用户\"></a>添加新用户</h3><blockquote>\n<p>添加为了 git 的用户来仅创建或修改 Git 仓库相关的内容，禁止该用户登录和其他操作</p>\n</blockquote>\n<h4 id=\"首先登录-root-用户，创建该用户\"><a href=\"#首先登录-root-用户，创建该用户\" class=\"headerlink\" title=\"首先登录 root 用户，创建该用户\"></a>首先登录 root 用户，创建该用户</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo adduser git</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"切换至-git-用户\"><a href=\"#切换至-git-用户\" class=\"headerlink\" title=\"切换至 git 用户\"></a>切换至 git 用户</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su git</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"创建-authorized-keys-并加入需要使用-Git-仓库客户端的-公钥\"><a href=\"#创建-authorized-keys-并加入需要使用-Git-仓库客户端的-公钥\" class=\"headerlink\" title=\"创建 authorized_keys 并加入需要使用 Git 仓库客户端的 公钥\"></a>创建 authorized_keys 并加入需要使用 Git 仓库客户端的 公钥</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> </span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> .ssh &amp;&amp; <span class=\"built_in\">chmod</span> 700 .ssh</span><br><span class=\"line\"><span class=\"built_in\">touch</span> .ssh/authorized_keys &amp;&amp; <span class=\"built_in\">chmod</span> 600 .ssh/authorized_keys</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>将我们信任的开发者密钥(即第一步客户端生成的密钥)加入 authorized_keys 中，多个用户可多次添加至 authorized_keys 文件中</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> /tmp/zacklee.pub &gt;&gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"保证-git-用户安全-仅可使用-Git-服务\"><a href=\"#保证-git-用户安全-仅可使用-Git-服务\" class=\"headerlink\" title=\"保证 git 用户安全 (仅可使用 Git 服务)\"></a>保证 git 用户安全 (仅可使用 Git 服务)</h4><blockquote>\n<p>切换回 root 用户，为 git 用户创建密码并禁止 git 用户的活动范围</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su root</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>为 git 用户创建密码 (客户端使用 Git 服务时需要使用该密码，或将其他客户端公钥加入服务端实现免密码)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passwd git</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>为了保证 git 用户安全（仅使用 git 服务）借助一个名为 git-shell 的受限 shell 工具，你可以方便地将用户 git 的活动限制在与 Git 相关的范围内。</p>\n</blockquote>\n<p>首先查看 是否有 git-shell，若没有则继续添加</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cat</span> /etc/shells</span><br><span class=\"line\">/bin/sh</span><br><span class=\"line\">/bin/bash</span><br><span class=\"line\">/sbin/nologin</span><br><span class=\"line\">/bin/zsh</span><br></pre></td></tr></table></figure>\n\n<p>查询 git-shell 所在目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">which</span> git-shell</span><br><span class=\"line\">/usr/bin/git-shell</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>添加 git-shell 目录行余文件尾</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/shells</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>加入 git-shell 所在目录 &#x2F;usr&#x2F;bin&#x2F;git-shell 至 &#x2F;etc&#x2F;shells 文件尾</p>\n</blockquote>\n<p>修改用户的 shell</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chsh git /usr/bin/git-shell <span class=\"comment\"># git-shell 路径</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>这样，git 用户就只能利用 SSH 连接对 Git 仓库进行推送和拉取操作，而不能登录机器并取得普通 shell。 如果试图登录，你会发现尝试被拒绝。</p>\n</blockquote>\n<h3 id=\"创建新仓库\"><a href=\"#创建新仓库\" class=\"headerlink\" title=\"创建新仓库\"></a>创建新仓库</h3><blockquote>\n<p>使用 root (或非 git 用户) 登录并创建新仓库，这里我们将所有 Git 仓库放置于 &#x2F;opt&#x2F;git&#x2F; 文件夹下，创建名为 project.git 的 Git 仓库并初始化一个空仓库</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> /opt/git</span><br><span class=\"line\">$ <span class=\"built_in\">mkdir</span> project.git</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> project.git</span><br><span class=\"line\">git init --bare</span><br><span class=\"line\">Initialized empty Git repository <span class=\"keyword\">in</span> /opt/git/project.git/</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>为 git 用户创建修改本仓库的相关权限</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo <span class=\"built_in\">chown</span> -R git:git /opt/git/project.git</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"客户端初始化-Git-仓库\"><a href=\"#客户端初始化-Git-仓库\" class=\"headerlink\" title=\"客户端初始化 Git 仓库\"></a>客户端初始化 Git 仓库</h2><blockquote>\n<p>所有信任的客户端都应先将公钥添加至服务端，即使我们已经为 Git 服务单独创建名为 git 的用户，我们也应该保证尽量不暴露 git 用户的密码</p>\n</blockquote>\n<blockquote>\n<p>创建项目文件夹 myproject，初始化并提交至 project.git </p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> myproject</span><br><span class=\"line\">git init</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&#x27;initial commit&#x27;</span></span><br><span class=\"line\">git remote add origin git@服务端地址:/opt/git/project.git</span><br><span class=\"line\">git push origin master <span class=\"comment\">#推送代码至 master</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Clone-并参与项目\"><a href=\"#Clone-并参与项目\" class=\"headerlink\" title=\"Clone 并参与项目\"></a>Clone 并参与项目</h2><blockquote>\n<p>其他客户端参与项目，Clone project.git 并提交新代码</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> git@服务端地址:/opt/git/project.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> project</span><br><span class=\"line\"><span class=\"built_in\">cat</span> <span class=\"string\">&quot;readme&quot;</span> &gt; README</span><br><span class=\"line\">git add README</span><br><span class=\"line\">git commit -m <span class=\"string\">&#x27;fix for the README file&#x27;</span></span><br><span class=\"line\">git push origin master</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<blockquote>\n<p>配置 Git 服务，创建 Git 仓库</p>\n</blockquote>\n<h2 id=\"客户端密钥\"><a href=\"#客户端密钥\" class=\"headerlink\" title=\"客户端密钥\"></a>客户端密钥</h2><blockquote>\n<p>每个需要使用 Git 的客户端都需要生成一份密钥, 首先去 ~&#x2F;.ssh 查看自己是否已经有密钥</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/.ssh/</span><br><span class=\"line\">$ <span class=\"built_in\">ls</span></span><br><span class=\"line\">authorized_keys   id_dsa       known_hosts</span><br><span class=\"line\">config            id_dsa.pub</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>默认命名为 id_dsa &#x2F; id_rsa 个人文件夹目录 ~&#x2F;.ssh&#x2F;</p>\n</blockquote>\n<blockquote>\n<p>其中一个带有 .pub 扩展名， .pub 文件是你的公钥，另一个则是私钥。 如果找不到这样的文件（或者根本没有 .ssh 目录），你可以通过运行 ssh-keygen 程序来创建它们。</p>\n</blockquote>\n<h3 id=\"生成密钥\"><a href=\"#生成密钥\" class=\"headerlink\" title=\"生成密钥\"></a>生成密钥</h3>","more":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen</span><br><span class=\"line\">Generating public/private rsa key pair.</span><br><span class=\"line\">Enter file <span class=\"keyword\">in</span> <span class=\"built_in\">which</span> to save the key (/root/.ssh/id_rsa):  //你可以选择保存文件的位置或者直接回车使用默认位置</span><br><span class=\"line\">Created directory <span class=\"string\">&#x27;/root/.ssh&#x27;</span>.</span><br><span class=\"line\">Enter passphrase (empty <span class=\"keyword\">for</span> no passphrase):  // 如果不想使用时输入密码 直接按回车</span><br><span class=\"line\">Enter same passphrase again: </span><br><span class=\"line\">Your identification has been saved <span class=\"keyword\">in</span> /root/.ssh/id_rsa.</span><br><span class=\"line\">Your public key has been saved <span class=\"keyword\">in</span> /root/.ssh/id_rsa.pub.</span><br><span class=\"line\">The key fingerprint is:</span><br><span class=\"line\">08:5e:fe:16:c8:e9:4f:65:4d:<span class=\"built_in\">dd</span>:2d:01:a1:1f:7b:f9</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>生成了客户端自己的一对密钥于 ~&#x2F;.ssh&#x2F;id_rsa</p>\n</blockquote>\n<h2 id=\"服务端设置\"><a href=\"#服务端设置\" class=\"headerlink\" title=\"服务端设置\"></a>服务端设置</h2><h3 id=\"添加新用户\"><a href=\"#添加新用户\" class=\"headerlink\" title=\"添加新用户\"></a>添加新用户</h3><blockquote>\n<p>添加为了 git 的用户来仅创建或修改 Git 仓库相关的内容，禁止该用户登录和其他操作</p>\n</blockquote>\n<h4 id=\"首先登录-root-用户，创建该用户\"><a href=\"#首先登录-root-用户，创建该用户\" class=\"headerlink\" title=\"首先登录 root 用户，创建该用户\"></a>首先登录 root 用户，创建该用户</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo adduser git</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"切换至-git-用户\"><a href=\"#切换至-git-用户\" class=\"headerlink\" title=\"切换至 git 用户\"></a>切换至 git 用户</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su git</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"创建-authorized-keys-并加入需要使用-Git-仓库客户端的-公钥\"><a href=\"#创建-authorized-keys-并加入需要使用-Git-仓库客户端的-公钥\" class=\"headerlink\" title=\"创建 authorized_keys 并加入需要使用 Git 仓库客户端的 公钥\"></a>创建 authorized_keys 并加入需要使用 Git 仓库客户端的 公钥</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> </span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> .ssh &amp;&amp; <span class=\"built_in\">chmod</span> 700 .ssh</span><br><span class=\"line\"><span class=\"built_in\">touch</span> .ssh/authorized_keys &amp;&amp; <span class=\"built_in\">chmod</span> 600 .ssh/authorized_keys</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>将我们信任的开发者密钥(即第一步客户端生成的密钥)加入 authorized_keys 中，多个用户可多次添加至 authorized_keys 文件中</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> /tmp/zacklee.pub &gt;&gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"保证-git-用户安全-仅可使用-Git-服务\"><a href=\"#保证-git-用户安全-仅可使用-Git-服务\" class=\"headerlink\" title=\"保证 git 用户安全 (仅可使用 Git 服务)\"></a>保证 git 用户安全 (仅可使用 Git 服务)</h4><blockquote>\n<p>切换回 root 用户，为 git 用户创建密码并禁止 git 用户的活动范围</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su root</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>为 git 用户创建密码 (客户端使用 Git 服务时需要使用该密码，或将其他客户端公钥加入服务端实现免密码)</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">passwd git</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>为了保证 git 用户安全（仅使用 git 服务）借助一个名为 git-shell 的受限 shell 工具，你可以方便地将用户 git 的活动限制在与 Git 相关的范围内。</p>\n</blockquote>\n<p>首先查看 是否有 git-shell，若没有则继续添加</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cat</span> /etc/shells</span><br><span class=\"line\">/bin/sh</span><br><span class=\"line\">/bin/bash</span><br><span class=\"line\">/sbin/nologin</span><br><span class=\"line\">/bin/zsh</span><br></pre></td></tr></table></figure>\n\n<p>查询 git-shell 所在目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">which</span> git-shell</span><br><span class=\"line\">/usr/bin/git-shell</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>添加 git-shell 目录行余文件尾</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/shells</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>加入 git-shell 所在目录 &#x2F;usr&#x2F;bin&#x2F;git-shell 至 &#x2F;etc&#x2F;shells 文件尾</p>\n</blockquote>\n<p>修改用户的 shell</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chsh git /usr/bin/git-shell <span class=\"comment\"># git-shell 路径</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>这样，git 用户就只能利用 SSH 连接对 Git 仓库进行推送和拉取操作，而不能登录机器并取得普通 shell。 如果试图登录，你会发现尝试被拒绝。</p>\n</blockquote>\n<h3 id=\"创建新仓库\"><a href=\"#创建新仓库\" class=\"headerlink\" title=\"创建新仓库\"></a>创建新仓库</h3><blockquote>\n<p>使用 root (或非 git 用户) 登录并创建新仓库，这里我们将所有 Git 仓库放置于 &#x2F;opt&#x2F;git&#x2F; 文件夹下，创建名为 project.git 的 Git 仓库并初始化一个空仓库</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> /opt/git</span><br><span class=\"line\">$ <span class=\"built_in\">mkdir</span> project.git</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> project.git</span><br><span class=\"line\">git init --bare</span><br><span class=\"line\">Initialized empty Git repository <span class=\"keyword\">in</span> /opt/git/project.git/</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>为 git 用户创建修改本仓库的相关权限</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo <span class=\"built_in\">chown</span> -R git:git /opt/git/project.git</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"客户端初始化-Git-仓库\"><a href=\"#客户端初始化-Git-仓库\" class=\"headerlink\" title=\"客户端初始化 Git 仓库\"></a>客户端初始化 Git 仓库</h2><blockquote>\n<p>所有信任的客户端都应先将公钥添加至服务端，即使我们已经为 Git 服务单独创建名为 git 的用户，我们也应该保证尽量不暴露 git 用户的密码</p>\n</blockquote>\n<blockquote>\n<p>创建项目文件夹 myproject，初始化并提交至 project.git </p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> myproject</span><br><span class=\"line\">git init</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&#x27;initial commit&#x27;</span></span><br><span class=\"line\">git remote add origin git@服务端地址:/opt/git/project.git</span><br><span class=\"line\">git push origin master <span class=\"comment\">#推送代码至 master</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Clone-并参与项目\"><a href=\"#Clone-并参与项目\" class=\"headerlink\" title=\"Clone 并参与项目\"></a>Clone 并参与项目</h2><blockquote>\n<p>其他客户端参与项目，Clone project.git 并提交新代码</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> git@服务端地址:/opt/git/project.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> project</span><br><span class=\"line\"><span class=\"built_in\">cat</span> <span class=\"string\">&quot;readme&quot;</span> &gt; README</span><br><span class=\"line\">git add README</span><br><span class=\"line\">git commit -m <span class=\"string\">&#x27;fix for the README file&#x27;</span></span><br><span class=\"line\">git push origin master</span><br></pre></td></tr></table></figure>"}],"PostAsset":[{"_id":"source/_posts/Arduino-灯光控制/light.jpg","post":"clewvkq2z0001fb8halhtcene","slug":"light.jpg","modified":1,"renderable":1},{"_id":"source/_posts/可乐/7A86E4C7-2AF1-483B-B2D4-6AE302F0D7C0.JPG","post":"clewvkq34000jfb8h03n42zc2","slug":"7A86E4C7-2AF1-483B-B2D4-6AE302F0D7C0.JPG","modified":1,"renderable":1},{"_id":"source/_posts/不锈钢盆/9A98C593-1A4D-4F5C-B795-20BD5078DAA7.JPG","post":"clewvkq34000hfb8hentaevcj","slug":"9A98C593-1A4D-4F5C-B795-20BD5078DAA7.JPG","modified":1,"renderable":1},{"_id":"source/_posts/嘴/IMG_5077.JPG","post":"clewvkq35000rfb8h225yeqg0","slug":"IMG_5077.JPG","modified":1,"renderable":1},{"_id":"source/_posts/圆柱/B35F6C8C-9AF2-40A1-AB4F-75335B34E25F.JPG","post":"clewvkq36000tfb8h7qlvae3j","slug":"B35F6C8C-9AF2-40A1-AB4F-75335B34E25F.JPG","modified":1,"renderable":1},{"_id":"source/_posts/多面体/422EF0A0-0480-4700-BD6B-707FF4F94B4F.JPG","post":"clewvkq36000wfb8hdayxa5no","slug":"422EF0A0-0480-4700-BD6B-707FF4F94B4F.JPG","modified":1,"renderable":1},{"_id":"source/_posts/木棍/619021B2-416D-4928-9D5E-4380837DD0B8.JPG","post":"clewvkq370011fb8h3g0d19it","slug":"619021B2-416D-4928-9D5E-4380837DD0B8.JPG","modified":1,"renderable":1},{"_id":"source/_posts/三棱锥/IMG_4515.JPG","post":"clewvkq370013fb8h0dvb8xzq","slug":"IMG_4515.JPG","modified":1,"renderable":1},{"_id":"source/_posts/周末/IMG_4941.JPG","post":"clewvkq36000yfb8hfy2yci4z","slug":"IMG_4941.JPG","modified":1,"renderable":1},{"_id":"source/_posts/周末/IMG_4946.JPG","post":"clewvkq36000yfb8hfy2yci4z","slug":"IMG_4946.JPG","modified":1,"renderable":1},{"_id":"source/_posts/周末/IMG_4949.JPG","post":"clewvkq36000yfb8hfy2yci4z","slug":"IMG_4949.JPG","modified":1,"renderable":1},{"_id":"source/_posts/灯泡/IMG_4928.JPG","post":"clewvkq370018fb8h52nq1xvr","slug":"IMG_4928.JPG","modified":1,"renderable":1},{"_id":"source/_posts/咖啡-耳机-钢笔/IMG_5035.JPG","post":"clewvkq35000ofb8h4nmt9kip","slug":"IMG_5035.JPG","modified":1,"renderable":1},{"_id":"source/_posts/大海与船/IMG_5057.JPG","post":"clewvkq370015fb8h6wjfdrm2","slug":"IMG_5057.JPG","modified":1,"renderable":1},{"_id":"source/_posts/夕阳/77532093-6E9E-4D3E-82C4-94E42C559901.JPG","post":"clewvkq38001afb8hgc1thdmv","slug":"77532093-6E9E-4D3E-82C4-94E42C559901.JPG","modified":1,"renderable":1},{"_id":"source/_posts/梨-纸-牛奶/EA363681-6736-4613-8434-9A044D0FEE99.JPG","post":"clewvkq38001ffb8h1jgsb1nn","slug":"EA363681-6736-4613-8434-9A044D0FEE99.JPG","modified":1,"renderable":1},{"_id":"source/_posts/眼/IMG_5067.JPG","post":"clewvkq38001ifb8h52c536ts","slug":"IMG_5067.JPG","modified":1,"renderable":1},{"_id":"source/_posts/贯穿体-圆锥/DF823592-2224-4702-AFCA-A3269B7BA43F.JPG","post":"clewvkq39001nfb8h3sr50bv8","slug":"DF823592-2224-4702-AFCA-A3269B7BA43F.JPG","modified":1,"renderable":1},{"_id":"source/_posts/苹果/IMG_4752.JPG","post":"clewvkq39001pfb8hehie8wjx","slug":"IMG_4752.JPG","modified":1,"renderable":1},{"_id":"source/_posts/贯穿体3/C04F771E-BFF9-4FCE-97B4-0239AD527C02.JPG","post":"clewvkq39001sfb8hdf4h9jiu","slug":"C04F771E-BFF9-4FCE-97B4-0239AD527C02.JPG","modified":1,"renderable":1},{"_id":"source/_posts/贯穿体2/201CB542-9CB7-4EE2-B542-E69A9516409C.JPG","post":"clewvkq3a001ufb8haeej03dd","slug":"201CB542-9CB7-4EE2-B542-E69A9516409C.JPG","modified":1,"renderable":1},{"_id":"source/_posts/贯穿体/60152184-EE8E-49C5-B646-5B94BFDC5C7B.JPG","post":"clewvkq3a001xfb8h70tw7hv1","slug":"60152184-EE8E-49C5-B646-5B94BFDC5C7B.JPG","modified":1,"renderable":1},{"_id":"source/_posts/香蕉/E891B52F-9F31-41A2-8675-20B01A581755.JPG","post":"clewvkq3a001zfb8hf7feafai","slug":"E891B52F-9F31-41A2-8675-20B01A581755.JPG","modified":1,"renderable":1},{"_id":"source/_posts/鼻/IMG_5058.JPG","post":"clewvkq3a0022fb8h4hz2042m","slug":"IMG_5058.JPG","modified":1,"renderable":1},{"_id":"source/_posts/耳/IMG_5076.JPG","post":"clewvkq39001kfb8hbrdjbcvj","slug":"IMG_5076.JPG","modified":1,"renderable":1},{"_id":"source/_posts/球/IMG_4602.JPG","post":"clewvkq38001dfb8h0rod7fpw","slug":"IMG_4602.JPG","modified":1,"renderable":1},{"_id":"source/_posts/陶罐/D1881FE2-FD18-4630-A9C5-997BD28ED27E.JPG","post":"clewvkq3b0024fb8h22ztespv","slug":"D1881FE2-FD18-4630-A9C5-997BD28ED27E.JPG","modified":1,"renderable":1},{"_id":"source/_posts/鸟/151C7835-CF5E-42FA-858D-5E23926BA4A0.JPG","post":"clewvkq3b0027fb8h2pfc3yxk","slug":"151C7835-CF5E-42FA-858D-5E23926BA4A0.JPG","modified":1,"renderable":1},{"_id":"source/_posts/眼睛/167301D8-7E55-44E2-A35D-17B4337260C6.JPG","post":"clewvkq3b0029fb8hca5sgafb","slug":"167301D8-7E55-44E2-A35D-17B4337260C6.JPG","modified":1,"renderable":1}],"PostCategory":[],"PostTag":[{"post_id":"clewvkq2w0000fb8h7yo27tco","tag_id":"clewvkq2z0002fb8hego0fmuh","_id":"clewvkq310006fb8hcysxhcv9"},{"post_id":"clewvkq2w0000fb8h7yo27tco","tag_id":"clewvkq300003fb8hd40k4unz","_id":"clewvkq310007fb8h7rbvb6dj"},{"post_id":"clewvkq2w0000fb8h7yo27tco","tag_id":"clewvkq300004fb8h0r0i5uwv","_id":"clewvkq310009fb8h2en06k8w"},{"post_id":"clewvkq2z0001fb8halhtcene","tag_id":"clewvkq2z0002fb8hego0fmuh","_id":"clewvkq31000bfb8hc0zlcrpv"},{"post_id":"clewvkq2z0001fb8halhtcene","tag_id":"clewvkq310008fb8ha410fgry","_id":"clewvkq31000cfb8hh2ijatd2"},{"post_id":"clewvkq2z0001fb8halhtcene","tag_id":"clewvkq31000afb8h0a0c8gdx","_id":"clewvkq31000dfb8hc6xc9fts"},{"post_id":"clewvkq33000efb8h9vx88irr","tag_id":"clewvkq2z0002fb8hego0fmuh","_id":"clewvkq35000lfb8hhg5j32zq"},{"post_id":"clewvkq33000efb8h9vx88irr","tag_id":"clewvkq34000gfb8hemmeau8v","_id":"clewvkq35000nfb8h97r7fan3"},{"post_id":"clewvkq35000mfb8h7y8q9bm2","tag_id":"clewvkq2z0002fb8hego0fmuh","_id":"clewvkq35000qfb8hgkg8fw9y"},{"post_id":"clewvkq35000mfb8h7y8q9bm2","tag_id":"clewvkq34000gfb8hemmeau8v","_id":"clewvkq36000sfb8hcrithcqv"},{"post_id":"clewvkq33000ffb8h9fhp9abp","tag_id":"clewvkq2z0002fb8hego0fmuh","_id":"clewvkq36000vfb8hekmbdixe"},{"post_id":"clewvkq33000ffb8h9fhp9abp","tag_id":"clewvkq34000kfb8h7uc2hbb0","_id":"clewvkq36000xfb8h07sfa2t9"},{"post_id":"clewvkq33000ffb8h9fhp9abp","tag_id":"clewvkq300004fb8h0r0i5uwv","_id":"clewvkq370010fb8hd000eel2"},{"post_id":"clewvkq36000wfb8hdayxa5no","tag_id":"clewvkq35000pfb8h93jfd332","_id":"clewvkq370012fb8hchvifk05"},{"post_id":"clewvkq36000wfb8hdayxa5no","tag_id":"clewvkq36000ufb8hdjs677ax","_id":"clewvkq370014fb8h0d8u7j9c"},{"post_id":"clewvkq34000hfb8hentaevcj","tag_id":"clewvkq35000pfb8h93jfd332","_id":"clewvkq370017fb8haxlohvsb"},{"post_id":"clewvkq34000hfb8hentaevcj","tag_id":"clewvkq36000ufb8hdjs677ax","_id":"clewvkq380019fb8h39ro5dwx"},{"post_id":"clewvkq36000yfb8hfy2yci4z","tag_id":"clewvkq35000pfb8h93jfd332","_id":"clewvkq38001cfb8h7vhe7i2p"},{"post_id":"clewvkq370011fb8h3g0d19it","tag_id":"clewvkq35000pfb8h93jfd332","_id":"clewvkq38001efb8h1g5c0zeh"},{"post_id":"clewvkq370011fb8h3g0d19it","tag_id":"clewvkq36000ufb8hdjs677ax","_id":"clewvkq38001hfb8hc3kl6zhk"},{"post_id":"clewvkq370013fb8h0dvb8xzq","tag_id":"clewvkq35000pfb8h93jfd332","_id":"clewvkq39001jfb8hdq7launh"},{"post_id":"clewvkq370013fb8h0dvb8xzq","tag_id":"clewvkq36000ufb8hdjs677ax","_id":"clewvkq39001mfb8h8myq26lp"},{"post_id":"clewvkq34000ifb8h8cpv4fe7","tag_id":"clewvkq36000zfb8h1w6e1mo1","_id":"clewvkq39001ofb8hgzoq1jas"},{"post_id":"clewvkq370018fb8h52nq1xvr","tag_id":"clewvkq35000pfb8h93jfd332","_id":"clewvkq39001rfb8hba3ed1lt"},{"post_id":"clewvkq370018fb8h52nq1xvr","tag_id":"clewvkq36000ufb8hdjs677ax","_id":"clewvkq3a001tfb8h1vsw1w4h"},{"post_id":"clewvkq38001dfb8h0rod7fpw","tag_id":"clewvkq35000pfb8h93jfd332","_id":"clewvkq3a001wfb8hc990c8yi"},{"post_id":"clewvkq38001dfb8h0rod7fpw","tag_id":"clewvkq36000ufb8hdjs677ax","_id":"clewvkq3a001yfb8h7oc67jmk"},{"post_id":"clewvkq38001ffb8h1jgsb1nn","tag_id":"clewvkq35000pfb8h93jfd332","_id":"clewvkq3a0021fb8he2xp6y6b"},{"post_id":"clewvkq38001ffb8h1jgsb1nn","tag_id":"clewvkq38001bfb8h6ax9fo4n","_id":"clewvkq3b0023fb8hff625jah"},{"post_id":"clewvkq38001ffb8h1jgsb1nn","tag_id":"clewvkq36000ufb8hdjs677ax","_id":"clewvkq3b0026fb8hebau7jpe"},{"post_id":"clewvkq34000jfb8h03n42zc2","tag_id":"clewvkq35000pfb8h93jfd332","_id":"clewvkq3b0028fb8hhkx5fobo"},{"post_id":"clewvkq34000jfb8h03n42zc2","tag_id":"clewvkq38001bfb8h6ax9fo4n","_id":"clewvkq3b002bfb8h6tms9351"},{"post_id":"clewvkq34000jfb8h03n42zc2","tag_id":"clewvkq36000ufb8hdjs677ax","_id":"clewvkq3b002cfb8h7r71h26v"},{"post_id":"clewvkq39001nfb8h3sr50bv8","tag_id":"clewvkq35000pfb8h93jfd332","_id":"clewvkq3b002efb8h4zxxdby5"},{"post_id":"clewvkq39001nfb8h3sr50bv8","tag_id":"clewvkq36000ufb8hdjs677ax","_id":"clewvkq3b002ffb8h1e036qz3"},{"post_id":"clewvkq39001pfb8hehie8wjx","tag_id":"clewvkq35000pfb8h93jfd332","_id":"clewvkq3b002hfb8hbsfy2s0o"},{"post_id":"clewvkq39001pfb8hehie8wjx","tag_id":"clewvkq36000ufb8hdjs677ax","_id":"clewvkq3c002ifb8h3coffp8p"},{"post_id":"clewvkq39001sfb8hdf4h9jiu","tag_id":"clewvkq35000pfb8h93jfd332","_id":"clewvkq3c002kfb8h2tus0k16"},{"post_id":"clewvkq39001sfb8hdf4h9jiu","tag_id":"clewvkq36000ufb8hdjs677ax","_id":"clewvkq3c002lfb8h0lkydqei"},{"post_id":"clewvkq3a001ufb8haeej03dd","tag_id":"clewvkq35000pfb8h93jfd332","_id":"clewvkq3c002nfb8h6lxu8f6k"},{"post_id":"clewvkq3a001ufb8haeej03dd","tag_id":"clewvkq36000ufb8hdjs677ax","_id":"clewvkq3c002ofb8h528cakxa"},{"post_id":"clewvkq3a001xfb8h70tw7hv1","tag_id":"clewvkq35000pfb8h93jfd332","_id":"clewvkq3c002pfb8h3icb6kh8"},{"post_id":"clewvkq3a001xfb8h70tw7hv1","tag_id":"clewvkq36000ufb8hdjs677ax","_id":"clewvkq3c002qfb8hhg8ba18v"},{"post_id":"clewvkq35000ofb8h4nmt9kip","tag_id":"clewvkq35000pfb8h93jfd332","_id":"clewvkq3c002rfb8h71xu7kwy"},{"post_id":"clewvkq35000ofb8h4nmt9kip","tag_id":"clewvkq38001bfb8h6ax9fo4n","_id":"clewvkq3c002sfb8h4ahgdgq4"},{"post_id":"clewvkq35000ofb8h4nmt9kip","tag_id":"clewvkq36000ufb8hdjs677ax","_id":"clewvkq3c002tfb8h6njdgu6p"},{"post_id":"clewvkq3a001zfb8hf7feafai","tag_id":"clewvkq35000pfb8h93jfd332","_id":"clewvkq3c002ufb8hedjq7uue"},{"post_id":"clewvkq3a001zfb8hf7feafai","tag_id":"clewvkq38001bfb8h6ax9fo4n","_id":"clewvkq3c002vfb8h7hrxg3sk"},{"post_id":"clewvkq3a001zfb8hf7feafai","tag_id":"clewvkq36000ufb8hdjs677ax","_id":"clewvkq3c002wfb8h1s8724yn"},{"post_id":"clewvkq3a0022fb8h4hz2042m","tag_id":"clewvkq35000pfb8h93jfd332","_id":"clewvkq3c002xfb8her1deg14"},{"post_id":"clewvkq3a0022fb8h4hz2042m","tag_id":"clewvkq36000ufb8hdjs677ax","_id":"clewvkq3c002yfb8h96a2h7kh"},{"post_id":"clewvkq3b0024fb8h22ztespv","tag_id":"clewvkq35000pfb8h93jfd332","_id":"clewvkq3c002zfb8havuy5ogc"},{"post_id":"clewvkq3b0024fb8h22ztespv","tag_id":"clewvkq38001bfb8h6ax9fo4n","_id":"clewvkq3c0030fb8hcn533vks"},{"post_id":"clewvkq3b0024fb8h22ztespv","tag_id":"clewvkq36000ufb8hdjs677ax","_id":"clewvkq3c0031fb8h1ttq5tfi"},{"post_id":"clewvkq3b0027fb8h2pfc3yxk","tag_id":"clewvkq35000pfb8h93jfd332","_id":"clewvkq3c0032fb8h4z4c01r4"},{"post_id":"clewvkq3b0027fb8h2pfc3yxk","tag_id":"clewvkq36000ufb8hdjs677ax","_id":"clewvkq3c0033fb8hbbo340oi"},{"post_id":"clewvkq35000rfb8h225yeqg0","tag_id":"clewvkq35000pfb8h93jfd332","_id":"clewvkq3c0034fb8h3roqd608"},{"post_id":"clewvkq35000rfb8h225yeqg0","tag_id":"clewvkq3a0020fb8h21b654u9","_id":"clewvkq3c0035fb8hem3geerb"},{"post_id":"clewvkq35000rfb8h225yeqg0","tag_id":"clewvkq36000ufb8hdjs677ax","_id":"clewvkq3c0036fb8h0xxl92h9"},{"post_id":"clewvkq3b0029fb8hca5sgafb","tag_id":"clewvkq35000pfb8h93jfd332","_id":"clewvkq3c0037fb8hdor638v4"},{"post_id":"clewvkq3b0029fb8hca5sgafb","tag_id":"clewvkq3a0020fb8h21b654u9","_id":"clewvkq3c0038fb8h2l3a1rjl"},{"post_id":"clewvkq3b0029fb8hca5sgafb","tag_id":"clewvkq36000ufb8hdjs677ax","_id":"clewvkq3c0039fb8h51n80e7f"},{"post_id":"clewvkq36000tfb8h7qlvae3j","tag_id":"clewvkq35000pfb8h93jfd332","_id":"clewvkq3c003afb8hhqtegoiw"},{"post_id":"clewvkq36000tfb8h7qlvae3j","tag_id":"clewvkq36000ufb8hdjs677ax","_id":"clewvkq3c003bfb8h350q2tqy"},{"post_id":"clewvkq370015fb8h6wjfdrm2","tag_id":"clewvkq35000pfb8h93jfd332","_id":"clewvkq3c003cfb8hevg5hj1r"},{"post_id":"clewvkq370015fb8h6wjfdrm2","tag_id":"clewvkq3b002dfb8hg5xb5i6d","_id":"clewvkq3c003dfb8h0i4k8ppg"},{"post_id":"clewvkq38001afb8hgc1thdmv","tag_id":"clewvkq35000pfb8h93jfd332","_id":"clewvkq3c003efb8h08sicu98"},{"post_id":"clewvkq38001afb8hgc1thdmv","tag_id":"clewvkq3b002dfb8hg5xb5i6d","_id":"clewvkq3c003ffb8h454le10m"},{"post_id":"clewvkq38001ifb8h52c536ts","tag_id":"clewvkq35000pfb8h93jfd332","_id":"clewvkq3c003gfb8h1b3k1h88"},{"post_id":"clewvkq38001ifb8h52c536ts","tag_id":"clewvkq3a0020fb8h21b654u9","_id":"clewvkq3c003hfb8hgosy7j3m"},{"post_id":"clewvkq38001ifb8h52c536ts","tag_id":"clewvkq36000ufb8hdjs677ax","_id":"clewvkq3c003ifb8h79o11hc2"},{"post_id":"clewvkq39001kfb8hbrdjbcvj","tag_id":"clewvkq35000pfb8h93jfd332","_id":"clewvkq3c003jfb8hc0b7f93w"},{"post_id":"clewvkq39001kfb8hbrdjbcvj","tag_id":"clewvkq3a0020fb8h21b654u9","_id":"clewvkq3c003kfb8he0p1fqlq"},{"post_id":"clewvkq39001kfb8hbrdjbcvj","tag_id":"clewvkq36000ufb8hdjs677ax","_id":"clewvkq3c003lfb8hgkhj701q"},{"post_id":"clewvkq3d003mfb8hhxlmegl1","tag_id":"clewvkq3d003nfb8hekrt8rux","_id":"clewvkq3d003ofb8hh3u77onb"}],"Tag":[{"name":"dev","_id":"clewvkq2z0002fb8hego0fmuh"},{"name":"mongodb","_id":"clewvkq300003fb8hd40k4unz"},{"name":"数据库","_id":"clewvkq300004fb8h0r0i5uwv"},{"name":"arduino","_id":"clewvkq310008fb8ha410fgry"},{"name":"单片机","_id":"clewvkq31000afb8h0a0c8gdx"},{"name":"vim","_id":"clewvkq34000gfb8hemmeau8v"},{"name":"mysql","_id":"clewvkq34000kfb8h7uc2hbb0"},{"name":"画","_id":"clewvkq35000pfb8h93jfd332"},{"name":"素描","_id":"clewvkq36000ufb8hdjs677ax"},{"name":"系统","_id":"clewvkq36000zfb8h1w6e1mo1"},{"name":"静物","_id":"clewvkq38001bfb8h6ax9fo4n"},{"name":"石膏","_id":"clewvkq3a0020fb8h21b654u9"},{"name":"油画","_id":"clewvkq3b002dfb8hg5xb5i6d"},{"name":"git","_id":"clewvkq3d003nfb8hekrt8rux"}]}}